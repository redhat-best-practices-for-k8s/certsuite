{
  "data": [
    {
      "_id": "63344a23c8ae8d70b75c8be4",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixIngressController",
          "metadata": {
            "name": "citrixingresscontroller-sample"
          },
          "spec": {
            "adcCredentialSecret": "",
            "affinity": {},
            "analyticsConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": "",
                "service": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 30002
              },
              "transactions": {
                "enable": false,
                "port": 30001
              }
            },
            "clusterName": "",
            "cncPbr": false,
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "disableAPIServerCertVerify": false,
            "disableOpenshiftRoutes": false,
            "entityPrefix": "",
            "exporter": {
              "extraVolumeMounts": [],
              "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false,
              "resources": {}
            },
            "extraVolumeMounts": [],
            "extraVolumes": [],
            "fullnameOverride": "",
            "ignoreNodeExternalIP": false,
            "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
            "imagePullSecrets": [],
            "ingressClass": [],
            "ipam": false,
            "jsonLog": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "nameOverride": "",
            "namespaceLabels": "",
            "nitroReadTimeout": 20,
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nodeWatch": false,
            "nsConfigDnsRec": false,
            "nsCookieVersion": "0",
            "nsDnsNameserver": "",
            "nsEnableLabel": true,
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "x.x.x.x",
            "nsLbHashAlgo": {
              "hashAlgorithm": "DEFAULT",
              "hashFingers": 256,
              "required": false
            },
            "nsPort": 443,
            "nsProtocol": "HTTPS",
            "nsSNIPS": [],
            "nsSvcLbDnsRec": false,
            "nsVIP": "",
            "openshift": true,
            "optimizeEndpointBinding": false,
            "podAnnotations": {},
            "podIPsforServiceGroupMembers": false,
            "pullPolicy": "IfNotPresent",
            "resources": {},
            "routeLabels": "",
            "secretStore": {
              "enabled": false,
              "password": {},
              "username": {}
            },
            "serviceAccount": {
              "create": true
            },
            "serviceClass": [],
            "setAsDefaultIngressClass": false,
            "tolerations": [],
            "updateIngressStatus": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-bundle@sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "bundle_path_digest": "sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-28T13:20:35.937000+00:00",
      "csv_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an OpenShift environment.",
      "csv_display_name": "Citrix Ingress Controller",
      "csv_metadata_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an Openshift environment.",
      "csv_name": "citrix-ingress-controller-operator.v1.26.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:47:50.308000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "citrix-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixIngressController",
          "plural": "citrixingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Citrix",
      "related_images": [
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "cic"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "exporter"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "citrix-k8s-ingress-controller-bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4-annotation"
        },
        {
          "digest": "sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "manager"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "citrix-k8s-ingress-controller-2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01-annotation"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "citrix-adc-metrics-exporter-2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.18.5 <1.26.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.26.7",
      "version_original": "1.26.7"
    },
    {
      "_id": "63344ac9eb10d77b66495cab",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixIngressController",
          "metadata": {
            "name": "citrixingresscontroller-sample"
          },
          "spec": {
            "adcCredentialSecret": "",
            "affinity": {},
            "analyticsConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": "",
                "service": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 30002
              },
              "transactions": {
                "enable": false,
                "port": 30001
              }
            },
            "clusterName": "",
            "cncPbr": false,
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "disableAPIServerCertVerify": false,
            "disableOpenshiftRoutes": false,
            "entityPrefix": "",
            "exporter": {
              "extraVolumeMounts": [],
              "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false,
              "resources": {}
            },
            "extraVolumeMounts": [],
            "extraVolumes": [],
            "fullnameOverride": "",
            "ignoreNodeExternalIP": false,
            "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
            "imagePullSecrets": [],
            "ingressClass": [],
            "ipam": false,
            "jsonLog": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "nameOverride": "",
            "namespaceLabels": "",
            "nitroReadTimeout": 20,
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nodeWatch": false,
            "nsConfigDnsRec": false,
            "nsCookieVersion": "0",
            "nsDnsNameserver": "",
            "nsEnableLabel": true,
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "x.x.x.x",
            "nsLbHashAlgo": {
              "hashAlgorithm": "DEFAULT",
              "hashFingers": 256,
              "required": false
            },
            "nsPort": 443,
            "nsProtocol": "HTTPS",
            "nsSNIPS": [],
            "nsSvcLbDnsRec": false,
            "nsVIP": "",
            "openshift": true,
            "optimizeEndpointBinding": false,
            "podAnnotations": {},
            "podIPsforServiceGroupMembers": false,
            "pullPolicy": "IfNotPresent",
            "resources": {},
            "routeLabels": "",
            "secretStore": {
              "enabled": false,
              "password": {},
              "username": {}
            },
            "serviceAccount": {
              "create": true
            },
            "serviceClass": [],
            "setAsDefaultIngressClass": false,
            "tolerations": [],
            "updateIngressStatus": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-bundle@sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "bundle_path_digest": "sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-28T13:23:21.203000+00:00",
      "csv_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an OpenShift environment.",
      "csv_display_name": "Citrix Ingress Controller",
      "csv_metadata_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an Openshift environment.",
      "csv_name": "citrix-ingress-controller-operator.v1.26.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T12:03:06.114000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "citrix-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixIngressController",
          "version": "v1alpha1"
        }
      ],
      "provider": "Citrix",
      "related_images": [
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "cic"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "exporter"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "citrix-k8s-ingress-controller-bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4-annotation"
        },
        {
          "digest": "sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "manager"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "citrix-k8s-ingress-controller-2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01-annotation"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "citrix-adc-metrics-exporter-2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.18.5 <1.26.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.26.7",
      "version_original": "1.26.7"
    },
    {
      "_id": "63344bc69bb8b51dd3580633",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixIngressController",
          "metadata": {
            "name": "citrixingresscontroller-sample"
          },
          "spec": {
            "adcCredentialSecret": "",
            "affinity": {},
            "analyticsConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": "",
                "service": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 30002
              },
              "transactions": {
                "enable": false,
                "port": 30001
              }
            },
            "clusterName": "",
            "cncPbr": false,
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "disableAPIServerCertVerify": false,
            "disableOpenshiftRoutes": false,
            "entityPrefix": "",
            "exporter": {
              "extraVolumeMounts": [],
              "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false,
              "resources": {}
            },
            "extraVolumeMounts": [],
            "extraVolumes": [],
            "fullnameOverride": "",
            "ignoreNodeExternalIP": false,
            "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
            "imagePullSecrets": [],
            "ingressClass": [],
            "ipam": false,
            "jsonLog": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "nameOverride": "",
            "namespaceLabels": "",
            "nitroReadTimeout": 20,
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nodeWatch": false,
            "nsConfigDnsRec": false,
            "nsCookieVersion": "0",
            "nsDnsNameserver": "",
            "nsEnableLabel": true,
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "x.x.x.x",
            "nsLbHashAlgo": {
              "hashAlgorithm": "DEFAULT",
              "hashFingers": 256,
              "required": false
            },
            "nsPort": 443,
            "nsProtocol": "HTTPS",
            "nsSNIPS": [],
            "nsSvcLbDnsRec": false,
            "nsVIP": "",
            "openshift": true,
            "optimizeEndpointBinding": false,
            "podAnnotations": {},
            "podIPsforServiceGroupMembers": false,
            "pullPolicy": "IfNotPresent",
            "resources": {},
            "routeLabels": "",
            "secretStore": {
              "enabled": false,
              "password": {},
              "username": {}
            },
            "serviceAccount": {
              "create": true
            },
            "serviceClass": [],
            "setAsDefaultIngressClass": false,
            "tolerations": [],
            "updateIngressStatus": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-bundle@sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "bundle_path_digest": "sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-28T13:27:34.280000+00:00",
      "csv_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an OpenShift environment.",
      "csv_display_name": "Citrix Ingress Controller",
      "csv_metadata_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an Openshift environment.",
      "csv_name": "citrix-ingress-controller-operator.v1.26.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:21:31.612000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "citrix-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixIngressController",
          "version": "v1alpha1"
        }
      ],
      "provider": "Citrix",
      "related_images": [
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "cic"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "exporter"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "citrix-k8s-ingress-controller-bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4-annotation"
        },
        {
          "digest": "sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "manager"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "citrix-k8s-ingress-controller-2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01-annotation"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "citrix-adc-metrics-exporter-2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.18.5 <1.26.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.26.7",
      "version_original": "1.26.7"
    },
    {
      "_id": "6334fdbed56957cd2e72d0b1",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "2022.3.0-1"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:c27eaa0ae4a19b1f6a3721f089182e6750030e8669d6aac5b0c19de081bad262",
      "bundle_path_digest": "sha256:c27eaa0ae4a19b1f6a3721f089182e6750030e8669d6aac5b0c19de081bad262",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-29T02:06:54.138000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2022.3.92622",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:56:40.141000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:a404f117fbfe37d607127001ef5b088972481ecc9f71e064f533da4f08c7bff1",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:a404f117fbfe37d607127001ef5b088972481ecc9f71e064f533da4f08c7bff1",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2022.3.92622",
      "version_original": "2022.3.92622"
    },
    {
      "_id": "6335ce843e77eb509cc14159",
      "alm_examples": [
        {
          "api_version": "minio.min.io/v2",
          "kind": "Tenant",
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/minio/v2/metrics/cluster",
              "prometheus.io/port": "9000",
              "prometheus.io/scrape": "true"
            },
            "labels": {
              "app": "minio"
            },
            "name": "storage-lite",
            "namespace": "tenant-lite"
          },
          "spec": {
            "certConfig": {},
            "configuration": {
              "name": "storage-configuration"
            },
            "env": [],
            "externalCaCertSecret": [],
            "externalCertSecret": [],
            "externalClientCertSecrets": [],
            "features": {
              "bucketDNS": false,
              "domains": {}
            },
            "image": "quay.io/minio/minio@sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
            "imagePullSecret": {},
            "log": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "audit": {
                "diskCapacityGB": 1
              },
              "db": {
                "affinity": {
                  "nodeAffinity": {},
                  "podAffinity": {},
                  "podAntiAffinity": {}
                },
                "annotations": {},
                "env": [],
                "image": "",
                "initimage": "",
                "labels": {},
                "nodeSelector": {},
                "resources": {},
                "securityContext": {
                  "fsGroup": 999,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 999
                },
                "serviceAccountName": "",
                "tolerations": [],
                "volumeClaimTemplate": {
                  "metadata": {},
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "1Gi"
                      }
                    },
                    "storageClassName": "standard"
                  }
                }
              },
              "env": [],
              "image": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "tolerations": []
            },
            "mountPath": "/export",
            "podManagementPolicy": "Parallel",
            "pools": [
              {
                "name": "pool-0",
                "servers": 4,
                "volumeClaimTemplate": {
                  "metadata": {
                    "name": "data"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                },
                "volumesPerServer": 2
              }
            ],
            "priorityClassName": "",
            "prometheus": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "diskCapacityGB": 1,
              "env": [],
              "image": "",
              "initimage": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "sidecarimage": "",
              "storageClassName": "standard"
            },
            "requestAutoCert": true,
            "serviceAccountName": "",
            "serviceMetadata": {
              "consoleServiceAnnotations": {},
              "consoleServiceLabels": {},
              "minioServiceAnnotations": {},
              "minioServiceLabels": {}
            },
            "subPath": "",
            "users": [
              {
                "name": "storage-user"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/minio/minio-operator1@sha256:99bb38441429e0fc651364ecc4ea2051b2b1a558a61ca5fc83a03a79f6a28405",
      "bundle_path_digest": "sha256:99bb38441429e0fc651364ecc4ea2051b2b1a558a61ca5fc83a03a79f6a28405",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-29T16:57:40.931000+00:00",
      "csv_description": "## Overview\n\n\nThe MinIO Operator brings native support for deploying and managing MinIO\ndeployments (\u201cMinIO Tenants\u201d) on a Kubernetes cluster.\n\n\nMinIO is a high performance, Kubernetes native object storage suite. With an\nextensive list of enterprise features, it is scalable, secure and resilient\nwhile remaining remarkably simple to deploy and operate at scale.\nSoftware-defined, MinIO can run on any infrastructure and in any cloud -\npublic, private or edge. MinIO is the world's fastest object storage and can\nrun the broadest set of workloads in the industry. It is widely considered\nto be the leader in compatibility with Amazon's S3 API.\n\n## Features\n\n\nThe MinIO Operator takes care of the deployment of MinIO Tenant along with:\n\n* TLS Certificate Management\n\n* Configuration of the encryption at rest\n\n* Cluster expansion\n\n* Hot Updates\n\n* Users and Buckets bootstrapping\n\n## Prerequisites for enabling this Operator\n\n* At least Kubernetes 1.18\n\n* [CSR\nCapability](https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/)\nmust be enabled\n\n* Locally attached volumes for performance or some CSI to provision block\nstorage to the MinIO pods.",
      "csv_display_name": "Minio Operator",
      "csv_metadata_description": "MinIO is a Kubernetes-native high performance object store with an\nS3-compatible API. The MinIO Operator supports deploying MinIO Tenants\nonto any Kubernetes.",
      "csv_name": "minio-operator.v4.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:53:27.534000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "minio-operator",
      "provided_apis": [
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1"
        },
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v2"
        }
      ],
      "provider": "MinIO Inc",
      "related_images": [
        {
          "digest": "sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "image": "quay.io/minio/operator@sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "name": "operator-5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935-annotation"
        },
        {
          "digest": "sha256:8dce83e096fb72373aa27634f5d9d0cad574d6d89dd4d89f9b27334d77e7465e",
          "image": "quay.io/minio/console@sha256:8dce83e096fb72373aa27634f5d9d0cad574d6d89dd4d89f9b27334d77e7465e",
          "name": "console"
        },
        {
          "digest": "sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "image": "quay.io/minio/operator@sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "name": "minio-operator"
        },
        {
          "digest": "sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
          "image": "quay.io/minio/minio@sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
          "name": "minio-c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "4.5.1",
      "version_original": "4.5.1"
    },
    {
      "_id": "6335cf282bdd76944b901657",
      "alm_examples": [
        {
          "api_version": "minio.min.io/v2",
          "kind": "Tenant",
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/minio/v2/metrics/cluster",
              "prometheus.io/port": "9000",
              "prometheus.io/scrape": "true"
            },
            "labels": {
              "app": "minio"
            },
            "name": "storage-lite",
            "namespace": "tenant-lite"
          },
          "spec": {
            "certConfig": {},
            "configuration": {
              "name": "storage-configuration"
            },
            "env": [],
            "externalCaCertSecret": [],
            "externalCertSecret": [],
            "externalClientCertSecrets": [],
            "features": {
              "bucketDNS": false,
              "domains": {}
            },
            "image": "quay.io/minio/minio@sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
            "imagePullSecret": {},
            "log": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "audit": {
                "diskCapacityGB": 1
              },
              "db": {
                "affinity": {
                  "nodeAffinity": {},
                  "podAffinity": {},
                  "podAntiAffinity": {}
                },
                "annotations": {},
                "env": [],
                "image": "",
                "initimage": "",
                "labels": {},
                "nodeSelector": {},
                "resources": {},
                "securityContext": {
                  "fsGroup": 999,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 999
                },
                "serviceAccountName": "",
                "tolerations": [],
                "volumeClaimTemplate": {
                  "metadata": {},
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "1Gi"
                      }
                    },
                    "storageClassName": "standard"
                  }
                }
              },
              "env": [],
              "image": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "tolerations": []
            },
            "mountPath": "/export",
            "podManagementPolicy": "Parallel",
            "pools": [
              {
                "name": "pool-0",
                "servers": 4,
                "volumeClaimTemplate": {
                  "metadata": {
                    "name": "data"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                },
                "volumesPerServer": 2
              }
            ],
            "priorityClassName": "",
            "prometheus": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "diskCapacityGB": 1,
              "env": [],
              "image": "",
              "initimage": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "sidecarimage": "",
              "storageClassName": "standard"
            },
            "requestAutoCert": true,
            "serviceAccountName": "",
            "serviceMetadata": {
              "consoleServiceAnnotations": {},
              "consoleServiceLabels": {},
              "minioServiceAnnotations": {},
              "minioServiceLabels": {}
            },
            "subPath": "",
            "users": [
              {
                "name": "storage-user"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/minio/minio-operator1@sha256:99bb38441429e0fc651364ecc4ea2051b2b1a558a61ca5fc83a03a79f6a28405",
      "bundle_path_digest": "sha256:99bb38441429e0fc651364ecc4ea2051b2b1a558a61ca5fc83a03a79f6a28405",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-29T17:00:24.291000+00:00",
      "csv_description": "## Overview\n\n\nThe MinIO Operator brings native support for deploying and managing MinIO\ndeployments (\u201cMinIO Tenants\u201d) on a Kubernetes cluster.\n\n\nMinIO is a high performance, Kubernetes native object storage suite. With an\nextensive list of enterprise features, it is scalable, secure and resilient\nwhile remaining remarkably simple to deploy and operate at scale.\nSoftware-defined, MinIO can run on any infrastructure and in any cloud -\npublic, private or edge. MinIO is the world's fastest object storage and can\nrun the broadest set of workloads in the industry. It is widely considered\nto be the leader in compatibility with Amazon's S3 API.\n\n## Features\n\n\nThe MinIO Operator takes care of the deployment of MinIO Tenant along with:\n\n* TLS Certificate Management\n\n* Configuration of the encryption at rest\n\n* Cluster expansion\n\n* Hot Updates\n\n* Users and Buckets bootstrapping\n\n## Prerequisites for enabling this Operator\n\n* At least Kubernetes 1.18\n\n* [CSR\nCapability](https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/)\nmust be enabled\n\n* Locally attached volumes for performance or some CSI to provision block\nstorage to the MinIO pods.",
      "csv_display_name": "Minio Operator",
      "csv_metadata_description": "MinIO is a Kubernetes-native high performance object store with an\nS3-compatible API. The MinIO Operator supports deploying MinIO Tenants\nonto any Kubernetes.",
      "csv_name": "minio-operator.v4.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:10:20.822000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "minio-operator",
      "provided_apis": [
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "version": "v1"
        },
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "version": "v2"
        }
      ],
      "provider": "MinIO Inc",
      "related_images": [
        {
          "digest": "sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "image": "quay.io/minio/operator@sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "name": "operator-5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935-annotation"
        },
        {
          "digest": "sha256:8dce83e096fb72373aa27634f5d9d0cad574d6d89dd4d89f9b27334d77e7465e",
          "image": "quay.io/minio/console@sha256:8dce83e096fb72373aa27634f5d9d0cad574d6d89dd4d89f9b27334d77e7465e",
          "name": "console"
        },
        {
          "digest": "sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "image": "quay.io/minio/operator@sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "name": "minio-operator"
        },
        {
          "digest": "sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
          "image": "quay.io/minio/minio@sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
          "name": "minio-c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "4.5.1",
      "version_original": "4.5.1"
    },
    {
      "_id": "633656cc9bb8b51dd358764c",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T02:39:08.161000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:26:52.634000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "633656cc9bb8b51dd358764f",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-30T02:39:08.951000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:27:01.143000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "633656cd51ac4f4c0ee6e979",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-30T02:39:09.557000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:27:11.737000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365af275dd89c62d710a77",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T02:56:50.426000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:24:43.633000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365af4103d9edf1be976d6",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-30T02:56:52.857000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:24:50.746000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365af72bdd76944b9051c7",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-30T02:56:55.232000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:24:56.889000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365b5fe93f04a7c48115d1",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-30T02:58:39.030000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:56:20.657000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365b5feb10d77b6649cf25",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-30T02:58:39.775000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:18:18.562000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365b6051ac4f4c0ee6ebdc",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T02:58:40.538000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:29:26.523000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365b67038c18c5435c2c5c",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T02:58:47.626000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T10:42:35.818000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "plural": "pulsartopics",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "plural": "pulsarbrokers",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "plural": "pulsarconnections",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "plural": "pulsarnamespaces",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "plural": "pulsarpermissions",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "plural": "pulsarproxies",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "plural": "pulsartenants",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365b68038c18c5435c2c5e",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-30T02:58:48.209000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:27:51.117000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "plural": "pulsartopics",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "plural": "pulsarbrokers",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "plural": "pulsarconnections",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "plural": "pulsarnamespaces",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "plural": "pulsarpermissions",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "plural": "pulsarproxies",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "plural": "pulsartenants",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365b68e93f04a7c48115d5",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-30T02:58:48.723000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:43:27.317000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "plural": "pulsartopics",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "plural": "pulsarbrokers",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "plural": "pulsarconnections",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "plural": "pulsarnamespaces",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "plural": "pulsarpermissions",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "plural": "pulsarproxies",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "plural": "pulsartenants",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365b69eb10d77b6649cf2e",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-30T02:58:49.733000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:40:33.355000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365b6a51ac4f4c0ee6ebe1",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-30T02:58:50.160000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T12:07:08.109000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365b6ae93f04a7c48115d8",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T02:58:50.690000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:59:16.011000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "6336bcc075dd89c62d7138bc",
      "alm_examples": [
        {
          "api_version": "operator.antrea.vmware.com/v1",
          "kind": "AntreaInstall",
          "metadata": {
            "name": "antrea-install",
            "namespace": "antrea-operator"
          },
          "spec": {
            "antreaAgentConfig": "# FeatureGates is a map of feature names to bools that enable or disable experimental features.\nfeatureGates:\n# AllAlpha is a global toggle for alpha features. Per-feature key values override the default set by AllAlpha.\n#  AllAlpha: false\n\n# AllBeta is a global toggle for beta features. Per-feature key values override the default set by AllBeta.\n#  AllBeta: false\n\n# Enable AntreaProxy which provides ServiceLB for in-cluster Services in antrea-agent.\n# It should be enabled on Windows, otherwise NetworkPolicy will not take effect on\n# Service traffic.\n#  AntreaProxy: true\n\n# Enable EndpointSlice support in AntreaProxy. Don't enable this feature unless that EndpointSlice\n# API version v1 is supported and set as enabled in Kubernetes. If AntreaProxy is not enabled,\n# this flag will not take effect.\n#  EndpointSlice: false\n\n# Enable TopologyAwareHints in AntreaProxy. This requires AntreaProxy and EndpointSlice to be\n# enabled, otherwise this flag will not take effect.\n#  TopologyAwareHints: false\n\n# Enable traceflow which provides packet tracing feature to diagnose network issue.\n#  Traceflow: true\n\n# Enable NodePortLocal feature to make the Pods reachable externally through NodePort\n#  NodePortLocal: true\n\n# Enable Antrea ClusterNetworkPolicy feature to complement K8s NetworkPolicy for cluster admins\n# to define security policies which apply to the entire cluster, and Antrea NetworkPolicy\n# feature that supports priorities, rule actions and externalEntities in the future.\n#  AntreaPolicy: true\n\n# Enable flowexporter which exports polled conntrack connections as IPFIX flow records from each\n# agent to a configured collector.\n#  FlowExporter: false\n\n# Enable collecting and exposing NetworkPolicy statistics.\n#  NetworkPolicyStats: true\n\n# Enable controlling SNAT IPs of Pod egress traffic.\n#  Egress: true\n\n# Enable AntreaIPAM, which can allocate IP addresses from IPPools. AntreaIPAM is required by the\n# bridging mode and allocates IPs to Pods in bridging mode. It is also required to use Antrea for\n# IPAM when configuring secondary network interfaces with Multus.\n#  AntreaIPAM: false\n\n# Enable multicast traffic.\n#  Multicast: false\n\n# Enable Antrea Multi-cluster Gateway to support cross-cluster traffic.\n# This feature is supported only with encap mode.\n#  Multicluster: false\n\n# Enable support for provisioning secondary network interfaces for Pods (using\n# Pod annotations). At the moment, Antrea can only create secondary network\n# interfaces using SR-IOV VFs on baremetal Nodes.\n#  SecondaryNetwork: false\n\n# Enable managing external IPs of Services of LoadBalancer type.\n#  ServiceExternalIP: false\n\n# Enable mirroring or redirecting the traffic Pods send or receive.\n#  TrafficControl: false\n\n# Enable certificated-based authentication for IPsec.\n#  IPsecCertAuth: false\n\n# Name of the OpenVSwitch bridge antrea-agent will create and use.\n# Make sure it doesn't conflict with your existing OpenVSwitch bridges.\novsBridge: \"br-int\"\n\n# Datapath type to use for the OpenVSwitch bridge created by Antrea. Supported values are:\n# - system\n# - netdev\n# 'system' is the default value and corresponds to the kernel datapath. Use 'netdev' to run\n# OVS in userspace mode. Userspace mode requires the tun device driver to be available.\n#ovsDatapathType: system\n\n# Name of the interface antrea-agent will create and use for host <--> pod communication.\n# Make sure it doesn't conflict with your existing interfaces.\nhostGateway: \"antrea-gw0\"\n\n# Determines how traffic is encapsulated. It has the following options:\n# encap(default):    Inter-node Pod traffic is always encapsulated and Pod to external network\n#                    traffic is SNAT'd.\n# noEncap:           Inter-node Pod traffic is not encapsulated; Pod to external network traffic is\n#                    SNAT'd if noSNAT is not set to true. Underlying network must be capable of\n#                    supporting Pod traffic across IP subnets.\n# hybrid:            noEncap if source and destination Nodes are on the same subnet, otherwise encap.\n# networkPolicyOnly: Antrea enforces NetworkPolicy only, and utilizes CNI chaining and delegates Pod\n#                    IPAM and connectivity to the primary CNI.\n#\ntrafficEncapMode: \"encap\"\n\n# Whether or not to SNAT (using the Node IP) the egress traffic from a Pod to the external network.\n# This option is for the noEncap traffic mode only, and the default value is false. In the noEncap\n# mode, if the cluster's Pod CIDR is reachable from the external network, then the Pod traffic to\n# the external network needs not be SNAT'd. In the networkPolicyOnly mode, antrea-agent never\n# performs SNAT and this option will be ignored; for other modes it must be set to false.\nnoSNAT: false\n\n# Tunnel protocols used for encapsulating traffic across Nodes. If WireGuard is enabled in trafficEncryptionMode,\n# this option will not take effect. Supported values:\n# - geneve (default)\n# - vxlan\n# - gre\n# - stt\n# Note that \"gre\" is not supported for IPv6 clusters (IPv6-only or dual-stack clusters).\ntunnelType: \"geneve\"\n\n# TunnelPort is the destination port for UDP and TCP based tunnel protocols (Geneve, VXLAN, and STT).\n# If zero, it will use the assigned IANA port for the protocol, i.e. 6081 for Geneve, 4789 for VXLAN,\n# and 7471 for STT.\ntunnelPort: 0\n\n# Determines how tunnel traffic is encrypted. Currently encryption only works with encap mode.\n# It has the following options:\n# - none (default):  Inter-node Pod traffic will not be encrypted.\n# - ipsec:           Enable IPsec (ESP) encryption for Pod traffic across Nodes. Antrea uses\n#                    Preshared Key (PSK) for IKE authentication. When IPsec tunnel is enabled,\n#                    the PSK value must be passed to Antrea Agent through an environment\n#                    variable: ANTREA_IPSEC_PSK.\n# - wireGuard:       Enable WireGuard for tunnel traffic encryption.\ntrafficEncryptionMode: \"none\"\n\n# Enable bridging mode of Pod network on Nodes, in which the Node's transport interface is connected\n# to the OVS bridge, and cross-Node/VLAN traffic of AntreaIPAM Pods (Pods whose IP addresses are\n# allocated by AntreaIPAM from IPPools) is sent to the underlay network, and forwarded/routed by the\n# underlay network.\n# This option requires the `AntreaIPAM` feature gate to be enabled. At this moment, it supports only\n# IPv4 and Linux Nodes, and can be enabled only when `ovsDatapathType` is `system`,\n# `trafficEncapMode` is `noEncap`, and `noSNAT` is true.\nenableBridgingMode: false\n\n# Disable TX checksum offloading for container network interfaces. It's supposed to be set to true when the\n# datapath doesn't support TX checksum offloading, which causes packets to be dropped due to bad checksum.\n# It affects Pods running on Linux Nodes only.\ndisableTXChecksumOffload: false\n\n# Default MTU to use for the host gateway interface and the network interface of each Pod.\n# If omitted, antrea-agent will discover the MTU of the Node's primary interface and\n# also adjust MTU to accommodate for tunnel encapsulation overhead (if applicable).\ndefaultMTU: 0\n\n# wireGuard specifies WireGuard related configurations.\nwireGuard:\n  # The port for WireGuard to receive traffic.\n  port: 51820\n\negress:\n  # exceptCIDRs is the CIDR ranges to which outbound Pod traffic will not be SNAT'd by Egresses.\n  exceptCIDRs:\n\n# ClusterIP CIDR range for Services. It's required when AntreaProxy is not enabled, and should be\n# set to the same value as the one specified by --service-cluster-ip-range for kube-apiserver. When\n# AntreaProxy is enabled, this parameter is not needed and will be ignored if provided.\nserviceCIDR: \"\"\n\n# ClusterIP CIDR range for IPv6 Services. It's required when using kube-proxy to provide IPv6 Service in a Dual-Stack\n# cluster or an IPv6 only cluster. The value should be the same as the configuration for kube-apiserver specified by\n# --service-cluster-ip-range. When AntreaProxy is enabled, this parameter is not needed.\n# No default value for this field.\nserviceCIDRv6: \"\"\n\n# The port for the antrea-agent APIServer to serve on.\n# Note that if it's set to another value, the `containerPort` of the `api` port of the\n# `antrea-agent` container must be set to the same value.\napiPort: 10350\n\n# Enable metrics exposure via Prometheus. Initializes Prometheus metrics listener.\nenablePrometheusMetrics: true\n\n# Provide the IPFIX collector address as a string with format <HOST>:[<PORT>][:<PROTO>].\n# HOST can either be the DNS name or the IP of the Flow Collector. For example,\n# \"flow-aggregator.flow-aggregator.svc\" can be provided as DNS name to connect\n# to the Antrea Flow Aggregator service. If IP, it can be either IPv4 or IPv6.\n# However, IPv6 address should be wrapped with [].\n# If PORT is empty, we default to 4739, the standard IPFIX port.\n# If no PROTO is given, we consider \"tls\" as default. We support \"tls\", \"tcp\" and\n# \"udp\" protocols. \"tls\" is used for securing communication between flow exporter and\n# flow aggregator.\nflowCollectorAddr: \"flow-aggregator.flow-aggregator.svc:4739:tls\"\n\n# Provide flow poll interval as a duration string. This determines how often the\n# flow exporter dumps connections from the conntrack module. Flow poll interval\n# should be greater than or equal to 1s (one second).\n# Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\", \"s\", \"m\", \"h\".\nflowPollInterval: \"5s\"\n\n# Provide the active flow export timeout, which is the timeout after which a flow\n# record is sent to the collector for active flows. Thus, for flows with a continuous\n# stream of packets, a flow record will be exported to the collector once the elapsed\n# time since the last export event is equal to the value of this timeout.\n# Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\", \"s\", \"m\", \"h\".\nactiveFlowExportTimeout: \"5s\"\n\n# Provide the idle flow export timeout, which is the timeout after which a flow\n# record is sent to the collector for idle flows. A flow is considered idle if no\n# packet matching this flow has been observed since the last export event.\n# Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\", \"s\", \"m\", \"h\".\nidleFlowExportTimeout: \"15s\"\n\nnodePortLocal:\n# Enable NodePortLocal, a feature used to make Pods reachable using port forwarding on the host. To\n# enable this feature, you need to set \"enable\" to true, and ensure that the NodePortLocal feature\n# gate is also enabled (which is the default).\n  enable: false\n# Provide the port range used by NodePortLocal. When the NodePortLocal feature is enabled, a port\n# from that range will be assigned whenever a Pod's container defines a specific port to be exposed\n# (each container can define a list of ports as pod.spec.containers[].ports), and all Node traffic\n# directed to that port will be forwarded to the Pod.\n  portRange: \"61000-62000\"\n\n# Provide the address of Kubernetes apiserver, to override any value provided in kubeconfig or InClusterConfig.\n# Defaults to \"\". It must be a host string, a host:port pair, or a URL to the base of the apiserver.\nkubeAPIServerOverride: \"\"\n\n# Provide the address of DNS server, to override the kube-dns service. It's used to resolve hostname in FQDN policy.\n# Defaults to \"\". It must be a host string or a host:port pair of the DNS server (e.g. 10.96.0.10, 10.96.0.10:53,\n# [fd00:10:96::a]:53).\ndnsServerOverride: \"\"\n\n# Comma-separated list of Cipher Suites. If omitted, the default Go Cipher Suites will be used.\n# https://golang.org/pkg/crypto/tls/#pkg-constants\n# Note that TLS1.3 Cipher Suites cannot be added to the list. But the apiserver will always\n# prefer TLS1.3 Cipher Suites whenever possible.\ntlsCipherSuites: \"\"\n\n# TLS min version from: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13.\ntlsMinVersion: \"\"\n\n# The name of the interface on Node which is used for tunneling or routing the traffic across Nodes.\n# If there are multiple IP addresses configured on the interface, the first one is used. The IP\n# address used for tunneling or routing traffic to remote Nodes is decided in the following order of\n# preference (from highest to lowest):\n# 1. transportInterface\n# 2. transportInterfaceCIDRs\n# 3. The Node IP\ntransportInterface: \"\"\n\nmulticast:\n# The names of the interfaces on Nodes that are used to forward multicast traffic.\n# Defaults to transport interface if not set.\n  multicastInterfaces:\n\n# The interval at which the antrea-agent sends IGMP queries to Pods.\n# Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\", \"s\", \"m\", \"h\".\n  igmpQueryInterval: \"125s\"\n\n# The network CIDRs of the interface on Node which is used for tunneling or routing the traffic across\n# Nodes. If there are multiple interfaces configured the same network CIDR, the first one is used. The\n# IP address used for tunneling or routing traffic to remote Nodes is decided in the following order of\n# preference (from highest to lowest):\n# 1. transportInterface\n# 2. transportInterfaceCIDRs\n# 3. The Node IP\ntransportInterfaceCIDRs:\n\n# Option antreaProxy contains AntreaProxy related configuration options.\nantreaProxy:\n  # ProxyAll tells antrea-agent to proxy all Service traffic, including NodePort, LoadBalancer, and ClusterIP traffic,\n  # regardless of where they come from. Therefore, running kube-proxy is no longer required. This requires the AntreaProxy\n  # feature to be enabled.\n  # Note that this option is experimental. If kube-proxy is removed, option kubeAPIServerOverride must be used to access\n  # apiserver directly.\n  proxyAll: false\n  # A string array of values which specifies the host IPv4/IPv6 addresses for NodePort. Values can be valid IP blocks.\n  # (e.g. 1.2.3.0/24, 1.2.3.4/32). An empty string slice is meant to select all host IPv4/IPv6 addresses.\n  # Note that the option is only valid when proxyAll is true.\n  nodePortAddresses:\n  # An array of string values to specify a list of Services which should be ignored by AntreaProxy (traffic to these\n  # Services will not be load-balanced). Values can be a valid ClusterIP (e.g. 10.11.1.2) or a Service name\n  # with Namespace (e.g. kube-system/kube-dns)\n  skipServices:\n  # When ProxyLoadBalancerIPs is set to false, AntreaProxy no longer load-balances traffic destined to the\n  # External IPs of LoadBalancer Services. This is useful when the external LoadBalancer provides additional\n  # capabilities (e.g. TLS termination) and it is desirable for Pod-to-ExternalIP traffic to be sent to the\n  # external LoadBalancer instead of being load-balanced to an Endpoint directly by AntreaProxy.\n  # Note that setting ProxyLoadBalancerIPs to false usually only makes sense when ProxyAll is set to true and\n  # kube-proxy is removed from the cluser, otherwise kube-proxy will still load-balance this traffic.\n  proxyLoadBalancerIPs: true\n\n# IPsec tunnel related configurations.\nipsec:\n  # The authentication mode of IPsec tunnel. It has the following options:\n  # - psk (default): Use pre-shared key (PSK) for IKE authentication.\n  # - cert:          Use CA-signed certificates for IKE authentication. This option requires the `IPsecCertAuth`\n  #                  feature gate to be enabled.\n  authenticationMode: \"psk\"\n\nmulticluster:\n# Enable Antrea Multi-cluster Gateway to support cross-cluster traffic.\n# This feature is supported only with encap mode.\n  enable: false\n# The Namespace where Antrea Multi-cluster Controller is running.\n# The default is antrea-agent's Namespace.\n  namespace: \"\"\n",
            "antreaCNIConfig": "{\n    \"cniVersion\":\"0.3.0\",\n    \"name\": \"antrea\",\n    \"plugins\": [\n        {\n            \"type\": \"antrea\",\n            \"ipam\": {\n                \"type\": \"host-local\"\n            }\n        }\n        ,\n        {\n            \"type\": \"portmap\",\n            \"capabilities\": {\"portMappings\": true}\n        }\n        ,\n        {\n            \"type\": \"bandwidth\",\n            \"capabilities\": {\"bandwidth\": true}\n        }\n    ]\n}\n",
            "antreaControllerConfig": "# FeatureGates is a map of feature names to bools that enable or disable experimental features.\nfeatureGates:\n# AllAlpha is a global toggle for alpha features. Per-feature key values override the default set by AllAlpha.\n#  AllAlpha: false\n\n# AllBeta is a global toggle for beta features. Per-feature key values override the default set by AllBeta.\n#  AllBeta: false\n\n# Enable traceflow which provides packet tracing feature to diagnose network issue.\n#  Traceflow: true\n\n# Enable Antrea ClusterNetworkPolicy feature to complement K8s NetworkPolicy for cluster admins\n# to define security policies which apply to the entire cluster, and Antrea NetworkPolicy\n# feature that supports priorities, rule actions and externalEntities in the future.\n#  AntreaPolicy: true\n\n# Enable collecting and exposing NetworkPolicy statistics.\n#  NetworkPolicyStats: true\n\n# Enable multicast traffic.\n#  Multicast: false\n\n# Enable controlling SNAT IPs of Pod egress traffic.\n#  Egress: true\n\n# Run Kubernetes NodeIPAMController with Antrea.\n#  NodeIPAM: false\n\n# Enable AntreaIPAM, which can allocate IP addresses from IPPools. AntreaIPAM is required by the\n# bridging mode and allocates IPs to Pods in bridging mode. It is also required to use Antrea for\n# IPAM when configuring secondary network interfaces with Multus.\n#  AntreaIPAM: false\n\n# Enable managing external IPs of Services of LoadBalancer type.\n#  ServiceExternalIP: false\n\n# Enable certificated-based authentication for IPsec.\n#  IPsecCertAuth: false\n\n# Enable managing ExternalNode for unmanaged VM/BM.\n#  ExternalNode: false\n\n# The port for the antrea-controller APIServer to serve on.\n# Note that if it's set to another value, the `containerPort` of the `api` port of the\n# `antrea-controller` container must be set to the same value.\napiPort: 10349\n\n# Enable metrics exposure via Prometheus. Initializes Prometheus metrics listener.\nenablePrometheusMetrics: true\n\n# Indicates whether to use auto-generated self-signed TLS certificate.\n# If false, a Secret named \"antrea-controller-tls\" must be provided with the following keys:\n#   ca.crt: <CA certificate>\n#   tls.crt: <TLS certificate>\n#   tls.key: <TLS private key>\nselfSignedCert: true\n\n# Comma-separated list of Cipher Suites. If omitted, the default Go Cipher Suites will be used.\n# https://golang.org/pkg/crypto/tls/#pkg-constants\n# Note that TLS1.3 Cipher Suites cannot be added to the list. But the apiserver will always\n# prefer TLS1.3 Cipher Suites whenever possible.\ntlsCipherSuites: \"\"\n\n# TLS min version from: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13.\ntlsMinVersion: \"\"\n\nnodeIPAM:\n  # Enable the integrated Node IPAM controller within the Antrea controller.\n  enableNodeIPAM: false\n  # CIDR ranges for Pods in cluster. String array containing single CIDR range, or multiple ranges.\n  # The CIDRs could be either IPv4 or IPv6. At most one CIDR may be specified for each IP family.\n  # Value ignored when enableNodeIPAM is false.\n  clusterCIDRs:\n  # CIDR ranges for Services in cluster. It is not necessary to specify it when there is no overlap with clusterCIDRs.\n  # Value ignored when enableNodeIPAM is false.\n  serviceCIDR: \"\"\n  serviceCIDRv6: \"\"\n  # Mask size for IPv4 Node CIDR in IPv4 or dual-stack cluster. Value ignored when enableNodeIPAM is false\n  # or when IPv4 Pod CIDR is not configured. Valid range is 16 to 30.\n  nodeCIDRMaskSizeIPv4: 24\n  # Mask size for IPv6 Node CIDR in IPv6 or dual-stack cluster. Value ignored when enableNodeIPAM is false\n  # or when IPv6 Pod CIDR is not configured. Valid range is 64 to 126.\n  nodeCIDRMaskSizeIPv6: 64\n\nipsecCSRSigner:\n  # Determines the auto-approve policy of Antrea CSR signer for IPsec certificates management.\n  # If enabled, Antrea will auto-approve the CertificateSingingRequest (CSR) if its subject and x509 extensions\n  # are permitted, and the requestor can be validated. If K8s `BoundServiceAccountTokenVolume` feature is enabled,\n  # the Pod identity will also be validated to provide maximum security.\n  # If set to false, Antrea will not auto-approve CertificateSingingRequests and they need to be approved\n  # manually by `kubectl certificate approve`.\n  autoApprove: true\n  # Indicates whether to use auto-generated self-signed CA certificate.\n  # If false, a Secret named \"antrea-ipsec-ca\" must be provided with the following keys:\n  #   tls.crt: <CA certificate>\n  #   tls.key: <CA private key>\n  selfSignedCA: true\n",
            "antreaImage": "antrea/antrea-ubi:v1.8.0",
            "platform": "openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/wavefronthq/antrea-openshift-operator@sha256:d7cbf270f06ebb128c3bc37abb1f0cd952cf7edea3125199043d1b076e16ed97",
      "bundle_path_digest": "sha256:d7cbf270f06ebb128c3bc37abb1f0cd952cf7edea3125199043d1b076e16ed97",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T09:54:08.247000+00:00",
      "csv_description": "An operator which installs Antrea network CNI plugin on the Kubernetes cluster.",
      "csv_display_name": "Antrea Operator",
      "csv_metadata_description": "An operator which installs Antrea network CNI plugin on the Kubernetes cluster.",
      "csv_name": "antrea-operator-for-kubernetes.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:53:17.719000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "antrea-operator-for-kubernetes",
      "provided_apis": [
        {
          "group": "operator.antrea.vmware.com",
          "kind": "AntreaInstall",
          "version": "v1"
        }
      ],
      "provider": "antrea.io",
      "related_images": [
        {
          "digest": "sha256:d829b3447a3f106e77ed7390f6e1a13308d9077f7099210b3f257e401312ba00",
          "image": "antrea/antrea-operator@sha256:d829b3447a3f106e77ed7390f6e1a13308d9077f7099210b3f257e401312ba00",
          "name": "antrea-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "6336bf27d56957cd2e73585c",
      "alm_examples": [
        {
          "api_version": "operator.antrea.vmware.com/v1",
          "kind": "AntreaInstall",
          "metadata": {
            "name": "antrea-install",
            "namespace": "antrea-operator"
          },
          "spec": {
            "antreaAgentConfig": "# FeatureGates is a map of feature names to bools that enable or disable experimental features.\nfeatureGates:\n# AllAlpha is a global toggle for alpha features. Per-feature key values override the default set by AllAlpha.\n#  AllAlpha: false\n\n# AllBeta is a global toggle for beta features. Per-feature key values override the default set by AllBeta.\n#  AllBeta: false\n\n# Enable AntreaProxy which provides ServiceLB for in-cluster Services in antrea-agent.\n# It should be enabled on Windows, otherwise NetworkPolicy will not take effect on\n# Service traffic.\n#  AntreaProxy: true\n\n# Enable EndpointSlice support in AntreaProxy. Don't enable this feature unless that EndpointSlice\n# API version v1 is supported and set as enabled in Kubernetes. If AntreaProxy is not enabled,\n# this flag will not take effect.\n#  EndpointSlice: false\n\n# Enable TopologyAwareHints in AntreaProxy. This requires AntreaProxy and EndpointSlice to be\n# enabled, otherwise this flag will not take effect.\n#  TopologyAwareHints: false\n\n# Enable traceflow which provides packet tracing feature to diagnose network issue.\n#  Traceflow: true\n\n# Enable NodePortLocal feature to make the Pods reachable externally through NodePort\n#  NodePortLocal: true\n\n# Enable Antrea ClusterNetworkPolicy feature to complement K8s NetworkPolicy for cluster admins\n# to define security policies which apply to the entire cluster, and Antrea NetworkPolicy\n# feature that supports priorities, rule actions and externalEntities in the future.\n#  AntreaPolicy: true\n\n# Enable flowexporter which exports polled conntrack connections as IPFIX flow records from each\n# agent to a configured collector.\n#  FlowExporter: false\n\n# Enable collecting and exposing NetworkPolicy statistics.\n#  NetworkPolicyStats: true\n\n# Enable controlling SNAT IPs of Pod egress traffic.\n#  Egress: true\n\n# Enable AntreaIPAM, which can allocate IP addresses from IPPools. AntreaIPAM is required by the\n# bridging mode and allocates IPs to Pods in bridging mode. It is also required to use Antrea for\n# IPAM when configuring secondary network interfaces with Multus.\n#  AntreaIPAM: false\n\n# Enable multicast traffic.\n#  Multicast: false\n\n# Enable Antrea Multi-cluster Gateway to support cross-cluster traffic.\n# This feature is supported only with encap mode.\n#  Multicluster: false\n\n# Enable support for provisioning secondary network interfaces for Pods (using\n# Pod annotations). At the moment, Antrea can only create secondary network\n# interfaces using SR-IOV VFs on baremetal Nodes.\n#  SecondaryNetwork: false\n\n# Enable managing external IPs of Services of LoadBalancer type.\n#  ServiceExternalIP: false\n\n# Enable mirroring or redirecting the traffic Pods send or receive.\n#  TrafficControl: false\n\n# Enable certificated-based authentication for IPsec.\n#  IPsecCertAuth: false\n\n# Name of the OpenVSwitch bridge antrea-agent will create and use.\n# Make sure it doesn't conflict with your existing OpenVSwitch bridges.\novsBridge: \"br-int\"\n\n# Datapath type to use for the OpenVSwitch bridge created by Antrea. Supported values are:\n# - system\n# - netdev\n# 'system' is the default value and corresponds to the kernel datapath. Use 'netdev' to run\n# OVS in userspace mode. Userspace mode requires the tun device driver to be available.\n#ovsDatapathType: system\n\n# Name of the interface antrea-agent will create and use for host <--> pod communication.\n# Make sure it doesn't conflict with your existing interfaces.\nhostGateway: \"antrea-gw0\"\n\n# Determines how traffic is encapsulated. It has the following options:\n# encap(default):    Inter-node Pod traffic is always encapsulated and Pod to external network\n#                    traffic is SNAT'd.\n# noEncap:           Inter-node Pod traffic is not encapsulated; Pod to external network traffic is\n#                    SNAT'd if noSNAT is not set to true. Underlying network must be capable of\n#                    supporting Pod traffic across IP subnets.\n# hybrid:            noEncap if source and destination Nodes are on the same subnet, otherwise encap.\n# networkPolicyOnly: Antrea enforces NetworkPolicy only, and utilizes CNI chaining and delegates Pod\n#                    IPAM and connectivity to the primary CNI.\n#\ntrafficEncapMode: \"encap\"\n\n# Whether or not to SNAT (using the Node IP) the egress traffic from a Pod to the external network.\n# This option is for the noEncap traffic mode only, and the default value is false. In the noEncap\n# mode, if the cluster's Pod CIDR is reachable from the external network, then the Pod traffic to\n# the external network needs not be SNAT'd. In the networkPolicyOnly mode, antrea-agent never\n# performs SNAT and this option will be ignored; for other modes it must be set to false.\nnoSNAT: false\n\n# Tunnel protocols used for encapsulating traffic across Nodes. If WireGuard is enabled in trafficEncryptionMode,\n# this option will not take effect. Supported values:\n# - geneve (default)\n# - vxlan\n# - gre\n# - stt\n# Note that \"gre\" is not supported for IPv6 clusters (IPv6-only or dual-stack clusters).\ntunnelType: \"geneve\"\n\n# TunnelPort is the destination port for UDP and TCP based tunnel protocols (Geneve, VXLAN, and STT).\n# If zero, it will use the assigned IANA port for the protocol, i.e. 6081 for Geneve, 4789 for VXLAN,\n# and 7471 for STT.\ntunnelPort: 0\n\n# Determines how tunnel traffic is encrypted. Currently encryption only works with encap mode.\n# It has the following options:\n# - none (default):  Inter-node Pod traffic will not be encrypted.\n# - ipsec:           Enable IPsec (ESP) encryption for Pod traffic across Nodes. Antrea uses\n#                    Preshared Key (PSK) for IKE authentication. When IPsec tunnel is enabled,\n#                    the PSK value must be passed to Antrea Agent through an environment\n#                    variable: ANTREA_IPSEC_PSK.\n# - wireGuard:       Enable WireGuard for tunnel traffic encryption.\ntrafficEncryptionMode: \"none\"\n\n# Enable bridging mode of Pod network on Nodes, in which the Node's transport interface is connected\n# to the OVS bridge, and cross-Node/VLAN traffic of AntreaIPAM Pods (Pods whose IP addresses are\n# allocated by AntreaIPAM from IPPools) is sent to the underlay network, and forwarded/routed by the\n# underlay network.\n# This option requires the `AntreaIPAM` feature gate to be enabled. At this moment, it supports only\n# IPv4 and Linux Nodes, and can be enabled only when `ovsDatapathType` is `system`,\n# `trafficEncapMode` is `noEncap`, and `noSNAT` is true.\nenableBridgingMode: false\n\n# Disable TX checksum offloading for container network interfaces. It's supposed to be set to true when the\n# datapath doesn't support TX checksum offloading, which causes packets to be dropped due to bad checksum.\n# It affects Pods running on Linux Nodes only.\ndisableTXChecksumOffload: false\n\n# Default MTU to use for the host gateway interface and the network interface of each Pod.\n# If omitted, antrea-agent will discover the MTU of the Node's primary interface and\n# also adjust MTU to accommodate for tunnel encapsulation overhead (if applicable).\ndefaultMTU: 0\n\n# wireGuard specifies WireGuard related configurations.\nwireGuard:\n  # The port for WireGuard to receive traffic.\n  port: 51820\n\negress:\n  # exceptCIDRs is the CIDR ranges to which outbound Pod traffic will not be SNAT'd by Egresses.\n  exceptCIDRs:\n\n# ClusterIP CIDR range for Services. It's required when AntreaProxy is not enabled, and should be\n# set to the same value as the one specified by --service-cluster-ip-range for kube-apiserver. When\n# AntreaProxy is enabled, this parameter is not needed and will be ignored if provided.\nserviceCIDR: \"\"\n\n# ClusterIP CIDR range for IPv6 Services. It's required when using kube-proxy to provide IPv6 Service in a Dual-Stack\n# cluster or an IPv6 only cluster. The value should be the same as the configuration for kube-apiserver specified by\n# --service-cluster-ip-range. When AntreaProxy is enabled, this parameter is not needed.\n# No default value for this field.\nserviceCIDRv6: \"\"\n\n# The port for the antrea-agent APIServer to serve on.\n# Note that if it's set to another value, the `containerPort` of the `api` port of the\n# `antrea-agent` container must be set to the same value.\napiPort: 10350\n\n# Enable metrics exposure via Prometheus. Initializes Prometheus metrics listener.\nenablePrometheusMetrics: true\n\n# Provide the IPFIX collector address as a string with format <HOST>:[<PORT>][:<PROTO>].\n# HOST can either be the DNS name or the IP of the Flow Collector. For example,\n# \"flow-aggregator.flow-aggregator.svc\" can be provided as DNS name to connect\n# to the Antrea Flow Aggregator service. If IP, it can be either IPv4 or IPv6.\n# However, IPv6 address should be wrapped with [].\n# If PORT is empty, we default to 4739, the standard IPFIX port.\n# If no PROTO is given, we consider \"tls\" as default. We support \"tls\", \"tcp\" and\n# \"udp\" protocols. \"tls\" is used for securing communication between flow exporter and\n# flow aggregator.\nflowCollectorAddr: \"flow-aggregator.flow-aggregator.svc:4739:tls\"\n\n# Provide flow poll interval as a duration string. This determines how often the\n# flow exporter dumps connections from the conntrack module. Flow poll interval\n# should be greater than or equal to 1s (one second).\n# Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\", \"s\", \"m\", \"h\".\nflowPollInterval: \"5s\"\n\n# Provide the active flow export timeout, which is the timeout after which a flow\n# record is sent to the collector for active flows. Thus, for flows with a continuous\n# stream of packets, a flow record will be exported to the collector once the elapsed\n# time since the last export event is equal to the value of this timeout.\n# Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\", \"s\", \"m\", \"h\".\nactiveFlowExportTimeout: \"5s\"\n\n# Provide the idle flow export timeout, which is the timeout after which a flow\n# record is sent to the collector for idle flows. A flow is considered idle if no\n# packet matching this flow has been observed since the last export event.\n# Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\", \"s\", \"m\", \"h\".\nidleFlowExportTimeout: \"15s\"\n\nnodePortLocal:\n# Enable NodePortLocal, a feature used to make Pods reachable using port forwarding on the host. To\n# enable this feature, you need to set \"enable\" to true, and ensure that the NodePortLocal feature\n# gate is also enabled (which is the default).\n  enable: false\n# Provide the port range used by NodePortLocal. When the NodePortLocal feature is enabled, a port\n# from that range will be assigned whenever a Pod's container defines a specific port to be exposed\n# (each container can define a list of ports as pod.spec.containers[].ports), and all Node traffic\n# directed to that port will be forwarded to the Pod.\n  portRange: \"61000-62000\"\n\n# Provide the address of Kubernetes apiserver, to override any value provided in kubeconfig or InClusterConfig.\n# Defaults to \"\". It must be a host string, a host:port pair, or a URL to the base of the apiserver.\nkubeAPIServerOverride: \"\"\n\n# Provide the address of DNS server, to override the kube-dns service. It's used to resolve hostname in FQDN policy.\n# Defaults to \"\". It must be a host string or a host:port pair of the DNS server (e.g. 10.96.0.10, 10.96.0.10:53,\n# [fd00:10:96::a]:53).\ndnsServerOverride: \"\"\n\n# Comma-separated list of Cipher Suites. If omitted, the default Go Cipher Suites will be used.\n# https://golang.org/pkg/crypto/tls/#pkg-constants\n# Note that TLS1.3 Cipher Suites cannot be added to the list. But the apiserver will always\n# prefer TLS1.3 Cipher Suites whenever possible.\ntlsCipherSuites: \"\"\n\n# TLS min version from: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13.\ntlsMinVersion: \"\"\n\n# The name of the interface on Node which is used for tunneling or routing the traffic across Nodes.\n# If there are multiple IP addresses configured on the interface, the first one is used. The IP\n# address used for tunneling or routing traffic to remote Nodes is decided in the following order of\n# preference (from highest to lowest):\n# 1. transportInterface\n# 2. transportInterfaceCIDRs\n# 3. The Node IP\ntransportInterface: \"\"\n\nmulticast:\n# The names of the interfaces on Nodes that are used to forward multicast traffic.\n# Defaults to transport interface if not set.\n  multicastInterfaces:\n\n# The interval at which the antrea-agent sends IGMP queries to Pods.\n# Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\", \"s\", \"m\", \"h\".\n  igmpQueryInterval: \"125s\"\n\n# The network CIDRs of the interface on Node which is used for tunneling or routing the traffic across\n# Nodes. If there are multiple interfaces configured the same network CIDR, the first one is used. The\n# IP address used for tunneling or routing traffic to remote Nodes is decided in the following order of\n# preference (from highest to lowest):\n# 1. transportInterface\n# 2. transportInterfaceCIDRs\n# 3. The Node IP\ntransportInterfaceCIDRs:\n\n# Option antreaProxy contains AntreaProxy related configuration options.\nantreaProxy:\n  # ProxyAll tells antrea-agent to proxy all Service traffic, including NodePort, LoadBalancer, and ClusterIP traffic,\n  # regardless of where they come from. Therefore, running kube-proxy is no longer required. This requires the AntreaProxy\n  # feature to be enabled.\n  # Note that this option is experimental. If kube-proxy is removed, option kubeAPIServerOverride must be used to access\n  # apiserver directly.\n  proxyAll: false\n  # A string array of values which specifies the host IPv4/IPv6 addresses for NodePort. Values can be valid IP blocks.\n  # (e.g. 1.2.3.0/24, 1.2.3.4/32). An empty string slice is meant to select all host IPv4/IPv6 addresses.\n  # Note that the option is only valid when proxyAll is true.\n  nodePortAddresses:\n  # An array of string values to specify a list of Services which should be ignored by AntreaProxy (traffic to these\n  # Services will not be load-balanced). Values can be a valid ClusterIP (e.g. 10.11.1.2) or a Service name\n  # with Namespace (e.g. kube-system/kube-dns)\n  skipServices:\n  # When ProxyLoadBalancerIPs is set to false, AntreaProxy no longer load-balances traffic destined to the\n  # External IPs of LoadBalancer Services. This is useful when the external LoadBalancer provides additional\n  # capabilities (e.g. TLS termination) and it is desirable for Pod-to-ExternalIP traffic to be sent to the\n  # external LoadBalancer instead of being load-balanced to an Endpoint directly by AntreaProxy.\n  # Note that setting ProxyLoadBalancerIPs to false usually only makes sense when ProxyAll is set to true and\n  # kube-proxy is removed from the cluser, otherwise kube-proxy will still load-balance this traffic.\n  proxyLoadBalancerIPs: true\n\n# IPsec tunnel related configurations.\nipsec:\n  # The authentication mode of IPsec tunnel. It has the following options:\n  # - psk (default): Use pre-shared key (PSK) for IKE authentication.\n  # - cert:          Use CA-signed certificates for IKE authentication. This option requires the `IPsecCertAuth`\n  #                  feature gate to be enabled.\n  authenticationMode: \"psk\"\n\nmulticluster:\n# Enable Antrea Multi-cluster Gateway to support cross-cluster traffic.\n# This feature is supported only with encap mode.\n  enable: false\n# The Namespace where Antrea Multi-cluster Controller is running.\n# The default is antrea-agent's Namespace.\n  namespace: \"\"\n",
            "antreaCNIConfig": "{\n    \"cniVersion\":\"0.3.0\",\n    \"name\": \"antrea\",\n    \"plugins\": [\n        {\n            \"type\": \"antrea\",\n            \"ipam\": {\n                \"type\": \"host-local\"\n            }\n        }\n        ,\n        {\n            \"type\": \"portmap\",\n            \"capabilities\": {\"portMappings\": true}\n        }\n        ,\n        {\n            \"type\": \"bandwidth\",\n            \"capabilities\": {\"bandwidth\": true}\n        }\n    ]\n}\n",
            "antreaControllerConfig": "# FeatureGates is a map of feature names to bools that enable or disable experimental features.\nfeatureGates:\n# AllAlpha is a global toggle for alpha features. Per-feature key values override the default set by AllAlpha.\n#  AllAlpha: false\n\n# AllBeta is a global toggle for beta features. Per-feature key values override the default set by AllBeta.\n#  AllBeta: false\n\n# Enable traceflow which provides packet tracing feature to diagnose network issue.\n#  Traceflow: true\n\n# Enable Antrea ClusterNetworkPolicy feature to complement K8s NetworkPolicy for cluster admins\n# to define security policies which apply to the entire cluster, and Antrea NetworkPolicy\n# feature that supports priorities, rule actions and externalEntities in the future.\n#  AntreaPolicy: true\n\n# Enable collecting and exposing NetworkPolicy statistics.\n#  NetworkPolicyStats: true\n\n# Enable multicast traffic.\n#  Multicast: false\n\n# Enable controlling SNAT IPs of Pod egress traffic.\n#  Egress: true\n\n# Run Kubernetes NodeIPAMController with Antrea.\n#  NodeIPAM: false\n\n# Enable AntreaIPAM, which can allocate IP addresses from IPPools. AntreaIPAM is required by the\n# bridging mode and allocates IPs to Pods in bridging mode. It is also required to use Antrea for\n# IPAM when configuring secondary network interfaces with Multus.\n#  AntreaIPAM: false\n\n# Enable managing external IPs of Services of LoadBalancer type.\n#  ServiceExternalIP: false\n\n# Enable certificated-based authentication for IPsec.\n#  IPsecCertAuth: false\n\n# Enable managing ExternalNode for unmanaged VM/BM.\n#  ExternalNode: false\n\n# The port for the antrea-controller APIServer to serve on.\n# Note that if it's set to another value, the `containerPort` of the `api` port of the\n# `antrea-controller` container must be set to the same value.\napiPort: 10349\n\n# Enable metrics exposure via Prometheus. Initializes Prometheus metrics listener.\nenablePrometheusMetrics: true\n\n# Indicates whether to use auto-generated self-signed TLS certificate.\n# If false, a Secret named \"antrea-controller-tls\" must be provided with the following keys:\n#   ca.crt: <CA certificate>\n#   tls.crt: <TLS certificate>\n#   tls.key: <TLS private key>\nselfSignedCert: true\n\n# Comma-separated list of Cipher Suites. If omitted, the default Go Cipher Suites will be used.\n# https://golang.org/pkg/crypto/tls/#pkg-constants\n# Note that TLS1.3 Cipher Suites cannot be added to the list. But the apiserver will always\n# prefer TLS1.3 Cipher Suites whenever possible.\ntlsCipherSuites: \"\"\n\n# TLS min version from: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13.\ntlsMinVersion: \"\"\n\nnodeIPAM:\n  # Enable the integrated Node IPAM controller within the Antrea controller.\n  enableNodeIPAM: false\n  # CIDR ranges for Pods in cluster. String array containing single CIDR range, or multiple ranges.\n  # The CIDRs could be either IPv4 or IPv6. At most one CIDR may be specified for each IP family.\n  # Value ignored when enableNodeIPAM is false.\n  clusterCIDRs:\n  # CIDR ranges for Services in cluster. It is not necessary to specify it when there is no overlap with clusterCIDRs.\n  # Value ignored when enableNodeIPAM is false.\n  serviceCIDR: \"\"\n  serviceCIDRv6: \"\"\n  # Mask size for IPv4 Node CIDR in IPv4 or dual-stack cluster. Value ignored when enableNodeIPAM is false\n  # or when IPv4 Pod CIDR is not configured. Valid range is 16 to 30.\n  nodeCIDRMaskSizeIPv4: 24\n  # Mask size for IPv6 Node CIDR in IPv6 or dual-stack cluster. Value ignored when enableNodeIPAM is false\n  # or when IPv6 Pod CIDR is not configured. Valid range is 64 to 126.\n  nodeCIDRMaskSizeIPv6: 64\n\nipsecCSRSigner:\n  # Determines the auto-approve policy of Antrea CSR signer for IPsec certificates management.\n  # If enabled, Antrea will auto-approve the CertificateSingingRequest (CSR) if its subject and x509 extensions\n  # are permitted, and the requestor can be validated. If K8s `BoundServiceAccountTokenVolume` feature is enabled,\n  # the Pod identity will also be validated to provide maximum security.\n  # If set to false, Antrea will not auto-approve CertificateSingingRequests and they need to be approved\n  # manually by `kubectl certificate approve`.\n  autoApprove: true\n  # Indicates whether to use auto-generated self-signed CA certificate.\n  # If false, a Secret named \"antrea-ipsec-ca\" must be provided with the following keys:\n  #   tls.crt: <CA certificate>\n  #   tls.key: <CA private key>\n  selfSignedCA: true\n",
            "antreaImage": "antrea/antrea-ubi:v1.8.0",
            "platform": "openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/wavefronthq/antrea-openshift-operator@sha256:d7cbf270f06ebb128c3bc37abb1f0cd952cf7edea3125199043d1b076e16ed97",
      "bundle_path_digest": "sha256:d7cbf270f06ebb128c3bc37abb1f0cd952cf7edea3125199043d1b076e16ed97",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T10:04:23.436000+00:00",
      "csv_description": "An operator which installs Antrea network CNI plugin on the Kubernetes cluster.",
      "csv_display_name": "Antrea Operator",
      "csv_metadata_description": "An operator which installs Antrea network CNI plugin on the Kubernetes cluster.",
      "csv_name": "antrea-operator-for-kubernetes.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:57:10.887000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "antrea-operator-for-kubernetes",
      "provided_apis": [
        {
          "group": "operator.antrea.vmware.com",
          "kind": "AntreaInstall",
          "version": "v1"
        }
      ],
      "provider": "antrea.io",
      "related_images": [
        {
          "digest": "sha256:d829b3447a3f106e77ed7390f6e1a13308d9077f7099210b3f257e401312ba00",
          "image": "antrea/antrea-operator@sha256:d829b3447a3f106e77ed7390f6e1a13308d9077f7099210b3f257e401312ba00",
          "name": "antrea-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "6336ede251ac4f4c0ee73077",
      "alm_examples": [
        {
          "api_version": "cassandra.datastax.com/v1beta1",
          "kind": "CassandraDatacenter",
          "metadata": {
            "name": "dc1"
          },
          "spec": {
            "clusterName": "development",
            "config": {
              "cassandra-yaml": {
                "authenticator": "PasswordAuthenticator",
                "authorizer": "CassandraAuthorizer",
                "num_tokens": 16,
                "role_manager": "CassandraRoleManager"
              },
              "jvm-server-options": {
                "initial_heap_size": "1G",
                "max_heap_size": "1G"
              }
            },
            "dockerImageRunsAsCassandra": false,
            "managementApiAuth": {
              "insecure": {}
            },
            "racks": [
              {
                "name": "rack1"
              },
              {
                "name": "rack2"
              },
              {
                "name": "rack3"
              }
            ],
            "resources": {
              "requests": {
                "cpu": "1000m",
                "memory": "2Gi"
              }
            },
            "serverType": "cassandra",
            "serverVersion": "4.0.3",
            "size": 3,
            "storageConfig": {
              "cassandraDataVolumeClaimSpec": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "resources": {
                  "requests": {
                    "storage": "10Gi"
                  }
                },
                "storageClassName": "server-storage"
              }
            }
          }
        },
        {
          "api_version": "control.k8ssandra.io/v1alpha1",
          "kind": "CassandraTask",
          "metadata": {
            "name": "example-cleanup"
          },
          "spec": {
            "datacenter": {
              "name": "dc2",
              "namespace": "cass-operator"
            },
            "jobs": [
              {
                "command": "cleanup",
                "name": "cleanup-run"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/datastax/cass-operator-bundle@sha256:85a32fce71194dbe21a29b37ff29d339d4bb49ad83e0f8a1f89c8fbe584cd92f",
      "bundle_path_digest": "sha256:85a32fce71194dbe21a29b37ff29d339d4bb49ad83e0f8a1f89c8fbe584cd92f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-30T13:23:46.623000+00:00",
      "csv_description": "## Apache Cassandra\n\nThe Apache Cassandra database is the right choice when you need scalability and\nhigh availability without compromising performance. Linear scalability and\nproven fault-tolerance on commodity hardware or cloud infrastructure make it the\nperfect platform for mission-critical data. Cassandra's support for replicating\nacross multiple datacenters is best-in-class, providing lower latency for your\nusers and the peace of mind of knowing that you can survive regional outages.\n\n## DataStax Enterprise\n\nThe most advanced distribution of Apache Cassandra\u2122 on the market, with the\nenterprise functionality needed for serious production systems and backed up and\nsupported by the best distributed-experts in the world. It's one platform for\nall types of applications anywhere, any cloud, any model: key-value, graph,\ntabular, JSON.\n\nDataStax Enterprise is a fully integrated and optimized database, with graph,\nanalytics, and search included, all with a unified security model. Simply put,\nit's the only database capable of meeting today's demanding requirements\n\n## Operator Details\n\n`cass-operator` is designed as a modular operator for Apache Cassandra and\nderived  distributions. Apache Cassandra is a distributed database consisting of\nmultiple nodes working in concert to store data and process queries along a\nnumber of fault domains. `cass-operator` has the deployment of a Cassandra\ncluster around the logical domain of a datacenter with the `CassandraDatacenter`\ncustom resource.\n    \nUpon submission of one of these resources it handles provisioning the underlying\nstateful sets (analogous to C\\* logical racks), services, and configuration.\nAdditionally through monitoring pod state via Kubernetes callbacks it handles day to day\noperations such as restarting failed processes, scaling clusters up, and deploying\nconfiguration changes in a rolling, non-disruptive, fashion.\n    \nThis operator is designed to be `Namespace` scoped. A single Kubernetes cluster may\nbe running multiple instances of this operator, in separate namespaces, to support\na number of C\\* clusters and environments. Configuration is simple with the usage of\nYAML based overrides in the Custom Resource paired with an `init` container.\n    \nIn C\\* clusters ordering and timing of certain operations are important to keep the system\nevenly distributed. `cass-operator` takes advantage of a sidecar process within the\nmain container to handle the orchestration of starting our main C* process.",
      "csv_display_name": "DataStax Kubernetes Operator for Apache Cassandra",
      "csv_metadata_description": "Simple provisioning, turn-key operations, and automated remediation of Apache Cassandra clusters\n",
      "csv_name": "cass-operator.v1.13.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T12:04:06.869000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "cass-operator",
      "provided_apis": [
        {
          "group": "cassandra.datastax.com",
          "kind": "CassandraDatacenter",
          "version": "v1beta1"
        },
        {
          "group": "control.k8ssandra.io",
          "kind": "CassandraTask",
          "version": "v1alpha1"
        }
      ],
      "provider": "DataStax",
      "related_images": [
        {
          "digest": "sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "image": "registry.connect.redhat.com/datastax/cass-operator@sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "name": "cass-operator"
        },
        {
          "digest": "sha256:43231f5e98cedad2620c71fb6db7e8e685cf825d2240f16aa615459dba241805",
          "image": "registry.connect.redhat.com/datastax/system-logger@sha256:43231f5e98cedad2620c71fb6db7e8e685cf825d2240f16aa615459dba241805",
          "name": "system-logger"
        },
        {
          "digest": "sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "image": "registry.connect.redhat.com/datastax/cass-operator@sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "name": "cass-operator-4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690-annotation"
        },
        {
          "digest": "sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "image": "registry.connect.redhat.com/datastax/cass-operator@sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "1.13.0",
      "version_original": "1.13.0"
    },
    {
      "_id": "6336ee282bdd76944b9095ef",
      "alm_examples": [
        {
          "api_version": "cassandra.datastax.com/v1beta1",
          "kind": "CassandraDatacenter",
          "metadata": {
            "name": "dc1"
          },
          "spec": {
            "clusterName": "development",
            "config": {
              "cassandra-yaml": {
                "authenticator": "PasswordAuthenticator",
                "authorizer": "CassandraAuthorizer",
                "num_tokens": 16,
                "role_manager": "CassandraRoleManager"
              },
              "jvm-server-options": {
                "initial_heap_size": "1G",
                "max_heap_size": "1G"
              }
            },
            "dockerImageRunsAsCassandra": false,
            "managementApiAuth": {
              "insecure": {}
            },
            "racks": [
              {
                "name": "rack1"
              },
              {
                "name": "rack2"
              },
              {
                "name": "rack3"
              }
            ],
            "resources": {
              "requests": {
                "cpu": "1000m",
                "memory": "2Gi"
              }
            },
            "serverType": "cassandra",
            "serverVersion": "4.0.3",
            "size": 3,
            "storageConfig": {
              "cassandraDataVolumeClaimSpec": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "resources": {
                  "requests": {
                    "storage": "10Gi"
                  }
                },
                "storageClassName": "server-storage"
              }
            }
          }
        },
        {
          "api_version": "control.k8ssandra.io/v1alpha1",
          "kind": "CassandraTask",
          "metadata": {
            "name": "example-cleanup"
          },
          "spec": {
            "datacenter": {
              "name": "dc2",
              "namespace": "cass-operator"
            },
            "jobs": [
              {
                "command": "cleanup",
                "name": "cleanup-run"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/datastax/cass-operator-bundle@sha256:85a32fce71194dbe21a29b37ff29d339d4bb49ad83e0f8a1f89c8fbe584cd92f",
      "bundle_path_digest": "sha256:85a32fce71194dbe21a29b37ff29d339d4bb49ad83e0f8a1f89c8fbe584cd92f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-30T13:24:56.553000+00:00",
      "csv_description": "## Apache Cassandra\n\nThe Apache Cassandra database is the right choice when you need scalability and\nhigh availability without compromising performance. Linear scalability and\nproven fault-tolerance on commodity hardware or cloud infrastructure make it the\nperfect platform for mission-critical data. Cassandra's support for replicating\nacross multiple datacenters is best-in-class, providing lower latency for your\nusers and the peace of mind of knowing that you can survive regional outages.\n\n## DataStax Enterprise\n\nThe most advanced distribution of Apache Cassandra\u2122 on the market, with the\nenterprise functionality needed for serious production systems and backed up and\nsupported by the best distributed-experts in the world. It's one platform for\nall types of applications anywhere, any cloud, any model: key-value, graph,\ntabular, JSON.\n\nDataStax Enterprise is a fully integrated and optimized database, with graph,\nanalytics, and search included, all with a unified security model. Simply put,\nit's the only database capable of meeting today's demanding requirements\n\n## Operator Details\n\n`cass-operator` is designed as a modular operator for Apache Cassandra and\nderived  distributions. Apache Cassandra is a distributed database consisting of\nmultiple nodes working in concert to store data and process queries along a\nnumber of fault domains. `cass-operator` has the deployment of a Cassandra\ncluster around the logical domain of a datacenter with the `CassandraDatacenter`\ncustom resource.\n    \nUpon submission of one of these resources it handles provisioning the underlying\nstateful sets (analogous to C\\* logical racks), services, and configuration.\nAdditionally through monitoring pod state via Kubernetes callbacks it handles day to day\noperations such as restarting failed processes, scaling clusters up, and deploying\nconfiguration changes in a rolling, non-disruptive, fashion.\n    \nThis operator is designed to be `Namespace` scoped. A single Kubernetes cluster may\nbe running multiple instances of this operator, in separate namespaces, to support\na number of C\\* clusters and environments. Configuration is simple with the usage of\nYAML based overrides in the Custom Resource paired with an `init` container.\n    \nIn C\\* clusters ordering and timing of certain operations are important to keep the system\nevenly distributed. `cass-operator` takes advantage of a sidecar process within the\nmain container to handle the orchestration of starting our main C* process.",
      "csv_display_name": "DataStax Kubernetes Operator for Apache Cassandra",
      "csv_metadata_description": "Simple provisioning, turn-key operations, and automated remediation of Apache Cassandra clusters\n",
      "csv_name": "cass-operator.v1.13.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:38:36.331000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "cass-operator",
      "provided_apis": [
        {
          "group": "cassandra.datastax.com",
          "kind": "CassandraDatacenter",
          "version": "v1beta1"
        },
        {
          "group": "control.k8ssandra.io",
          "kind": "CassandraTask",
          "version": "v1alpha1"
        }
      ],
      "provider": "DataStax",
      "related_images": [
        {
          "digest": "sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "image": "registry.connect.redhat.com/datastax/cass-operator@sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "name": "cass-operator"
        },
        {
          "digest": "sha256:43231f5e98cedad2620c71fb6db7e8e685cf825d2240f16aa615459dba241805",
          "image": "registry.connect.redhat.com/datastax/system-logger@sha256:43231f5e98cedad2620c71fb6db7e8e685cf825d2240f16aa615459dba241805",
          "name": "system-logger"
        },
        {
          "digest": "sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "image": "registry.connect.redhat.com/datastax/cass-operator@sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "name": "cass-operator-4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690-annotation"
        },
        {
          "digest": "sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "image": "registry.connect.redhat.com/datastax/cass-operator@sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.13.0",
      "version_original": "1.13.0"
    },
    {
      "_id": "6336f0288686d5cd06561c8c",
      "alm_examples": [
        {
          "api_version": "cassandra.datastax.com/v1beta1",
          "kind": "CassandraDatacenter",
          "metadata": {
            "name": "dc1"
          },
          "spec": {
            "clusterName": "development",
            "config": {
              "cassandra-yaml": {
                "authenticator": "PasswordAuthenticator",
                "authorizer": "CassandraAuthorizer",
                "num_tokens": 16,
                "role_manager": "CassandraRoleManager"
              },
              "jvm-server-options": {
                "initial_heap_size": "1G",
                "max_heap_size": "1G"
              }
            },
            "dockerImageRunsAsCassandra": false,
            "managementApiAuth": {
              "insecure": {}
            },
            "racks": [
              {
                "name": "rack1"
              },
              {
                "name": "rack2"
              },
              {
                "name": "rack3"
              }
            ],
            "resources": {
              "requests": {
                "cpu": "1000m",
                "memory": "2Gi"
              }
            },
            "serverType": "cassandra",
            "serverVersion": "4.0.3",
            "size": 3,
            "storageConfig": {
              "cassandraDataVolumeClaimSpec": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "resources": {
                  "requests": {
                    "storage": "10Gi"
                  }
                },
                "storageClassName": "server-storage"
              }
            }
          }
        },
        {
          "api_version": "control.k8ssandra.io/v1alpha1",
          "kind": "CassandraTask",
          "metadata": {
            "name": "example-cleanup"
          },
          "spec": {
            "datacenter": {
              "name": "dc2",
              "namespace": "cass-operator"
            },
            "jobs": [
              {
                "command": "cleanup",
                "name": "cleanup-run"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/datastax/cass-operator-bundle@sha256:85a32fce71194dbe21a29b37ff29d339d4bb49ad83e0f8a1f89c8fbe584cd92f",
      "bundle_path_digest": "sha256:85a32fce71194dbe21a29b37ff29d339d4bb49ad83e0f8a1f89c8fbe584cd92f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-30T13:33:28.826000+00:00",
      "csv_description": "## Apache Cassandra\n\nThe Apache Cassandra database is the right choice when you need scalability and\nhigh availability without compromising performance. Linear scalability and\nproven fault-tolerance on commodity hardware or cloud infrastructure make it the\nperfect platform for mission-critical data. Cassandra's support for replicating\nacross multiple datacenters is best-in-class, providing lower latency for your\nusers and the peace of mind of knowing that you can survive regional outages.\n\n## DataStax Enterprise\n\nThe most advanced distribution of Apache Cassandra\u2122 on the market, with the\nenterprise functionality needed for serious production systems and backed up and\nsupported by the best distributed-experts in the world. It's one platform for\nall types of applications anywhere, any cloud, any model: key-value, graph,\ntabular, JSON.\n\nDataStax Enterprise is a fully integrated and optimized database, with graph,\nanalytics, and search included, all with a unified security model. Simply put,\nit's the only database capable of meeting today's demanding requirements\n\n## Operator Details\n\n`cass-operator` is designed as a modular operator for Apache Cassandra and\nderived  distributions. Apache Cassandra is a distributed database consisting of\nmultiple nodes working in concert to store data and process queries along a\nnumber of fault domains. `cass-operator` has the deployment of a Cassandra\ncluster around the logical domain of a datacenter with the `CassandraDatacenter`\ncustom resource.\n    \nUpon submission of one of these resources it handles provisioning the underlying\nstateful sets (analogous to C\\* logical racks), services, and configuration.\nAdditionally through monitoring pod state via Kubernetes callbacks it handles day to day\noperations such as restarting failed processes, scaling clusters up, and deploying\nconfiguration changes in a rolling, non-disruptive, fashion.\n    \nThis operator is designed to be `Namespace` scoped. A single Kubernetes cluster may\nbe running multiple instances of this operator, in separate namespaces, to support\na number of C\\* clusters and environments. Configuration is simple with the usage of\nYAML based overrides in the Custom Resource paired with an `init` container.\n    \nIn C\\* clusters ordering and timing of certain operations are important to keep the system\nevenly distributed. `cass-operator` takes advantage of a sidecar process within the\nmain container to handle the orchestration of starting our main C* process.",
      "csv_display_name": "DataStax Kubernetes Operator for Apache Cassandra",
      "csv_metadata_description": "Simple provisioning, turn-key operations, and automated remediation of Apache Cassandra clusters\n",
      "csv_name": "cass-operator.v1.13.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:59:38.438000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cass-operator",
      "provided_apis": [
        {
          "group": "cassandra.datastax.com",
          "kind": "CassandraDatacenter",
          "plural": "cassandradatacenters",
          "version": "v1beta1"
        },
        {
          "group": "control.k8ssandra.io",
          "kind": "CassandraTask",
          "plural": "cassandratasks",
          "version": "v1alpha1"
        }
      ],
      "provider": "DataStax",
      "related_images": [
        {
          "digest": "sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "image": "registry.connect.redhat.com/datastax/cass-operator@sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "name": "cass-operator"
        },
        {
          "digest": "sha256:43231f5e98cedad2620c71fb6db7e8e685cf825d2240f16aa615459dba241805",
          "image": "registry.connect.redhat.com/datastax/system-logger@sha256:43231f5e98cedad2620c71fb6db7e8e685cf825d2240f16aa615459dba241805",
          "name": "system-logger"
        },
        {
          "digest": "sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "image": "registry.connect.redhat.com/datastax/cass-operator@sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "name": "cass-operator-4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690-annotation"
        },
        {
          "digest": "sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "image": "registry.connect.redhat.com/datastax/cass-operator@sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.13.0",
      "version_original": "1.13.0"
    },
    {
      "_id": "6336f1598686d5cd06561d02",
      "alm_examples": [
        {
          "api_version": "cassandra.datastax.com/v1beta1",
          "kind": "CassandraDatacenter",
          "metadata": {
            "name": "dc1"
          },
          "spec": {
            "clusterName": "development",
            "config": {
              "cassandra-yaml": {
                "authenticator": "PasswordAuthenticator",
                "authorizer": "CassandraAuthorizer",
                "num_tokens": 16,
                "role_manager": "CassandraRoleManager"
              },
              "jvm-server-options": {
                "initial_heap_size": "1G",
                "max_heap_size": "1G"
              }
            },
            "dockerImageRunsAsCassandra": false,
            "managementApiAuth": {
              "insecure": {}
            },
            "racks": [
              {
                "name": "rack1"
              },
              {
                "name": "rack2"
              },
              {
                "name": "rack3"
              }
            ],
            "resources": {
              "requests": {
                "cpu": "1000m",
                "memory": "2Gi"
              }
            },
            "serverType": "cassandra",
            "serverVersion": "4.0.3",
            "size": 3,
            "storageConfig": {
              "cassandraDataVolumeClaimSpec": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "resources": {
                  "requests": {
                    "storage": "10Gi"
                  }
                },
                "storageClassName": "server-storage"
              }
            }
          }
        },
        {
          "api_version": "control.k8ssandra.io/v1alpha1",
          "kind": "CassandraTask",
          "metadata": {
            "name": "example-cleanup"
          },
          "spec": {
            "datacenter": {
              "name": "dc2",
              "namespace": "cass-operator"
            },
            "jobs": [
              {
                "command": "cleanup",
                "name": "cleanup-run"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/datastax/cass-operator-bundle@sha256:85a32fce71194dbe21a29b37ff29d339d4bb49ad83e0f8a1f89c8fbe584cd92f",
      "bundle_path_digest": "sha256:85a32fce71194dbe21a29b37ff29d339d4bb49ad83e0f8a1f89c8fbe584cd92f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-30T13:38:33.318000+00:00",
      "csv_description": "## Apache Cassandra\n\nThe Apache Cassandra database is the right choice when you need scalability and\nhigh availability without compromising performance. Linear scalability and\nproven fault-tolerance on commodity hardware or cloud infrastructure make it the\nperfect platform for mission-critical data. Cassandra's support for replicating\nacross multiple datacenters is best-in-class, providing lower latency for your\nusers and the peace of mind of knowing that you can survive regional outages.\n\n## DataStax Enterprise\n\nThe most advanced distribution of Apache Cassandra\u2122 on the market, with the\nenterprise functionality needed for serious production systems and backed up and\nsupported by the best distributed-experts in the world. It's one platform for\nall types of applications anywhere, any cloud, any model: key-value, graph,\ntabular, JSON.\n\nDataStax Enterprise is a fully integrated and optimized database, with graph,\nanalytics, and search included, all with a unified security model. Simply put,\nit's the only database capable of meeting today's demanding requirements\n\n## Operator Details\n\n`cass-operator` is designed as a modular operator for Apache Cassandra and\nderived  distributions. Apache Cassandra is a distributed database consisting of\nmultiple nodes working in concert to store data and process queries along a\nnumber of fault domains. `cass-operator` has the deployment of a Cassandra\ncluster around the logical domain of a datacenter with the `CassandraDatacenter`\ncustom resource.\n    \nUpon submission of one of these resources it handles provisioning the underlying\nstateful sets (analogous to C\\* logical racks), services, and configuration.\nAdditionally through monitoring pod state via Kubernetes callbacks it handles day to day\noperations such as restarting failed processes, scaling clusters up, and deploying\nconfiguration changes in a rolling, non-disruptive, fashion.\n    \nThis operator is designed to be `Namespace` scoped. A single Kubernetes cluster may\nbe running multiple instances of this operator, in separate namespaces, to support\na number of C\\* clusters and environments. Configuration is simple with the usage of\nYAML based overrides in the Custom Resource paired with an `init` container.\n    \nIn C\\* clusters ordering and timing of certain operations are important to keep the system\nevenly distributed. `cass-operator` takes advantage of a sidecar process within the\nmain container to handle the orchestration of starting our main C* process.",
      "csv_display_name": "DataStax Kubernetes Operator for Apache Cassandra",
      "csv_metadata_description": "Simple provisioning, turn-key operations, and automated remediation of Apache Cassandra clusters\n",
      "csv_name": "cass-operator.v1.13.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:56:10.220000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cass-operator",
      "provided_apis": [
        {
          "group": "cassandra.datastax.com",
          "kind": "CassandraDatacenter",
          "plural": "cassandradatacenters",
          "version": "v1beta1"
        },
        {
          "group": "control.k8ssandra.io",
          "kind": "CassandraTask",
          "plural": "cassandratasks",
          "version": "v1alpha1"
        }
      ],
      "provider": "DataStax",
      "related_images": [
        {
          "digest": "sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "image": "registry.connect.redhat.com/datastax/cass-operator@sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "name": "cass-operator"
        },
        {
          "digest": "sha256:43231f5e98cedad2620c71fb6db7e8e685cf825d2240f16aa615459dba241805",
          "image": "registry.connect.redhat.com/datastax/system-logger@sha256:43231f5e98cedad2620c71fb6db7e8e685cf825d2240f16aa615459dba241805",
          "name": "system-logger"
        },
        {
          "digest": "sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "image": "registry.connect.redhat.com/datastax/cass-operator@sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "name": "cass-operator-4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690-annotation"
        },
        {
          "digest": "sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "image": "registry.connect.redhat.com/datastax/cass-operator@sha256:4f7262271839e23e20685762e2172ded0958d8235d49038814fd8cd3747b2690",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.13.0",
      "version_original": "1.13.0"
    },
    {
      "_id": "6337753351ac4f4c0ee7679b",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "2022.3.0"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:ea092433f3b4b6b254752483636f1bb33301f0ce569e3d69f108a6f78d2d4b89",
      "bundle_path_digest": "sha256:ea092433f3b4b6b254752483636f1bb33301f0ce569e3d69f108a6f78d2d4b89",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T23:01:07.828000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2022.3.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:52:39.218000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "plural": "aikitcontainers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:129fb992d3f6b377ac03c38f886c54badba3a87e631ea81793978ca556d476ca",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:129fb992d3f6b377ac03c38f886c54badba3a87e631ea81793978ca556d476ca",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2022.3.92623",
      "version_original": "2022.3.92623"
    },
    {
      "_id": "6337762c8686d5cd0656537e",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "2022.3.0"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:ea092433f3b4b6b254752483636f1bb33301f0ce569e3d69f108a6f78d2d4b89",
      "bundle_path_digest": "sha256:ea092433f3b4b6b254752483636f1bb33301f0ce569e3d69f108a6f78d2d4b89",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T23:05:16.887000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2022.3.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:56:34.826000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:129fb992d3f6b377ac03c38f886c54badba3a87e631ea81793978ca556d476ca",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:129fb992d3f6b377ac03c38f886c54badba3a87e631ea81793978ca556d476ca",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2022.3.92623",
      "version_original": "2022.3.92623"
    },
    {
      "_id": "6337763f3e77eb509cc1f921",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "2022.3.0"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:ea092433f3b4b6b254752483636f1bb33301f0ce569e3d69f108a6f78d2d4b89",
      "bundle_path_digest": "sha256:ea092433f3b4b6b254752483636f1bb33301f0ce569e3d69f108a6f78d2d4b89",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T23:05:35.017000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2022.3.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:44:33.271000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "plural": "aikitcontainers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:129fb992d3f6b377ac03c38f886c54badba3a87e631ea81793978ca556d476ca",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:129fb992d3f6b377ac03c38f886c54badba3a87e631ea81793978ca556d476ca",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2022.3.92623",
      "version_original": "2022.3.92623"
    },
    {
      "_id": "63377a7f8cbe5b5e93e9675e",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "2022.3.0"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:ea092433f3b4b6b254752483636f1bb33301f0ce569e3d69f108a6f78d2d4b89",
      "bundle_path_digest": "sha256:ea092433f3b4b6b254752483636f1bb33301f0ce569e3d69f108a6f78d2d4b89",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T23:23:43.781000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2022.3.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:10:13.201000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "plural": "aikitcontainers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:129fb992d3f6b377ac03c38f886c54badba3a87e631ea81793978ca556d476ca",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:129fb992d3f6b377ac03c38f886c54badba3a87e631ea81793978ca556d476ca",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2022.3.92623",
      "version_original": "2022.3.92623"
    },
    {
      "_id": "633aae8f98bae04fd1a6878d",
      "alm_examples": [
        {
          "api_version": "csi.nec.com/v1",
          "kind": "NSPC",
          "metadata": {
            "name": "nspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nec/nspc-operator-bundle@sha256:6a3993c4d5f5d25fde3a2ac03fb7b51a52eec9baaaaeec440b8f633f7bdeed1c",
      "bundle_path_digest": "sha256:6a3993c4d5f5d25fde3a2ac03fb7b51a52eec9baaaaeec440b8f633f7bdeed1c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-03T09:42:39.181000+00:00",
      "csv_description": "## About\nNEC Storage Plug-in for Containers (NSPC) is a plugin that integrates NEC Storage V Series into Kubernetes based clusters.\nNSPC provides dynamic persistent volume provisioning capabilities from NEC Storage V Series arrays.\n\nFor full documentation, refer to the reference guide.\n\n## Requirements\n\n### Supported Driver Version\n\n* NSPC v3.10.0\n\n### Supported Platforms\n\n* OpenShift v4.8, v4.9, v4.10\n\n### Supported Operating Systems\n\n* RHEL 7.x\n* RHEL 8.x",
      "csv_display_name": "NEC Storage Plug-in for Containers",
      "csv_metadata_description": "An operator for managing NEC Storage Plug-in for Containers CSI driver",
      "csv_name": "nspc-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:21:24.347000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "nspc-operator",
      "provided_apis": [
        {
          "group": "csi.nec.com",
          "kind": "NSPC",
          "plural": "nspcs",
          "version": "v1"
        }
      ],
      "provider": "NEC",
      "related_images": [
        {
          "digest": "sha256:a9bcf667d311b3fd10ab7370af80fb94a3a8c51914e56b9504f8277980de2467",
          "image": "registry.connect.redhat.com/nec/nspc-csi-driver@sha256:a9bcf667d311b3fd10ab7370af80fb94a3a8c51914e56b9504f8277980de2467",
          "name": "nspc-csi-driver"
        },
        {
          "digest": "sha256:b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c",
          "image": "registry.connect.redhat.com/nec/nspc-operator@sha256:b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c",
          "name": "nspc-operator"
        },
        {
          "digest": "sha256:e29462051266aa293115b4056d0b211fc35e8dfdcd716dd5480cbf2b4411f1c8",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:e29462051266aa293115b4056d0b211fc35e8dfdcd716dd5480cbf2b4411f1c8",
          "name": "ose-csi-external-attacher-v4.8"
        },
        {
          "digest": "sha256:ee5eb1f4f81d03798824a04f14d59dbdc2dbcd29f8b0784f9b43ab38d3032fc1",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:ee5eb1f4f81d03798824a04f14d59dbdc2dbcd29f8b0784f9b43ab38d3032fc1",
          "name": "ose-csi-external-provisioner-v4.8"
        },
        {
          "digest": "sha256:1eb45a961aadc52f46a3d3084da6f667a9da4692e29672ed49d42a95d4c0597d",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:1eb45a961aadc52f46a3d3084da6f667a9da4692e29672ed49d42a95d4c0597d",
          "name": "ose-csi-node-driver-registrar-v4.8"
        },
        {
          "digest": "sha256:e8c4b045477241f14bb59fe2625b3bb6a010c2f205de8719ecbaabe62b6963ca",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:e8c4b045477241f14bb59fe2625b3bb6a010c2f205de8719ecbaabe62b6963ca",
          "name": "ose-csi-livenessprobe-v4.8"
        },
        {
          "digest": "sha256:eaf9d026d37644d16782cb3d4a9d74f7c969f073d3ba9aa45a83400670251499",
          "image": "registry.redhat.io/openshift4/ose-csi-external-resizer-rhel8@sha256:eaf9d026d37644d16782cb3d4a9d74f7c969f073d3ba9aa45a83400670251499",
          "name": "ose-csi-external-resizer-rhel8-v4.8"
        },
        {
          "digest": "sha256:b51e2413c4dd58a9073ddfe9bd48303c13ae5662ccbb1a56c75c75acd0fb1381",
          "image": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:b51e2413c4dd58a9073ddfe9bd48303c13ae5662ccbb1a56c75c75acd0fb1381",
          "name": "ose-csi-external-snapshotter-rhel8-v4.8"
        },
        {
          "digest": "sha256:1cdd882b2257fff3198cfc8e8dad47e4e2e067966b6c56633daf62c6e12964d4",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:1cdd882b2257fff3198cfc8e8dad47e4e2e067966b6c56633daf62c6e12964d4",
          "name": "ose-csi-external-attacher-v4.9"
        },
        {
          "digest": "sha256:448ad197f941249247a9672b38cdf2c91b33fd588c4c7c54eda83df1f3e9bc7e",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:448ad197f941249247a9672b38cdf2c91b33fd588c4c7c54eda83df1f3e9bc7e",
          "name": "ose-csi-external-provisioner-v4.9"
        },
        {
          "digest": "sha256:09be9f710932bc2f4f73eefaca2aa24e5da48ac178fa3f55a972d2a2e3e9c3bc",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:09be9f710932bc2f4f73eefaca2aa24e5da48ac178fa3f55a972d2a2e3e9c3bc",
          "name": "ose-csi-node-driver-registrar-v4.9"
        },
        {
          "digest": "sha256:c61a887f2135c82fb4409cdaaba1c4e81f93c20ca335a40c228242f3329e0547",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:c61a887f2135c82fb4409cdaaba1c4e81f93c20ca335a40c228242f3329e0547",
          "name": "ose-csi-livenessprobe-v4.9"
        },
        {
          "digest": "sha256:10c2e6528ac30691aa9f42d6b53f5b65c41321be51d2a6a93991959829db004f",
          "image": "registry.redhat.io/openshift4/ose-csi-external-resizer-rhel8@sha256:10c2e6528ac30691aa9f42d6b53f5b65c41321be51d2a6a93991959829db004f",
          "name": "ose-csi-external-resizer-rhel8-v4.9"
        },
        {
          "digest": "sha256:0c37ebb246653199b76ad6114f584b1b4db1ff1048d6b0f228ed843fa2e2eb16",
          "image": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:0c37ebb246653199b76ad6114f584b1b4db1ff1048d6b0f228ed843fa2e2eb16",
          "name": "ose-csi-external-snapshotter-rhel8-v4.9"
        },
        {
          "digest": "sha256:cdaf874ffaff5e3e4cae473c40372ef45f7d9e3bb35a93c7a715bcc30ff03a4f",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:cdaf874ffaff5e3e4cae473c40372ef45f7d9e3bb35a93c7a715bcc30ff03a4f",
          "name": "ose-csi-external-attacher-v4.10"
        },
        {
          "digest": "sha256:95010584242f9705ffad17632bd11cf1299955b986d1e5b4b8892f9fda75bb00",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:95010584242f9705ffad17632bd11cf1299955b986d1e5b4b8892f9fda75bb00",
          "name": "ose-csi-external-provisioner-v4.10"
        },
        {
          "digest": "sha256:90792483c531bfa2c51e5be45efdc0e52e3e2461a4c9a6921428d719415dc8b0",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:90792483c531bfa2c51e5be45efdc0e52e3e2461a4c9a6921428d719415dc8b0",
          "name": "ose-csi-node-driver-registrar-v4.10"
        },
        {
          "digest": "sha256:b9db5f0eb8a4d145b6f5a89e12d3361a04616e27b8b8d4bcdfd2c1545f6dc407",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:b9db5f0eb8a4d145b6f5a89e12d3361a04616e27b8b8d4bcdfd2c1545f6dc407",
          "name": "ose-csi-livenessprobe-v4.10"
        },
        {
          "digest": "sha256:34386f8c0227015c1abd9d7dfd8e9b687cba7047ec021d393ab39133e67178b9",
          "image": "registry.redhat.io/openshift4/ose-csi-external-resizer-rhel8@sha256:34386f8c0227015c1abd9d7dfd8e9b687cba7047ec021d393ab39133e67178b9",
          "name": "ose-csi-external-resizer-rhel8-v4.10"
        },
        {
          "digest": "sha256:cb781aff7b4ead2e0535274186b5e97274d734e19e9ef404e187bc39d11bb2cc",
          "image": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:cb781aff7b4ead2e0535274186b5e97274d734e19e9ef404e187bc39d11bb2cc",
          "name": "ose-csi-external-snapshotter-rhel8-v4.10"
        },
        {
          "digest": "sha256:b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c",
          "image": "registry.connect.redhat.com/nec/nspc-operator@sha256:b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c",
          "name": "nspc-operator-b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c-annotation"
        },
        {
          "digest": "sha256:b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c",
          "image": "registry.connect.redhat.com/nec/nspc-operator@sha256:b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "633aaf7898bae04fd1a687b1",
      "alm_examples": [
        {
          "api_version": "csi.nec.com/v1",
          "kind": "NSPC",
          "metadata": {
            "name": "nspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nec/nspc-operator-bundle@sha256:6a3993c4d5f5d25fde3a2ac03fb7b51a52eec9baaaaeec440b8f633f7bdeed1c",
      "bundle_path_digest": "sha256:6a3993c4d5f5d25fde3a2ac03fb7b51a52eec9baaaaeec440b8f633f7bdeed1c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-03T09:46:32.510000+00:00",
      "csv_description": "## About\nNEC Storage Plug-in for Containers (NSPC) is a plugin that integrates NEC Storage V Series into Kubernetes based clusters.\nNSPC provides dynamic persistent volume provisioning capabilities from NEC Storage V Series arrays.\n\nFor full documentation, refer to the reference guide.\n\n## Requirements\n\n### Supported Driver Version\n\n* NSPC v3.10.0\n\n### Supported Platforms\n\n* OpenShift v4.8, v4.9, v4.10\n\n### Supported Operating Systems\n\n* RHEL 7.x\n* RHEL 8.x",
      "csv_display_name": "NEC Storage Plug-in for Containers",
      "csv_metadata_description": "An operator for managing NEC Storage Plug-in for Containers CSI driver",
      "csv_name": "nspc-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:19:49.404000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "nspc-operator",
      "provided_apis": [
        {
          "group": "csi.nec.com",
          "kind": "NSPC",
          "version": "v1"
        }
      ],
      "provider": "NEC",
      "related_images": [
        {
          "digest": "sha256:a9bcf667d311b3fd10ab7370af80fb94a3a8c51914e56b9504f8277980de2467",
          "image": "registry.connect.redhat.com/nec/nspc-csi-driver@sha256:a9bcf667d311b3fd10ab7370af80fb94a3a8c51914e56b9504f8277980de2467",
          "name": "nspc-csi-driver"
        },
        {
          "digest": "sha256:b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c",
          "image": "registry.connect.redhat.com/nec/nspc-operator@sha256:b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c",
          "name": "nspc-operator"
        },
        {
          "digest": "sha256:e29462051266aa293115b4056d0b211fc35e8dfdcd716dd5480cbf2b4411f1c8",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:e29462051266aa293115b4056d0b211fc35e8dfdcd716dd5480cbf2b4411f1c8",
          "name": "ose-csi-external-attacher-v4.8"
        },
        {
          "digest": "sha256:ee5eb1f4f81d03798824a04f14d59dbdc2dbcd29f8b0784f9b43ab38d3032fc1",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:ee5eb1f4f81d03798824a04f14d59dbdc2dbcd29f8b0784f9b43ab38d3032fc1",
          "name": "ose-csi-external-provisioner-v4.8"
        },
        {
          "digest": "sha256:1eb45a961aadc52f46a3d3084da6f667a9da4692e29672ed49d42a95d4c0597d",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:1eb45a961aadc52f46a3d3084da6f667a9da4692e29672ed49d42a95d4c0597d",
          "name": "ose-csi-node-driver-registrar-v4.8"
        },
        {
          "digest": "sha256:e8c4b045477241f14bb59fe2625b3bb6a010c2f205de8719ecbaabe62b6963ca",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:e8c4b045477241f14bb59fe2625b3bb6a010c2f205de8719ecbaabe62b6963ca",
          "name": "ose-csi-livenessprobe-v4.8"
        },
        {
          "digest": "sha256:eaf9d026d37644d16782cb3d4a9d74f7c969f073d3ba9aa45a83400670251499",
          "image": "registry.redhat.io/openshift4/ose-csi-external-resizer-rhel8@sha256:eaf9d026d37644d16782cb3d4a9d74f7c969f073d3ba9aa45a83400670251499",
          "name": "ose-csi-external-resizer-rhel8-v4.8"
        },
        {
          "digest": "sha256:b51e2413c4dd58a9073ddfe9bd48303c13ae5662ccbb1a56c75c75acd0fb1381",
          "image": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:b51e2413c4dd58a9073ddfe9bd48303c13ae5662ccbb1a56c75c75acd0fb1381",
          "name": "ose-csi-external-snapshotter-rhel8-v4.8"
        },
        {
          "digest": "sha256:1cdd882b2257fff3198cfc8e8dad47e4e2e067966b6c56633daf62c6e12964d4",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:1cdd882b2257fff3198cfc8e8dad47e4e2e067966b6c56633daf62c6e12964d4",
          "name": "ose-csi-external-attacher-v4.9"
        },
        {
          "digest": "sha256:448ad197f941249247a9672b38cdf2c91b33fd588c4c7c54eda83df1f3e9bc7e",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:448ad197f941249247a9672b38cdf2c91b33fd588c4c7c54eda83df1f3e9bc7e",
          "name": "ose-csi-external-provisioner-v4.9"
        },
        {
          "digest": "sha256:09be9f710932bc2f4f73eefaca2aa24e5da48ac178fa3f55a972d2a2e3e9c3bc",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:09be9f710932bc2f4f73eefaca2aa24e5da48ac178fa3f55a972d2a2e3e9c3bc",
          "name": "ose-csi-node-driver-registrar-v4.9"
        },
        {
          "digest": "sha256:c61a887f2135c82fb4409cdaaba1c4e81f93c20ca335a40c228242f3329e0547",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:c61a887f2135c82fb4409cdaaba1c4e81f93c20ca335a40c228242f3329e0547",
          "name": "ose-csi-livenessprobe-v4.9"
        },
        {
          "digest": "sha256:10c2e6528ac30691aa9f42d6b53f5b65c41321be51d2a6a93991959829db004f",
          "image": "registry.redhat.io/openshift4/ose-csi-external-resizer-rhel8@sha256:10c2e6528ac30691aa9f42d6b53f5b65c41321be51d2a6a93991959829db004f",
          "name": "ose-csi-external-resizer-rhel8-v4.9"
        },
        {
          "digest": "sha256:0c37ebb246653199b76ad6114f584b1b4db1ff1048d6b0f228ed843fa2e2eb16",
          "image": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:0c37ebb246653199b76ad6114f584b1b4db1ff1048d6b0f228ed843fa2e2eb16",
          "name": "ose-csi-external-snapshotter-rhel8-v4.9"
        },
        {
          "digest": "sha256:cdaf874ffaff5e3e4cae473c40372ef45f7d9e3bb35a93c7a715bcc30ff03a4f",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:cdaf874ffaff5e3e4cae473c40372ef45f7d9e3bb35a93c7a715bcc30ff03a4f",
          "name": "ose-csi-external-attacher-v4.10"
        },
        {
          "digest": "sha256:95010584242f9705ffad17632bd11cf1299955b986d1e5b4b8892f9fda75bb00",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:95010584242f9705ffad17632bd11cf1299955b986d1e5b4b8892f9fda75bb00",
          "name": "ose-csi-external-provisioner-v4.10"
        },
        {
          "digest": "sha256:90792483c531bfa2c51e5be45efdc0e52e3e2461a4c9a6921428d719415dc8b0",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:90792483c531bfa2c51e5be45efdc0e52e3e2461a4c9a6921428d719415dc8b0",
          "name": "ose-csi-node-driver-registrar-v4.10"
        },
        {
          "digest": "sha256:b9db5f0eb8a4d145b6f5a89e12d3361a04616e27b8b8d4bcdfd2c1545f6dc407",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:b9db5f0eb8a4d145b6f5a89e12d3361a04616e27b8b8d4bcdfd2c1545f6dc407",
          "name": "ose-csi-livenessprobe-v4.10"
        },
        {
          "digest": "sha256:34386f8c0227015c1abd9d7dfd8e9b687cba7047ec021d393ab39133e67178b9",
          "image": "registry.redhat.io/openshift4/ose-csi-external-resizer-rhel8@sha256:34386f8c0227015c1abd9d7dfd8e9b687cba7047ec021d393ab39133e67178b9",
          "name": "ose-csi-external-resizer-rhel8-v4.10"
        },
        {
          "digest": "sha256:cb781aff7b4ead2e0535274186b5e97274d734e19e9ef404e187bc39d11bb2cc",
          "image": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:cb781aff7b4ead2e0535274186b5e97274d734e19e9ef404e187bc39d11bb2cc",
          "name": "ose-csi-external-snapshotter-rhel8-v4.10"
        },
        {
          "digest": "sha256:b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c",
          "image": "registry.connect.redhat.com/nec/nspc-operator@sha256:b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c",
          "name": "nspc-operator-b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c-annotation"
        },
        {
          "digest": "sha256:b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c",
          "image": "registry.connect.redhat.com/nec/nspc-operator@sha256:b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "633ab08d6db220f7ef9e37b2",
      "alm_examples": [
        {
          "api_version": "csi.nec.com/v1",
          "kind": "NSPC",
          "metadata": {
            "name": "nspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nec/nspc-operator-bundle@sha256:6a3993c4d5f5d25fde3a2ac03fb7b51a52eec9baaaaeec440b8f633f7bdeed1c",
      "bundle_path_digest": "sha256:6a3993c4d5f5d25fde3a2ac03fb7b51a52eec9baaaaeec440b8f633f7bdeed1c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-03T09:51:09.691000+00:00",
      "csv_description": "## About\nNEC Storage Plug-in for Containers (NSPC) is a plugin that integrates NEC Storage V Series into Kubernetes based clusters.\nNSPC provides dynamic persistent volume provisioning capabilities from NEC Storage V Series arrays.\n\nFor full documentation, refer to the reference guide.\n\n## Requirements\n\n### Supported Driver Version\n\n* NSPC v3.10.0\n\n### Supported Platforms\n\n* OpenShift v4.8, v4.9, v4.10\n\n### Supported Operating Systems\n\n* RHEL 7.x\n* RHEL 8.x",
      "csv_display_name": "NEC Storage Plug-in for Containers",
      "csv_metadata_description": "An operator for managing NEC Storage Plug-in for Containers CSI driver",
      "csv_name": "nspc-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:21:55.489000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nspc-operator",
      "provided_apis": [
        {
          "group": "csi.nec.com",
          "kind": "NSPC",
          "version": "v1"
        }
      ],
      "provider": "NEC",
      "related_images": [
        {
          "digest": "sha256:a9bcf667d311b3fd10ab7370af80fb94a3a8c51914e56b9504f8277980de2467",
          "image": "registry.connect.redhat.com/nec/nspc-csi-driver@sha256:a9bcf667d311b3fd10ab7370af80fb94a3a8c51914e56b9504f8277980de2467",
          "name": "nspc-csi-driver"
        },
        {
          "digest": "sha256:b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c",
          "image": "registry.connect.redhat.com/nec/nspc-operator@sha256:b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c",
          "name": "nspc-operator"
        },
        {
          "digest": "sha256:e29462051266aa293115b4056d0b211fc35e8dfdcd716dd5480cbf2b4411f1c8",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:e29462051266aa293115b4056d0b211fc35e8dfdcd716dd5480cbf2b4411f1c8",
          "name": "ose-csi-external-attacher-v4.8"
        },
        {
          "digest": "sha256:ee5eb1f4f81d03798824a04f14d59dbdc2dbcd29f8b0784f9b43ab38d3032fc1",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:ee5eb1f4f81d03798824a04f14d59dbdc2dbcd29f8b0784f9b43ab38d3032fc1",
          "name": "ose-csi-external-provisioner-v4.8"
        },
        {
          "digest": "sha256:1eb45a961aadc52f46a3d3084da6f667a9da4692e29672ed49d42a95d4c0597d",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:1eb45a961aadc52f46a3d3084da6f667a9da4692e29672ed49d42a95d4c0597d",
          "name": "ose-csi-node-driver-registrar-v4.8"
        },
        {
          "digest": "sha256:e8c4b045477241f14bb59fe2625b3bb6a010c2f205de8719ecbaabe62b6963ca",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:e8c4b045477241f14bb59fe2625b3bb6a010c2f205de8719ecbaabe62b6963ca",
          "name": "ose-csi-livenessprobe-v4.8"
        },
        {
          "digest": "sha256:eaf9d026d37644d16782cb3d4a9d74f7c969f073d3ba9aa45a83400670251499",
          "image": "registry.redhat.io/openshift4/ose-csi-external-resizer-rhel8@sha256:eaf9d026d37644d16782cb3d4a9d74f7c969f073d3ba9aa45a83400670251499",
          "name": "ose-csi-external-resizer-rhel8-v4.8"
        },
        {
          "digest": "sha256:b51e2413c4dd58a9073ddfe9bd48303c13ae5662ccbb1a56c75c75acd0fb1381",
          "image": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:b51e2413c4dd58a9073ddfe9bd48303c13ae5662ccbb1a56c75c75acd0fb1381",
          "name": "ose-csi-external-snapshotter-rhel8-v4.8"
        },
        {
          "digest": "sha256:1cdd882b2257fff3198cfc8e8dad47e4e2e067966b6c56633daf62c6e12964d4",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:1cdd882b2257fff3198cfc8e8dad47e4e2e067966b6c56633daf62c6e12964d4",
          "name": "ose-csi-external-attacher-v4.9"
        },
        {
          "digest": "sha256:448ad197f941249247a9672b38cdf2c91b33fd588c4c7c54eda83df1f3e9bc7e",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:448ad197f941249247a9672b38cdf2c91b33fd588c4c7c54eda83df1f3e9bc7e",
          "name": "ose-csi-external-provisioner-v4.9"
        },
        {
          "digest": "sha256:09be9f710932bc2f4f73eefaca2aa24e5da48ac178fa3f55a972d2a2e3e9c3bc",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:09be9f710932bc2f4f73eefaca2aa24e5da48ac178fa3f55a972d2a2e3e9c3bc",
          "name": "ose-csi-node-driver-registrar-v4.9"
        },
        {
          "digest": "sha256:c61a887f2135c82fb4409cdaaba1c4e81f93c20ca335a40c228242f3329e0547",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:c61a887f2135c82fb4409cdaaba1c4e81f93c20ca335a40c228242f3329e0547",
          "name": "ose-csi-livenessprobe-v4.9"
        },
        {
          "digest": "sha256:10c2e6528ac30691aa9f42d6b53f5b65c41321be51d2a6a93991959829db004f",
          "image": "registry.redhat.io/openshift4/ose-csi-external-resizer-rhel8@sha256:10c2e6528ac30691aa9f42d6b53f5b65c41321be51d2a6a93991959829db004f",
          "name": "ose-csi-external-resizer-rhel8-v4.9"
        },
        {
          "digest": "sha256:0c37ebb246653199b76ad6114f584b1b4db1ff1048d6b0f228ed843fa2e2eb16",
          "image": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:0c37ebb246653199b76ad6114f584b1b4db1ff1048d6b0f228ed843fa2e2eb16",
          "name": "ose-csi-external-snapshotter-rhel8-v4.9"
        },
        {
          "digest": "sha256:cdaf874ffaff5e3e4cae473c40372ef45f7d9e3bb35a93c7a715bcc30ff03a4f",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:cdaf874ffaff5e3e4cae473c40372ef45f7d9e3bb35a93c7a715bcc30ff03a4f",
          "name": "ose-csi-external-attacher-v4.10"
        },
        {
          "digest": "sha256:95010584242f9705ffad17632bd11cf1299955b986d1e5b4b8892f9fda75bb00",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:95010584242f9705ffad17632bd11cf1299955b986d1e5b4b8892f9fda75bb00",
          "name": "ose-csi-external-provisioner-v4.10"
        },
        {
          "digest": "sha256:90792483c531bfa2c51e5be45efdc0e52e3e2461a4c9a6921428d719415dc8b0",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:90792483c531bfa2c51e5be45efdc0e52e3e2461a4c9a6921428d719415dc8b0",
          "name": "ose-csi-node-driver-registrar-v4.10"
        },
        {
          "digest": "sha256:b9db5f0eb8a4d145b6f5a89e12d3361a04616e27b8b8d4bcdfd2c1545f6dc407",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:b9db5f0eb8a4d145b6f5a89e12d3361a04616e27b8b8d4bcdfd2c1545f6dc407",
          "name": "ose-csi-livenessprobe-v4.10"
        },
        {
          "digest": "sha256:34386f8c0227015c1abd9d7dfd8e9b687cba7047ec021d393ab39133e67178b9",
          "image": "registry.redhat.io/openshift4/ose-csi-external-resizer-rhel8@sha256:34386f8c0227015c1abd9d7dfd8e9b687cba7047ec021d393ab39133e67178b9",
          "name": "ose-csi-external-resizer-rhel8-v4.10"
        },
        {
          "digest": "sha256:cb781aff7b4ead2e0535274186b5e97274d734e19e9ef404e187bc39d11bb2cc",
          "image": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:cb781aff7b4ead2e0535274186b5e97274d734e19e9ef404e187bc39d11bb2cc",
          "name": "ose-csi-external-snapshotter-rhel8-v4.10"
        },
        {
          "digest": "sha256:b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c",
          "image": "registry.connect.redhat.com/nec/nspc-operator@sha256:b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c",
          "name": "nspc-operator-b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c-annotation"
        },
        {
          "digest": "sha256:b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c",
          "image": "registry.connect.redhat.com/nec/nspc-operator@sha256:b5848a0c9fcb1f16f8e6a85b0de13320793d9baa230a235d4d048f240897056c",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "633abf629fd3c31befe893d9",
      "alm_examples": [
        {
          "api_version": "tm.solution-soft.com/v1alpha1",
          "kind": "TimeMachine",
          "metadata": {
            "name": "timemachine-sample"
          },
          "spec": {
            "aws": {
              "shared_volume_name": ""
            },
            "cluster_provider": "ibm",
            "ibm": {
              "persistentvolume": {
                "storageclass": "ibmc-file-silver-gid"
              }
            },
            "imagePullSecrets": [],
            "tm_lichost": "52.152.148.40",
            "tm_licpass": "qwaszx",
            "tm_licport": "57777"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator-bundle@sha256:adf4617a811dae43627f5a84e051f2b50aef7d728086a83e5d0cabfffe6f18a3",
      "bundle_path_digest": "sha256:adf4617a811dae43627f5a84e051f2b50aef7d728086a83e5d0cabfffe6f18a3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-03T10:54:26.288000+00:00",
      "csv_description": "Time Machine operator enables time travel of OpenShift pods/deployments.\n\nTo time travel a pod where your application is, you just need to install the Time Machine operator and create a Time Machine custom resource in the same namespace, without the need of changing the container images of the application you\u2019re using, or adding containers to the pod with your application.\n\nTime travelling is done on the namespace level where all the (configured) target pods/deployments see the same virtual time.",
      "csv_display_name": "Time Machine Operator",
      "csv_metadata_description": "Time Machine Operator enables time travel of OpenShift pods, without the need to change the system clock on any of the cluster nodes",
      "csv_name": "timemachine-operator.v1.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:56:46.049000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "timemachine-operator",
      "provided_apis": [
        {
          "group": "tm.solution-soft.com",
          "kind": "TimeMachine",
          "version": "v1alpha1"
        }
      ],
      "provider": "Solution-Soft",
      "related_images": [
        {
          "digest": "sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "name": "timemachine-operator-9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee-annotation"
        },
        {
          "digest": "sha256:0c304c11986790f446604319dfc29db494b15f5f9fa13f2c436688ec29c92dbe",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:0c304c11986790f446604319dfc29db494b15f5f9fa13f2c436688ec29c92dbe",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "name": "manager"
        },
        {
          "digest": "sha256:9a2c3baf6d4a57c2beb79024e8800bee34745598d07a2cdac44666aafa3439c4",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/virtual-clock-testing-tool@sha256:9a2c3baf6d4a57c2beb79024e8800bee34745598d07a2cdac44666aafa3439c4",
          "name": "timemachine"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.0.4 <1.0.15",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.0.15",
      "version_original": "1.0.15"
    },
    {
      "_id": "633ac0df803ffa16ce05237e",
      "alm_examples": [
        {
          "api_version": "tm.solution-soft.com/v1alpha1",
          "kind": "TimeMachine",
          "metadata": {
            "name": "timemachine-sample"
          },
          "spec": {
            "aws": {
              "shared_volume_name": ""
            },
            "cluster_provider": "ibm",
            "ibm": {
              "persistentvolume": {
                "storageclass": "ibmc-file-silver-gid"
              }
            },
            "imagePullSecrets": [],
            "tm_lichost": "52.152.148.40",
            "tm_licpass": "qwaszx",
            "tm_licport": "57777"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator-bundle@sha256:adf4617a811dae43627f5a84e051f2b50aef7d728086a83e5d0cabfffe6f18a3",
      "bundle_path_digest": "sha256:adf4617a811dae43627f5a84e051f2b50aef7d728086a83e5d0cabfffe6f18a3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-03T11:00:47.251000+00:00",
      "csv_description": "Time Machine operator enables time travel of OpenShift pods/deployments.\n\nTo time travel a pod where your application is, you just need to install the Time Machine operator and create a Time Machine custom resource in the same namespace, without the need of changing the container images of the application you\u2019re using, or adding containers to the pod with your application.\n\nTime travelling is done on the namespace level where all the (configured) target pods/deployments see the same virtual time.",
      "csv_display_name": "Time Machine Operator",
      "csv_metadata_description": "Time Machine Operator enables time travel of OpenShift pods, without the need to change the system clock on any of the cluster nodes",
      "csv_name": "timemachine-operator.v1.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T12:14:05.702000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "timemachine-operator",
      "provided_apis": [
        {
          "group": "tm.solution-soft.com",
          "kind": "TimeMachine",
          "version": "v1alpha1"
        }
      ],
      "provider": "Solution-Soft",
      "related_images": [
        {
          "digest": "sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "name": "timemachine-operator-9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee-annotation"
        },
        {
          "digest": "sha256:0c304c11986790f446604319dfc29db494b15f5f9fa13f2c436688ec29c92dbe",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:0c304c11986790f446604319dfc29db494b15f5f9fa13f2c436688ec29c92dbe",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "name": "manager"
        },
        {
          "digest": "sha256:9a2c3baf6d4a57c2beb79024e8800bee34745598d07a2cdac44666aafa3439c4",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/virtual-clock-testing-tool@sha256:9a2c3baf6d4a57c2beb79024e8800bee34745598d07a2cdac44666aafa3439c4",
          "name": "timemachine"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.0.4 <1.0.15",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "1.0.15",
      "version_original": "1.0.15"
    },
    {
      "_id": "633ac1cec6db529eeae827ed",
      "alm_examples": [
        {
          "api_version": "tm.solution-soft.com/v1alpha1",
          "kind": "TimeMachine",
          "metadata": {
            "name": "timemachine-sample"
          },
          "spec": {
            "aws": {
              "shared_volume_name": ""
            },
            "cluster_provider": "ibm",
            "ibm": {
              "persistentvolume": {
                "storageclass": "ibmc-file-silver-gid"
              }
            },
            "imagePullSecrets": [],
            "tm_lichost": "52.152.148.40",
            "tm_licpass": "qwaszx",
            "tm_licport": "57777"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator-bundle@sha256:adf4617a811dae43627f5a84e051f2b50aef7d728086a83e5d0cabfffe6f18a3",
      "bundle_path_digest": "sha256:adf4617a811dae43627f5a84e051f2b50aef7d728086a83e5d0cabfffe6f18a3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-03T11:04:46.642000+00:00",
      "csv_description": "Time Machine operator enables time travel of OpenShift pods/deployments.\n\nTo time travel a pod where your application is, you just need to install the Time Machine operator and create a Time Machine custom resource in the same namespace, without the need of changing the container images of the application you\u2019re using, or adding containers to the pod with your application.\n\nTime travelling is done on the namespace level where all the (configured) target pods/deployments see the same virtual time.",
      "csv_display_name": "Time Machine Operator",
      "csv_metadata_description": "Time Machine Operator enables time travel of OpenShift pods, without the need to change the system clock on any of the cluster nodes",
      "csv_name": "timemachine-operator.v1.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:34:36.549000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "timemachine-operator",
      "provided_apis": [
        {
          "group": "tm.solution-soft.com",
          "kind": "TimeMachine",
          "plural": "timemachines",
          "version": "v1alpha1"
        }
      ],
      "provider": "Solution-Soft",
      "related_images": [
        {
          "digest": "sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "name": "timemachine-operator-9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee-annotation"
        },
        {
          "digest": "sha256:0c304c11986790f446604319dfc29db494b15f5f9fa13f2c436688ec29c92dbe",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:0c304c11986790f446604319dfc29db494b15f5f9fa13f2c436688ec29c92dbe",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "name": "manager"
        },
        {
          "digest": "sha256:9a2c3baf6d4a57c2beb79024e8800bee34745598d07a2cdac44666aafa3439c4",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/virtual-clock-testing-tool@sha256:9a2c3baf6d4a57c2beb79024e8800bee34745598d07a2cdac44666aafa3439c4",
          "name": "timemachine"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.0.4 <1.0.15",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.0.15",
      "version_original": "1.0.15"
    },
    {
      "_id": "633ac26bfa5da29a9750e9dd",
      "alm_examples": [
        {
          "api_version": "tm.solution-soft.com/v1alpha1",
          "kind": "TimeMachine",
          "metadata": {
            "name": "timemachine-sample"
          },
          "spec": {
            "aws": {
              "shared_volume_name": ""
            },
            "cluster_provider": "ibm",
            "ibm": {
              "persistentvolume": {
                "storageclass": "ibmc-file-silver-gid"
              }
            },
            "imagePullSecrets": [],
            "tm_lichost": "52.152.148.40",
            "tm_licpass": "qwaszx",
            "tm_licport": "57777"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator-bundle@sha256:adf4617a811dae43627f5a84e051f2b50aef7d728086a83e5d0cabfffe6f18a3",
      "bundle_path_digest": "sha256:adf4617a811dae43627f5a84e051f2b50aef7d728086a83e5d0cabfffe6f18a3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-03T11:07:23.841000+00:00",
      "csv_description": "Time Machine operator enables time travel of OpenShift pods/deployments.\n\nTo time travel a pod where your application is, you just need to install the Time Machine operator and create a Time Machine custom resource in the same namespace, without the need of changing the container images of the application you\u2019re using, or adding containers to the pod with your application.\n\nTime travelling is done on the namespace level where all the (configured) target pods/deployments see the same virtual time.",
      "csv_display_name": "Time Machine Operator",
      "csv_metadata_description": "Time Machine Operator enables time travel of OpenShift pods, without the need to change the system clock on any of the cluster nodes",
      "csv_name": "timemachine-operator.v1.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:34:56.340000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "timemachine-operator",
      "provided_apis": [
        {
          "group": "tm.solution-soft.com",
          "kind": "TimeMachine",
          "plural": "timemachines",
          "version": "v1alpha1"
        }
      ],
      "provider": "Solution-Soft",
      "related_images": [
        {
          "digest": "sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "name": "timemachine-operator-9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee-annotation"
        },
        {
          "digest": "sha256:0c304c11986790f446604319dfc29db494b15f5f9fa13f2c436688ec29c92dbe",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:0c304c11986790f446604319dfc29db494b15f5f9fa13f2c436688ec29c92dbe",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "name": "manager"
        },
        {
          "digest": "sha256:9a2c3baf6d4a57c2beb79024e8800bee34745598d07a2cdac44666aafa3439c4",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/virtual-clock-testing-tool@sha256:9a2c3baf6d4a57c2beb79024e8800bee34745598d07a2cdac44666aafa3439c4",
          "name": "timemachine"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.0.4 <1.0.15",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.15",
      "version_original": "1.0.15"
    },
    {
      "_id": "633ac270a78cfb392933dbe6",
      "alm_examples": [
        {
          "api_version": "tm.solution-soft.com/v1alpha1",
          "kind": "TimeMachine",
          "metadata": {
            "name": "timemachine-sample"
          },
          "spec": {
            "aws": {
              "shared_volume_name": ""
            },
            "cluster_provider": "ibm",
            "ibm": {
              "persistentvolume": {
                "storageclass": "ibmc-file-silver-gid"
              }
            },
            "imagePullSecrets": [],
            "tm_lichost": "52.152.148.40",
            "tm_licpass": "qwaszx",
            "tm_licport": "57777"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator-bundle@sha256:adf4617a811dae43627f5a84e051f2b50aef7d728086a83e5d0cabfffe6f18a3",
      "bundle_path_digest": "sha256:adf4617a811dae43627f5a84e051f2b50aef7d728086a83e5d0cabfffe6f18a3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-03T11:07:28.624000+00:00",
      "csv_description": "Time Machine operator enables time travel of OpenShift pods/deployments.\n\nTo time travel a pod where your application is, you just need to install the Time Machine operator and create a Time Machine custom resource in the same namespace, without the need of changing the container images of the application you\u2019re using, or adding containers to the pod with your application.\n\nTime travelling is done on the namespace level where all the (configured) target pods/deployments see the same virtual time.",
      "csv_display_name": "Time Machine Operator",
      "csv_metadata_description": "Time Machine Operator enables time travel of OpenShift pods, without the need to change the system clock on any of the cluster nodes",
      "csv_name": "timemachine-operator.v1.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:51:27.671000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "timemachine-operator",
      "provided_apis": [
        {
          "group": "tm.solution-soft.com",
          "kind": "TimeMachine",
          "plural": "timemachines",
          "version": "v1alpha1"
        }
      ],
      "provider": "Solution-Soft",
      "related_images": [
        {
          "digest": "sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "name": "timemachine-operator-9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee-annotation"
        },
        {
          "digest": "sha256:0c304c11986790f446604319dfc29db494b15f5f9fa13f2c436688ec29c92dbe",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:0c304c11986790f446604319dfc29db494b15f5f9fa13f2c436688ec29c92dbe",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "name": "manager"
        },
        {
          "digest": "sha256:9a2c3baf6d4a57c2beb79024e8800bee34745598d07a2cdac44666aafa3439c4",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/virtual-clock-testing-tool@sha256:9a2c3baf6d4a57c2beb79024e8800bee34745598d07a2cdac44666aafa3439c4",
          "name": "timemachine"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.0.4 <1.0.15",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.15",
      "version_original": "1.0.15"
    },
    {
      "_id": "633ac29b98bae04fd1a6898d",
      "alm_examples": [
        {
          "api_version": "tm.solution-soft.com/v1alpha1",
          "kind": "TimeMachine",
          "metadata": {
            "name": "timemachine-sample"
          },
          "spec": {
            "aws": {
              "shared_volume_name": ""
            },
            "cluster_provider": "ibm",
            "ibm": {
              "persistentvolume": {
                "storageclass": "ibmc-file-silver-gid"
              }
            },
            "imagePullSecrets": [],
            "tm_lichost": "52.152.148.40",
            "tm_licpass": "qwaszx",
            "tm_licport": "57777"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator-bundle@sha256:adf4617a811dae43627f5a84e051f2b50aef7d728086a83e5d0cabfffe6f18a3",
      "bundle_path_digest": "sha256:adf4617a811dae43627f5a84e051f2b50aef7d728086a83e5d0cabfffe6f18a3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-03T11:08:11.108000+00:00",
      "csv_description": "Time Machine operator enables time travel of OpenShift pods/deployments.\n\nTo time travel a pod where your application is, you just need to install the Time Machine operator and create a Time Machine custom resource in the same namespace, without the need of changing the container images of the application you\u2019re using, or adding containers to the pod with your application.\n\nTime travelling is done on the namespace level where all the (configured) target pods/deployments see the same virtual time.",
      "csv_display_name": "Time Machine Operator",
      "csv_metadata_description": "Time Machine Operator enables time travel of OpenShift pods, without the need to change the system clock on any of the cluster nodes",
      "csv_name": "timemachine-operator.v1.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T12:02:01.384000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "timemachine-operator",
      "provided_apis": [
        {
          "group": "tm.solution-soft.com",
          "kind": "TimeMachine",
          "version": "v1alpha1"
        }
      ],
      "provider": "Solution-Soft",
      "related_images": [
        {
          "digest": "sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "name": "timemachine-operator-9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee-annotation"
        },
        {
          "digest": "sha256:0c304c11986790f446604319dfc29db494b15f5f9fa13f2c436688ec29c92dbe",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:0c304c11986790f446604319dfc29db494b15f5f9fa13f2c436688ec29c92dbe",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "name": "manager"
        },
        {
          "digest": "sha256:9a2c3baf6d4a57c2beb79024e8800bee34745598d07a2cdac44666aafa3439c4",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/virtual-clock-testing-tool@sha256:9a2c3baf6d4a57c2beb79024e8800bee34745598d07a2cdac44666aafa3439c4",
          "name": "timemachine"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.0.4 <1.0.15",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.15",
      "version_original": "1.0.15"
    },
    {
      "_id": "633ac2eb6db220f7ef9e395c",
      "alm_examples": [
        {
          "api_version": "tm.solution-soft.com/v1alpha1",
          "kind": "TimeMachine",
          "metadata": {
            "name": "timemachine-sample"
          },
          "spec": {
            "aws": {
              "shared_volume_name": ""
            },
            "cluster_provider": "ibm",
            "ibm": {
              "persistentvolume": {
                "storageclass": "ibmc-file-silver-gid"
              }
            },
            "imagePullSecrets": [],
            "tm_lichost": "52.152.148.40",
            "tm_licpass": "qwaszx",
            "tm_licport": "57777"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator-bundle@sha256:adf4617a811dae43627f5a84e051f2b50aef7d728086a83e5d0cabfffe6f18a3",
      "bundle_path_digest": "sha256:adf4617a811dae43627f5a84e051f2b50aef7d728086a83e5d0cabfffe6f18a3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-03T11:09:31.719000+00:00",
      "csv_description": "Time Machine operator enables time travel of OpenShift pods/deployments.\n\nTo time travel a pod where your application is, you just need to install the Time Machine operator and create a Time Machine custom resource in the same namespace, without the need of changing the container images of the application you\u2019re using, or adding containers to the pod with your application.\n\nTime travelling is done on the namespace level where all the (configured) target pods/deployments see the same virtual time.",
      "csv_display_name": "Time Machine Operator",
      "csv_metadata_description": "Time Machine Operator enables time travel of OpenShift pods, without the need to change the system clock on any of the cluster nodes",
      "csv_name": "timemachine-operator.v1.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:45:57.739000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "timemachine-operator",
      "provided_apis": [
        {
          "group": "tm.solution-soft.com",
          "kind": "TimeMachine",
          "plural": "timemachines",
          "version": "v1alpha1"
        }
      ],
      "provider": "Solution-Soft",
      "related_images": [
        {
          "digest": "sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "name": "timemachine-operator-9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee-annotation"
        },
        {
          "digest": "sha256:0c304c11986790f446604319dfc29db494b15f5f9fa13f2c436688ec29c92dbe",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:0c304c11986790f446604319dfc29db494b15f5f9fa13f2c436688ec29c92dbe",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:9a81cb77dde3b1fa67ca57aad7a0ab151640defc7f7c4a3dcdde5777088817ee",
          "name": "manager"
        },
        {
          "digest": "sha256:9a2c3baf6d4a57c2beb79024e8800bee34745598d07a2cdac44666aafa3439c4",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/virtual-clock-testing-tool@sha256:9a2c3baf6d4a57c2beb79024e8800bee34745598d07a2cdac44666aafa3439c4",
          "name": "timemachine"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.0.4 <1.0.15",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.15",
      "version_original": "1.0.15"
    },
    {
      "_id": "633ad32f6db220f7ef9e3a43",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.2"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:fed828a9544793187195c6b940fb783c2c36285ca00a018ab1815ee2cdfed674",
      "bundle_path_digest": "sha256:fed828a9544793187195c6b940fb783c2c36285ca00a018ab1815ee2cdfed674",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.2",
      "creation_date": "2022-10-03T12:18:55.567000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This maps to the Aqua version 6.5.0\n* 2022.4: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.2.22256",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T10:58:18.318000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "name": "aquasec-cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d-annotation"
        },
        {
          "digest": "sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:480ea992af79a5188199adef4c355893c6501a9d697060af2f1a4c7057bec2b0",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:480ea992af79a5188199adef4c355893c6501a9d697060af2f1a4c7057bec2b0",
          "name": "gateway"
        },
        {
          "digest": "sha256:397c718bdd02c3b1d5d5ea41c90d34d219b97fc91f8d511ab8f02e0e227c423f",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:397c718bdd02c3b1d5d5ea41c90d34d219b97fc91f8d511ab8f02e0e227c423f",
          "name": "server"
        },
        {
          "digest": "sha256:cd6cdf0a35671356550280b8497d915f8699daab05667c2f52af482a9aed8e65",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:cd6cdf0a35671356550280b8497d915f8699daab05667c2f52af482a9aed8e65",
          "name": "scanner"
        },
        {
          "digest": "sha256:c54442c846a5a23201fcc1ee9481730cce474f6aebc4e415adca36ff04e87c0e",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:c54442c846a5a23201fcc1ee9481730cce474f6aebc4e415adca36ff04e87c0e",
          "name": "enforcer"
        },
        {
          "digest": "sha256:fa1b762ead08ef405a2df7b54ec0e09c10e5d6bf1b33e439cfb356c9fb869c17",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:fa1b762ead08ef405a2df7b54ec0e09c10e5d6bf1b33e439cfb356c9fb869c17",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.2.22256",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "6.2.22256",
      "version_original": "6.2.22256"
    },
    {
      "_id": "633ad3fca8b2c03307329a55",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.2"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:fed828a9544793187195c6b940fb783c2c36285ca00a018ab1815ee2cdfed674",
      "bundle_path_digest": "sha256:fed828a9544793187195c6b940fb783c2c36285ca00a018ab1815ee2cdfed674",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.2",
      "creation_date": "2022-10-03T12:22:20.518000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This maps to the Aqua version 6.5.0\n* 2022.4: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.2.22256",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T10:55:00.846000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "name": "aquasec-cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d-annotation"
        },
        {
          "digest": "sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:480ea992af79a5188199adef4c355893c6501a9d697060af2f1a4c7057bec2b0",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:480ea992af79a5188199adef4c355893c6501a9d697060af2f1a4c7057bec2b0",
          "name": "gateway"
        },
        {
          "digest": "sha256:397c718bdd02c3b1d5d5ea41c90d34d219b97fc91f8d511ab8f02e0e227c423f",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:397c718bdd02c3b1d5d5ea41c90d34d219b97fc91f8d511ab8f02e0e227c423f",
          "name": "server"
        },
        {
          "digest": "sha256:cd6cdf0a35671356550280b8497d915f8699daab05667c2f52af482a9aed8e65",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:cd6cdf0a35671356550280b8497d915f8699daab05667c2f52af482a9aed8e65",
          "name": "scanner"
        },
        {
          "digest": "sha256:c54442c846a5a23201fcc1ee9481730cce474f6aebc4e415adca36ff04e87c0e",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:c54442c846a5a23201fcc1ee9481730cce474f6aebc4e415adca36ff04e87c0e",
          "name": "enforcer"
        },
        {
          "digest": "sha256:fa1b762ead08ef405a2df7b54ec0e09c10e5d6bf1b33e439cfb356c9fb869c17",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:fa1b762ead08ef405a2df7b54ec0e09c10e5d6bf1b33e439cfb356c9fb869c17",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.2.22256",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.22256",
      "version_original": "6.2.22256"
    },
    {
      "_id": "633ad584803ffa16ce0524c9",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.2"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:fed828a9544793187195c6b940fb783c2c36285ca00a018ab1815ee2cdfed674",
      "bundle_path_digest": "sha256:fed828a9544793187195c6b940fb783c2c36285ca00a018ab1815ee2cdfed674",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.2",
      "creation_date": "2022-10-03T12:28:52.558000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This maps to the Aqua version 6.5.0\n* 2022.4: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.2.22256",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T10:47:38.452000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "name": "aquasec-cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d-annotation"
        },
        {
          "digest": "sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:480ea992af79a5188199adef4c355893c6501a9d697060af2f1a4c7057bec2b0",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:480ea992af79a5188199adef4c355893c6501a9d697060af2f1a4c7057bec2b0",
          "name": "gateway"
        },
        {
          "digest": "sha256:397c718bdd02c3b1d5d5ea41c90d34d219b97fc91f8d511ab8f02e0e227c423f",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:397c718bdd02c3b1d5d5ea41c90d34d219b97fc91f8d511ab8f02e0e227c423f",
          "name": "server"
        },
        {
          "digest": "sha256:cd6cdf0a35671356550280b8497d915f8699daab05667c2f52af482a9aed8e65",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:cd6cdf0a35671356550280b8497d915f8699daab05667c2f52af482a9aed8e65",
          "name": "scanner"
        },
        {
          "digest": "sha256:c54442c846a5a23201fcc1ee9481730cce474f6aebc4e415adca36ff04e87c0e",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:c54442c846a5a23201fcc1ee9481730cce474f6aebc4e415adca36ff04e87c0e",
          "name": "enforcer"
        },
        {
          "digest": "sha256:fa1b762ead08ef405a2df7b54ec0e09c10e5d6bf1b33e439cfb356c9fb869c17",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:fa1b762ead08ef405a2df7b54ec0e09c10e5d6bf1b33e439cfb356c9fb869c17",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.2.22256",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.22256",
      "version_original": "6.2.22256"
    },
    {
      "_id": "633ad649a8b2c03307329a6e",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.2"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:fed828a9544793187195c6b940fb783c2c36285ca00a018ab1815ee2cdfed674",
      "bundle_path_digest": "sha256:fed828a9544793187195c6b940fb783c2c36285ca00a018ab1815ee2cdfed674",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.2",
      "creation_date": "2022-10-03T12:32:09.765000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This maps to the Aqua version 6.5.0\n* 2022.4: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.2.22256",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T10:55:15.323000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "name": "aquasec-cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d-annotation"
        },
        {
          "digest": "sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:480ea992af79a5188199adef4c355893c6501a9d697060af2f1a4c7057bec2b0",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:480ea992af79a5188199adef4c355893c6501a9d697060af2f1a4c7057bec2b0",
          "name": "gateway"
        },
        {
          "digest": "sha256:397c718bdd02c3b1d5d5ea41c90d34d219b97fc91f8d511ab8f02e0e227c423f",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:397c718bdd02c3b1d5d5ea41c90d34d219b97fc91f8d511ab8f02e0e227c423f",
          "name": "server"
        },
        {
          "digest": "sha256:cd6cdf0a35671356550280b8497d915f8699daab05667c2f52af482a9aed8e65",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:cd6cdf0a35671356550280b8497d915f8699daab05667c2f52af482a9aed8e65",
          "name": "scanner"
        },
        {
          "digest": "sha256:c54442c846a5a23201fcc1ee9481730cce474f6aebc4e415adca36ff04e87c0e",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:c54442c846a5a23201fcc1ee9481730cce474f6aebc4e415adca36ff04e87c0e",
          "name": "enforcer"
        },
        {
          "digest": "sha256:fa1b762ead08ef405a2df7b54ec0e09c10e5d6bf1b33e439cfb356c9fb869c17",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:fa1b762ead08ef405a2df7b54ec0e09c10e5d6bf1b33e439cfb356c9fb869c17",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.2.22256",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.2.22256",
      "version_original": "6.2.22256"
    },
    {
      "_id": "633ad73f85d09bb86218791d",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.2"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:fed828a9544793187195c6b940fb783c2c36285ca00a018ab1815ee2cdfed674",
      "bundle_path_digest": "sha256:fed828a9544793187195c6b940fb783c2c36285ca00a018ab1815ee2cdfed674",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.2",
      "creation_date": "2022-10-03T12:36:15.498000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This maps to the Aqua version 6.5.0\n* 2022.4: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.2.22256",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:45:26.116000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "name": "aquasec-cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d-annotation"
        },
        {
          "digest": "sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:cb224346588a254b779c2a005665485f011fed75a8649f92af1ca70146dd099d",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:480ea992af79a5188199adef4c355893c6501a9d697060af2f1a4c7057bec2b0",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:480ea992af79a5188199adef4c355893c6501a9d697060af2f1a4c7057bec2b0",
          "name": "gateway"
        },
        {
          "digest": "sha256:397c718bdd02c3b1d5d5ea41c90d34d219b97fc91f8d511ab8f02e0e227c423f",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:397c718bdd02c3b1d5d5ea41c90d34d219b97fc91f8d511ab8f02e0e227c423f",
          "name": "server"
        },
        {
          "digest": "sha256:cd6cdf0a35671356550280b8497d915f8699daab05667c2f52af482a9aed8e65",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:cd6cdf0a35671356550280b8497d915f8699daab05667c2f52af482a9aed8e65",
          "name": "scanner"
        },
        {
          "digest": "sha256:c54442c846a5a23201fcc1ee9481730cce474f6aebc4e415adca36ff04e87c0e",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:c54442c846a5a23201fcc1ee9481730cce474f6aebc4e415adca36ff04e87c0e",
          "name": "enforcer"
        },
        {
          "digest": "sha256:fa1b762ead08ef405a2df7b54ec0e09c10e5d6bf1b33e439cfb356c9fb869c17",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:fa1b762ead08ef405a2df7b54ec0e09c10e5d6bf1b33e439cfb356c9fb869c17",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.2.22256",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.22256",
      "version_original": "6.2.22256"
    },
    {
      "_id": "633b9f7ca8b2c0330732ab6f",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {},
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "use_ocp_driver_toolkit": true,
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {}
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:4d1268054559b7678028a7a66e36567c55417b729101ef131dec8d989cbef1d3",
      "bundle_path_digest": "sha256:4d1268054559b7678028a7a66e36567c55417b729101ef131dec8d989cbef1d3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v22.9",
      "creation_date": "2022-10-04T02:50:36.188000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:05:36.420000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:d46393d6bd5be020c78e1d45669d2bb3ac8681df13369ddbbbf90740e354c0cf",
          "image": "nvcr.io/nvidia/driver@sha256:d46393d6bd5be020c78e1d45669d2bb3ac8681df13369ddbbbf90740e354c0cf",
          "name": "driver-image"
        },
        {
          "digest": "sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:c7609c27c68ae6520ff21862665d10e1dd0dc99fe0615968310478632187341b",
          "image": "docker.io/nvidia/cuda@sha256:c7609c27c68ae6520ff21862665d10e1dd0dc99fe0615968310478632187341b",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:6819f4c9136e82e44ec34b03ba71c72cbbeebe1db49c596a8bc245fea3bee596",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6819f4c9136e82e44ec34b03ba71c72cbbeebe1db49c596a8bc245fea3bee596",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be",
          "name": "gpu-operator-e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be-annotation"
        },
        {
          "digest": "sha256:e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "633b9f80fa5da29a9750fc60",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {},
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "use_ocp_driver_toolkit": true,
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {}
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:60b1d25ebb3aada94985e359bb059d4491bf0148ac75d51b68a461670659e429",
      "bundle_path_digest": "sha256:60b1d25ebb3aada94985e359bb059d4491bf0148ac75d51b68a461670659e429",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v22.9",
      "creation_date": "2022-10-04T02:50:40.040000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.10.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:05:56.812000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:f99b66855e92451a59a722355dd52bf97eb985cc8a647172273de8178aeaa93c",
          "image": "nvcr.io/nvidia/driver@sha256:f99b66855e92451a59a722355dd52bf97eb985cc8a647172273de8178aeaa93c",
          "name": "driver-image"
        },
        {
          "digest": "sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:7f0f7dc8c993a86865d4d9f9b0e36d113ea15603d5d5279d2879fa2bc21c8236",
          "image": "nvcr.io/nvidia/cuda@sha256:7f0f7dc8c993a86865d4d9f9b0e36d113ea15603d5d5279d2879fa2bc21c8236",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:24d804e8f005d7aeca8343aa13e5f92295d8642a4c47cb24e3ac86a22543bc37",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:24d804e8f005d7aeca8343aa13e5f92295d8642a4c47cb24e3ac86a22543bc37",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator-c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a-annotation"
        },
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v1.10.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.10.1",
      "version_original": "1.10.1"
    },
    {
      "_id": "633b9f8485d09bb862188a7d",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {
              "config": {
                "default": "",
                "name": ""
              }
            },
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "initContainer": {},
              "use_ocp_driver_toolkit": true
            },
            "sandboxDevicePlugin": {
              "enabled": true
            },
            "sandboxWorkloads": {
              "defaultWorkload": "container",
              "enabled": false
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            },
            "vfioManager": {
              "enabled": true
            },
            "vgpuDeviceManager": {
              "config": {
                "default": "default",
                "name": "vgpu-devices-config"
              },
              "enabled": true
            },
            "vgpuManager": {
              "enabled": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64"
      ],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:501dd759f32adb585848f511f6dfa7bc9372d5e905abea9b082dd50cbe232216",
      "bundle_path_digest": "sha256:501dd759f32adb585848f511f6dfa7bc9372d5e905abea9b082dd50cbe232216",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v22.9",
      "creation_date": "2022-10-04T02:50:44.280000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://cloud.redhat.com/blog/introducing-the-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.11.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:06:13.858000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "image": "nvcr.io/nvidia/driver@sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "name": "driver-image"
        },
        {
          "digest": "sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "image": "nvcr.io/nvidia/driver@sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "name": "driver-image-510"
        },
        {
          "digest": "sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "image": "nvcr.io/nvidia/driver@sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "name": "driver-image-470"
        },
        {
          "digest": "sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "image": "nvcr.io/nvidia/driver@sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "name": "driver-image-450"
        },
        {
          "digest": "sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:d83aee1c7a9c3aa39e3947f0bd206e7955390943b8e3f2e56bdb96bc4ef99d69",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:d83aee1c7a9c3aa39e3947f0bd206e7955390943b8e3f2e56bdb96bc4ef99d69",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:2cb6f2b43e153e67780b1b350ae171c800e15b3f1ae5ad6375b66de530d701fd",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:2cb6f2b43e153e67780b1b350ae171c800e15b3f1ae5ad6375b66de530d701fd",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "vfio-manager-image"
        },
        {
          "digest": "sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "image": "nvcr.io/nvidia/kubevirt-gpu-device-plugin@sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "name": "sandbox-device-plugin-image"
        },
        {
          "digest": "sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "image": "nvcr.io/nvidia/cloud-native/vgpu-device-manager@sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "name": "vgpu-device-manager-image"
        },
        {
          "digest": "sha256:7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5",
          "name": "gpu-operator-7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5-annotation"
        },
        {
          "digest": "sha256:7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v1.11.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.11.0",
      "version_original": "1.11.0"
    },
    {
      "_id": "633b9f8898bae04fd1a69bdd",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {
              "config": {
                "default": "",
                "name": ""
              }
            },
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "rollingUpdate": {
                "maxUnavailable": "1"
              },
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "initContainer": {},
              "use_ocp_driver_toolkit": true
            },
            "sandboxDevicePlugin": {
              "enabled": true
            },
            "sandboxWorkloads": {
              "defaultWorkload": "container",
              "enabled": false
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            },
            "vfioManager": {
              "enabled": true
            },
            "vgpuDeviceManager": {
              "config": {
                "default": "default",
                "name": "vgpu-devices-config"
              },
              "enabled": true
            },
            "vgpuManager": {
              "enabled": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64"
      ],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:3128cd81b56975643c1c88c6ceff6d72e918a67ec2d6a5a606b6e04753c5b0ce",
      "bundle_path_digest": "sha256:3128cd81b56975643c1c88c6ceff6d72e918a67ec2d6a5a606b6e04753c5b0ce",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v22.9",
      "creation_date": "2022-10-04T02:50:48.116000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://cloud.redhat.com/blog/introducing-the-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.11.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:06:29.477000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "image": "nvcr.io/nvidia/driver@sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "name": "driver-image"
        },
        {
          "digest": "sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "image": "nvcr.io/nvidia/driver@sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "name": "driver-image-510"
        },
        {
          "digest": "sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "image": "nvcr.io/nvidia/driver@sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "name": "driver-image-470"
        },
        {
          "digest": "sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "image": "nvcr.io/nvidia/driver@sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "name": "driver-image-450"
        },
        {
          "digest": "sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:10d825ccbfcf87f8c74f841fa89ae345f2d381fb47a5b2b31f61b72ebbbb0915",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:10d825ccbfcf87f8c74f841fa89ae345f2d381fb47a5b2b31f61b72ebbbb0915",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:e88e610d09f1a7528ab32cb54259aee340eba2b2bf66b92a28157626daadc82d",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:e88e610d09f1a7528ab32cb54259aee340eba2b2bf66b92a28157626daadc82d",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "vfio-manager-image"
        },
        {
          "digest": "sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "image": "nvcr.io/nvidia/kubevirt-gpu-device-plugin@sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "name": "sandbox-device-plugin-image"
        },
        {
          "digest": "sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "image": "nvcr.io/nvidia/cloud-native/vgpu-device-manager@sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "name": "vgpu-device-manager-image"
        },
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator-53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d-annotation"
        },
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v1.11.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.11.1",
      "version_original": "1.11.1"
    },
    {
      "_id": "633b9f8bfa5da29a9750fc63",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              },
              "enabled": true,
              "serviceMonitor": {
                "enabled": true
              }
            },
            "devicePlugin": {
              "config": {
                "default": "",
                "name": ""
              },
              "enabled": true
            },
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "rollingUpdate": {
                "maxUnavailable": "1"
              },
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {
              "enabled": true
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "initContainer": {},
              "use_ocp_driver_toolkit": true
            },
            "sandboxDevicePlugin": {
              "enabled": true
            },
            "sandboxWorkloads": {
              "defaultWorkload": "container",
              "enabled": false
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            },
            "vfioManager": {
              "enabled": true
            },
            "vgpuDeviceManager": {
              "enabled": true
            },
            "vgpuManager": {
              "enabled": false
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64"
      ],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:8d879d1275b548fc69b2d7511433e6a7882ef186052c12f6cd11bd9b2a3164e3",
      "bundle_path_digest": "sha256:8d879d1275b548fc69b2d7511433e6a7882ef186052c12f6cd11bd9b2a3164e3",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-04T02:50:51.863000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://cloud.redhat.com/blog/introducing-the-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v22.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:07:10.006000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:4f991f2be8ec9f590ed53d15bcc5d9cf105298b1eca2d69b8449f8972e6a3faf",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:4f991f2be8ec9f590ed53d15bcc5d9cf105298b1eca2d69b8449f8972e6a3faf",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:150c446598d4ab03db0fd2301b1922aabdf3e0159571c71abe4489075639b2e7",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:150c446598d4ab03db0fd2301b1922aabdf3e0159571c71abe4489075639b2e7",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:efb88937f73434994d1bbadc87b492a1df047aa9f8d6e9f5ec3b09536e6e7691",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:efb88937f73434994d1bbadc87b492a1df047aa9f8d6e9f5ec3b09536e6e7691",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:4d1bf34d0ee9a3f5fa3fa124ab89ef13ae38dea12c92a9c8bd79b4180a205b56",
          "image": "nvcr.io/nvidia/driver@sha256:4d1bf34d0ee9a3f5fa3fa124ab89ef13ae38dea12c92a9c8bd79b4180a205b56",
          "name": "driver-image"
        },
        {
          "digest": "sha256:9be9edb8109dc4f7f3023197aea648e67c4d07649fc5ab7e9cc8b26ee3b7d3e2",
          "image": "nvcr.io/nvidia/driver@sha256:9be9edb8109dc4f7f3023197aea648e67c4d07649fc5ab7e9cc8b26ee3b7d3e2",
          "name": "driver-image-510"
        },
        {
          "digest": "sha256:c6d6697bd9281fe5b5666ba44d0855c9e9c2f2226be65a6bababe08db1fc4cd5",
          "image": "nvcr.io/nvidia/driver@sha256:c6d6697bd9281fe5b5666ba44d0855c9e9c2f2226be65a6bababe08db1fc4cd5",
          "name": "driver-image-470"
        },
        {
          "digest": "sha256:dd8155a49340aaea95fd85639576e76196d0170fc023dc7782b35f7c313275b5",
          "image": "nvcr.io/nvidia/driver@sha256:dd8155a49340aaea95fd85639576e76196d0170fc023dc7782b35f7c313275b5",
          "name": "driver-image-450"
        },
        {
          "digest": "sha256:d1c61116647bb9388eb3c4e31848dd6038458b7ba33c0eb3b659d96739eceb73",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:d1c61116647bb9388eb3c4e31848dd6038458b7ba33c0eb3b659d96739eceb73",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:37821ea7829def707f819ac21122cea62efdbbd640679b6004e552fb9a1e17a3",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:37821ea7829def707f819ac21122cea62efdbbd640679b6004e552fb9a1e17a3",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:50c2a2b998e467c82716efa79fe136aa6f7ea95fd23576cf384d251bb9628640",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:50c2a2b998e467c82716efa79fe136aa6f7ea95fd23576cf384d251bb9628640",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "image": "nvcr.io/nvidia/cuda@sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:e3f16c26b9340ed46aed248cc4d18353ba3a65886bf7a2f0cea25ff41b2553da",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:e3f16c26b9340ed46aed248cc4d18353ba3a65886bf7a2f0cea25ff41b2553da",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "image": "nvcr.io/nvidia/cuda@sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "name": "vfio-manager-image"
        },
        {
          "digest": "sha256:0d47dad29d2ef445b301c5c64717758eed43a606345b79f97bce2e64b40a91a8",
          "image": "nvcr.io/nvidia/kubevirt-gpu-device-plugin@sha256:0d47dad29d2ef445b301c5c64717758eed43a606345b79f97bce2e64b40a91a8",
          "name": "sandbox-device-plugin-image"
        },
        {
          "digest": "sha256:64d757b4c80b910e64647a84a1d592fab2ea3313ff6dce30c25c3a08e180bd74",
          "image": "nvcr.io/nvidia/cloud-native/vgpu-device-manager@sha256:64d757b4c80b910e64647a84a1d592fab2ea3313ff6dce30c25c3a08e180bd74",
          "name": "vgpu-device-manager-image"
        },
        {
          "digest": "sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "name": "gpu-operator-6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db-annotation"
        },
        {
          "digest": "sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v22.9.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "22.9.0",
      "version_original": "22.9.0"
    },
    {
      "_id": "633b9f8ea78cfb392933ee02",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {},
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "use_ocp_driver_toolkit": true,
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {}
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:4d1268054559b7678028a7a66e36567c55417b729101ef131dec8d989cbef1d3",
      "bundle_path_digest": "sha256:4d1268054559b7678028a7a66e36567c55417b729101ef131dec8d989cbef1d3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v22.9",
      "creation_date": "2022-10-04T02:50:54.733000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:40:31.843000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:d46393d6bd5be020c78e1d45669d2bb3ac8681df13369ddbbbf90740e354c0cf",
          "image": "nvcr.io/nvidia/driver@sha256:d46393d6bd5be020c78e1d45669d2bb3ac8681df13369ddbbbf90740e354c0cf",
          "name": "driver-image"
        },
        {
          "digest": "sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:c7609c27c68ae6520ff21862665d10e1dd0dc99fe0615968310478632187341b",
          "image": "docker.io/nvidia/cuda@sha256:c7609c27c68ae6520ff21862665d10e1dd0dc99fe0615968310478632187341b",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:6819f4c9136e82e44ec34b03ba71c72cbbeebe1db49c596a8bc245fea3bee596",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6819f4c9136e82e44ec34b03ba71c72cbbeebe1db49c596a8bc245fea3bee596",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be",
          "name": "gpu-operator-e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be-annotation"
        },
        {
          "digest": "sha256:e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "633b9f8f803ffa16ce0535ed",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              },
              "enabled": true,
              "serviceMonitor": {
                "enabled": true
              }
            },
            "devicePlugin": {
              "config": {
                "default": "",
                "name": ""
              },
              "enabled": true
            },
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "rollingUpdate": {
                "maxUnavailable": "1"
              },
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {
              "enabled": true
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "initContainer": {},
              "use_ocp_driver_toolkit": true
            },
            "sandboxDevicePlugin": {
              "enabled": true
            },
            "sandboxWorkloads": {
              "defaultWorkload": "container",
              "enabled": false
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            },
            "vfioManager": {
              "enabled": true
            },
            "vgpuDeviceManager": {
              "enabled": true
            },
            "vgpuManager": {
              "enabled": false
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64"
      ],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:8d879d1275b548fc69b2d7511433e6a7882ef186052c12f6cd11bd9b2a3164e3",
      "bundle_path_digest": "sha256:8d879d1275b548fc69b2d7511433e6a7882ef186052c12f6cd11bd9b2a3164e3",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "v22.9",
      "creation_date": "2022-10-04T02:50:55.440000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://cloud.redhat.com/blog/introducing-the-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v22.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:07:15.127000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:4f991f2be8ec9f590ed53d15bcc5d9cf105298b1eca2d69b8449f8972e6a3faf",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:4f991f2be8ec9f590ed53d15bcc5d9cf105298b1eca2d69b8449f8972e6a3faf",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:150c446598d4ab03db0fd2301b1922aabdf3e0159571c71abe4489075639b2e7",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:150c446598d4ab03db0fd2301b1922aabdf3e0159571c71abe4489075639b2e7",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:efb88937f73434994d1bbadc87b492a1df047aa9f8d6e9f5ec3b09536e6e7691",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:efb88937f73434994d1bbadc87b492a1df047aa9f8d6e9f5ec3b09536e6e7691",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:4d1bf34d0ee9a3f5fa3fa124ab89ef13ae38dea12c92a9c8bd79b4180a205b56",
          "image": "nvcr.io/nvidia/driver@sha256:4d1bf34d0ee9a3f5fa3fa124ab89ef13ae38dea12c92a9c8bd79b4180a205b56",
          "name": "driver-image"
        },
        {
          "digest": "sha256:9be9edb8109dc4f7f3023197aea648e67c4d07649fc5ab7e9cc8b26ee3b7d3e2",
          "image": "nvcr.io/nvidia/driver@sha256:9be9edb8109dc4f7f3023197aea648e67c4d07649fc5ab7e9cc8b26ee3b7d3e2",
          "name": "driver-image-510"
        },
        {
          "digest": "sha256:c6d6697bd9281fe5b5666ba44d0855c9e9c2f2226be65a6bababe08db1fc4cd5",
          "image": "nvcr.io/nvidia/driver@sha256:c6d6697bd9281fe5b5666ba44d0855c9e9c2f2226be65a6bababe08db1fc4cd5",
          "name": "driver-image-470"
        },
        {
          "digest": "sha256:dd8155a49340aaea95fd85639576e76196d0170fc023dc7782b35f7c313275b5",
          "image": "nvcr.io/nvidia/driver@sha256:dd8155a49340aaea95fd85639576e76196d0170fc023dc7782b35f7c313275b5",
          "name": "driver-image-450"
        },
        {
          "digest": "sha256:d1c61116647bb9388eb3c4e31848dd6038458b7ba33c0eb3b659d96739eceb73",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:d1c61116647bb9388eb3c4e31848dd6038458b7ba33c0eb3b659d96739eceb73",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:37821ea7829def707f819ac21122cea62efdbbd640679b6004e552fb9a1e17a3",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:37821ea7829def707f819ac21122cea62efdbbd640679b6004e552fb9a1e17a3",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:50c2a2b998e467c82716efa79fe136aa6f7ea95fd23576cf384d251bb9628640",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:50c2a2b998e467c82716efa79fe136aa6f7ea95fd23576cf384d251bb9628640",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "image": "nvcr.io/nvidia/cuda@sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:e3f16c26b9340ed46aed248cc4d18353ba3a65886bf7a2f0cea25ff41b2553da",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:e3f16c26b9340ed46aed248cc4d18353ba3a65886bf7a2f0cea25ff41b2553da",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "image": "nvcr.io/nvidia/cuda@sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "name": "vfio-manager-image"
        },
        {
          "digest": "sha256:0d47dad29d2ef445b301c5c64717758eed43a606345b79f97bce2e64b40a91a8",
          "image": "nvcr.io/nvidia/kubevirt-gpu-device-plugin@sha256:0d47dad29d2ef445b301c5c64717758eed43a606345b79f97bce2e64b40a91a8",
          "name": "sandbox-device-plugin-image"
        },
        {
          "digest": "sha256:64d757b4c80b910e64647a84a1d592fab2ea3313ff6dce30c25c3a08e180bd74",
          "image": "nvcr.io/nvidia/cloud-native/vgpu-device-manager@sha256:64d757b4c80b910e64647a84a1d592fab2ea3313ff6dce30c25c3a08e180bd74",
          "name": "vgpu-device-manager-image"
        },
        {
          "digest": "sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "name": "gpu-operator-6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db-annotation"
        },
        {
          "digest": "sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v22.9.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "22.9.0",
      "version_original": "22.9.0"
    },
    {
      "_id": "633b9f92e2a358554c1930cf",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {},
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "use_ocp_driver_toolkit": true,
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {}
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:60b1d25ebb3aada94985e359bb059d4491bf0148ac75d51b68a461670659e429",
      "bundle_path_digest": "sha256:60b1d25ebb3aada94985e359bb059d4491bf0148ac75d51b68a461670659e429",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v22.9",
      "creation_date": "2022-10-04T02:50:58.119000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.10.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:40:38.202000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:f99b66855e92451a59a722355dd52bf97eb985cc8a647172273de8178aeaa93c",
          "image": "nvcr.io/nvidia/driver@sha256:f99b66855e92451a59a722355dd52bf97eb985cc8a647172273de8178aeaa93c",
          "name": "driver-image"
        },
        {
          "digest": "sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:7f0f7dc8c993a86865d4d9f9b0e36d113ea15603d5d5279d2879fa2bc21c8236",
          "image": "nvcr.io/nvidia/cuda@sha256:7f0f7dc8c993a86865d4d9f9b0e36d113ea15603d5d5279d2879fa2bc21c8236",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:24d804e8f005d7aeca8343aa13e5f92295d8642a4c47cb24e3ac86a22543bc37",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:24d804e8f005d7aeca8343aa13e5f92295d8642a4c47cb24e3ac86a22543bc37",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator-c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a-annotation"
        },
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v1.10.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.10.1",
      "version_original": "1.10.1"
    },
    {
      "_id": "633b9f959fd3c31befe8a5e6",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {
              "config": {
                "default": "",
                "name": ""
              }
            },
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "initContainer": {},
              "use_ocp_driver_toolkit": true
            },
            "sandboxDevicePlugin": {
              "enabled": true
            },
            "sandboxWorkloads": {
              "defaultWorkload": "container",
              "enabled": false
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            },
            "vfioManager": {
              "enabled": true
            },
            "vgpuDeviceManager": {
              "config": {
                "default": "default",
                "name": "vgpu-devices-config"
              },
              "enabled": true
            },
            "vgpuManager": {
              "enabled": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64"
      ],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:501dd759f32adb585848f511f6dfa7bc9372d5e905abea9b082dd50cbe232216",
      "bundle_path_digest": "sha256:501dd759f32adb585848f511f6dfa7bc9372d5e905abea9b082dd50cbe232216",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v22.9",
      "creation_date": "2022-10-04T02:51:01.558000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://cloud.redhat.com/blog/introducing-the-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.11.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:40:45.334000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "image": "nvcr.io/nvidia/driver@sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "name": "driver-image"
        },
        {
          "digest": "sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "image": "nvcr.io/nvidia/driver@sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "name": "driver-image-510"
        },
        {
          "digest": "sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "image": "nvcr.io/nvidia/driver@sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "name": "driver-image-470"
        },
        {
          "digest": "sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "image": "nvcr.io/nvidia/driver@sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "name": "driver-image-450"
        },
        {
          "digest": "sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:d83aee1c7a9c3aa39e3947f0bd206e7955390943b8e3f2e56bdb96bc4ef99d69",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:d83aee1c7a9c3aa39e3947f0bd206e7955390943b8e3f2e56bdb96bc4ef99d69",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:2cb6f2b43e153e67780b1b350ae171c800e15b3f1ae5ad6375b66de530d701fd",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:2cb6f2b43e153e67780b1b350ae171c800e15b3f1ae5ad6375b66de530d701fd",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "vfio-manager-image"
        },
        {
          "digest": "sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "image": "nvcr.io/nvidia/kubevirt-gpu-device-plugin@sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "name": "sandbox-device-plugin-image"
        },
        {
          "digest": "sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "image": "nvcr.io/nvidia/cloud-native/vgpu-device-manager@sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "name": "vgpu-device-manager-image"
        },
        {
          "digest": "sha256:7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5",
          "name": "gpu-operator-7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5-annotation"
        },
        {
          "digest": "sha256:7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v1.11.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.11.0",
      "version_original": "1.11.0"
    },
    {
      "_id": "633b9f98a8b2c0330732ab73",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {
              "config": {
                "default": "",
                "name": ""
              }
            },
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "rollingUpdate": {
                "maxUnavailable": "1"
              },
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "initContainer": {},
              "use_ocp_driver_toolkit": true
            },
            "sandboxDevicePlugin": {
              "enabled": true
            },
            "sandboxWorkloads": {
              "defaultWorkload": "container",
              "enabled": false
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            },
            "vfioManager": {
              "enabled": true
            },
            "vgpuDeviceManager": {
              "config": {
                "default": "default",
                "name": "vgpu-devices-config"
              },
              "enabled": true
            },
            "vgpuManager": {
              "enabled": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64"
      ],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:3128cd81b56975643c1c88c6ceff6d72e918a67ec2d6a5a606b6e04753c5b0ce",
      "bundle_path_digest": "sha256:3128cd81b56975643c1c88c6ceff6d72e918a67ec2d6a5a606b6e04753c5b0ce",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v22.9",
      "creation_date": "2022-10-04T02:51:04.887000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://cloud.redhat.com/blog/introducing-the-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.11.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:40:11.998000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "image": "nvcr.io/nvidia/driver@sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "name": "driver-image"
        },
        {
          "digest": "sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "image": "nvcr.io/nvidia/driver@sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "name": "driver-image-510"
        },
        {
          "digest": "sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "image": "nvcr.io/nvidia/driver@sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "name": "driver-image-470"
        },
        {
          "digest": "sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "image": "nvcr.io/nvidia/driver@sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "name": "driver-image-450"
        },
        {
          "digest": "sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:10d825ccbfcf87f8c74f841fa89ae345f2d381fb47a5b2b31f61b72ebbbb0915",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:10d825ccbfcf87f8c74f841fa89ae345f2d381fb47a5b2b31f61b72ebbbb0915",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:e88e610d09f1a7528ab32cb54259aee340eba2b2bf66b92a28157626daadc82d",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:e88e610d09f1a7528ab32cb54259aee340eba2b2bf66b92a28157626daadc82d",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "vfio-manager-image"
        },
        {
          "digest": "sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "image": "nvcr.io/nvidia/kubevirt-gpu-device-plugin@sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "name": "sandbox-device-plugin-image"
        },
        {
          "digest": "sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "image": "nvcr.io/nvidia/cloud-native/vgpu-device-manager@sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "name": "vgpu-device-manager-image"
        },
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator-53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d-annotation"
        },
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v1.11.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.11.1",
      "version_original": "1.11.1"
    },
    {
      "_id": "633b9f9c98bae04fd1a69be1",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              },
              "enabled": true,
              "serviceMonitor": {
                "enabled": true
              }
            },
            "devicePlugin": {
              "config": {
                "default": "",
                "name": ""
              },
              "enabled": true
            },
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "rollingUpdate": {
                "maxUnavailable": "1"
              },
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {
              "enabled": true
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "initContainer": {},
              "use_ocp_driver_toolkit": true
            },
            "sandboxDevicePlugin": {
              "enabled": true
            },
            "sandboxWorkloads": {
              "defaultWorkload": "container",
              "enabled": false
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            },
            "vfioManager": {
              "enabled": true
            },
            "vgpuDeviceManager": {
              "enabled": true
            },
            "vgpuManager": {
              "enabled": false
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64"
      ],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:8d879d1275b548fc69b2d7511433e6a7882ef186052c12f6cd11bd9b2a3164e3",
      "bundle_path_digest": "sha256:8d879d1275b548fc69b2d7511433e6a7882ef186052c12f6cd11bd9b2a3164e3",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "v22.9",
      "creation_date": "2022-10-04T02:51:08.391000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://cloud.redhat.com/blog/introducing-the-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v22.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:40:22.402000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:4f991f2be8ec9f590ed53d15bcc5d9cf105298b1eca2d69b8449f8972e6a3faf",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:4f991f2be8ec9f590ed53d15bcc5d9cf105298b1eca2d69b8449f8972e6a3faf",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:150c446598d4ab03db0fd2301b1922aabdf3e0159571c71abe4489075639b2e7",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:150c446598d4ab03db0fd2301b1922aabdf3e0159571c71abe4489075639b2e7",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:efb88937f73434994d1bbadc87b492a1df047aa9f8d6e9f5ec3b09536e6e7691",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:efb88937f73434994d1bbadc87b492a1df047aa9f8d6e9f5ec3b09536e6e7691",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:4d1bf34d0ee9a3f5fa3fa124ab89ef13ae38dea12c92a9c8bd79b4180a205b56",
          "image": "nvcr.io/nvidia/driver@sha256:4d1bf34d0ee9a3f5fa3fa124ab89ef13ae38dea12c92a9c8bd79b4180a205b56",
          "name": "driver-image"
        },
        {
          "digest": "sha256:9be9edb8109dc4f7f3023197aea648e67c4d07649fc5ab7e9cc8b26ee3b7d3e2",
          "image": "nvcr.io/nvidia/driver@sha256:9be9edb8109dc4f7f3023197aea648e67c4d07649fc5ab7e9cc8b26ee3b7d3e2",
          "name": "driver-image-510"
        },
        {
          "digest": "sha256:c6d6697bd9281fe5b5666ba44d0855c9e9c2f2226be65a6bababe08db1fc4cd5",
          "image": "nvcr.io/nvidia/driver@sha256:c6d6697bd9281fe5b5666ba44d0855c9e9c2f2226be65a6bababe08db1fc4cd5",
          "name": "driver-image-470"
        },
        {
          "digest": "sha256:dd8155a49340aaea95fd85639576e76196d0170fc023dc7782b35f7c313275b5",
          "image": "nvcr.io/nvidia/driver@sha256:dd8155a49340aaea95fd85639576e76196d0170fc023dc7782b35f7c313275b5",
          "name": "driver-image-450"
        },
        {
          "digest": "sha256:d1c61116647bb9388eb3c4e31848dd6038458b7ba33c0eb3b659d96739eceb73",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:d1c61116647bb9388eb3c4e31848dd6038458b7ba33c0eb3b659d96739eceb73",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:37821ea7829def707f819ac21122cea62efdbbd640679b6004e552fb9a1e17a3",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:37821ea7829def707f819ac21122cea62efdbbd640679b6004e552fb9a1e17a3",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:50c2a2b998e467c82716efa79fe136aa6f7ea95fd23576cf384d251bb9628640",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:50c2a2b998e467c82716efa79fe136aa6f7ea95fd23576cf384d251bb9628640",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "image": "nvcr.io/nvidia/cuda@sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:e3f16c26b9340ed46aed248cc4d18353ba3a65886bf7a2f0cea25ff41b2553da",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:e3f16c26b9340ed46aed248cc4d18353ba3a65886bf7a2f0cea25ff41b2553da",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "image": "nvcr.io/nvidia/cuda@sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "name": "vfio-manager-image"
        },
        {
          "digest": "sha256:0d47dad29d2ef445b301c5c64717758eed43a606345b79f97bce2e64b40a91a8",
          "image": "nvcr.io/nvidia/kubevirt-gpu-device-plugin@sha256:0d47dad29d2ef445b301c5c64717758eed43a606345b79f97bce2e64b40a91a8",
          "name": "sandbox-device-plugin-image"
        },
        {
          "digest": "sha256:64d757b4c80b910e64647a84a1d592fab2ea3313ff6dce30c25c3a08e180bd74",
          "image": "nvcr.io/nvidia/cloud-native/vgpu-device-manager@sha256:64d757b4c80b910e64647a84a1d592fab2ea3313ff6dce30c25c3a08e180bd74",
          "name": "vgpu-device-manager-image"
        },
        {
          "digest": "sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "name": "gpu-operator-6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db-annotation"
        },
        {
          "digest": "sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v22.9.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "22.9.0",
      "version_original": "22.9.0"
    },
    {
      "_id": "633b9f9fe2a358554c1930d2",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              },
              "enabled": true,
              "serviceMonitor": {
                "enabled": true
              }
            },
            "devicePlugin": {
              "config": {
                "default": "",
                "name": ""
              },
              "enabled": true
            },
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "rollingUpdate": {
                "maxUnavailable": "1"
              },
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {
              "enabled": true
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "initContainer": {},
              "use_ocp_driver_toolkit": true
            },
            "sandboxDevicePlugin": {
              "enabled": true
            },
            "sandboxWorkloads": {
              "defaultWorkload": "container",
              "enabled": false
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            },
            "vfioManager": {
              "enabled": true
            },
            "vgpuDeviceManager": {
              "enabled": true
            },
            "vgpuManager": {
              "enabled": false
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64"
      ],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:8d879d1275b548fc69b2d7511433e6a7882ef186052c12f6cd11bd9b2a3164e3",
      "bundle_path_digest": "sha256:8d879d1275b548fc69b2d7511433e6a7882ef186052c12f6cd11bd9b2a3164e3",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-04T02:51:11.887000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://cloud.redhat.com/blog/introducing-the-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v22.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:41:23.390000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:4f991f2be8ec9f590ed53d15bcc5d9cf105298b1eca2d69b8449f8972e6a3faf",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:4f991f2be8ec9f590ed53d15bcc5d9cf105298b1eca2d69b8449f8972e6a3faf",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:150c446598d4ab03db0fd2301b1922aabdf3e0159571c71abe4489075639b2e7",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:150c446598d4ab03db0fd2301b1922aabdf3e0159571c71abe4489075639b2e7",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:efb88937f73434994d1bbadc87b492a1df047aa9f8d6e9f5ec3b09536e6e7691",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:efb88937f73434994d1bbadc87b492a1df047aa9f8d6e9f5ec3b09536e6e7691",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:4d1bf34d0ee9a3f5fa3fa124ab89ef13ae38dea12c92a9c8bd79b4180a205b56",
          "image": "nvcr.io/nvidia/driver@sha256:4d1bf34d0ee9a3f5fa3fa124ab89ef13ae38dea12c92a9c8bd79b4180a205b56",
          "name": "driver-image"
        },
        {
          "digest": "sha256:9be9edb8109dc4f7f3023197aea648e67c4d07649fc5ab7e9cc8b26ee3b7d3e2",
          "image": "nvcr.io/nvidia/driver@sha256:9be9edb8109dc4f7f3023197aea648e67c4d07649fc5ab7e9cc8b26ee3b7d3e2",
          "name": "driver-image-510"
        },
        {
          "digest": "sha256:c6d6697bd9281fe5b5666ba44d0855c9e9c2f2226be65a6bababe08db1fc4cd5",
          "image": "nvcr.io/nvidia/driver@sha256:c6d6697bd9281fe5b5666ba44d0855c9e9c2f2226be65a6bababe08db1fc4cd5",
          "name": "driver-image-470"
        },
        {
          "digest": "sha256:dd8155a49340aaea95fd85639576e76196d0170fc023dc7782b35f7c313275b5",
          "image": "nvcr.io/nvidia/driver@sha256:dd8155a49340aaea95fd85639576e76196d0170fc023dc7782b35f7c313275b5",
          "name": "driver-image-450"
        },
        {
          "digest": "sha256:d1c61116647bb9388eb3c4e31848dd6038458b7ba33c0eb3b659d96739eceb73",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:d1c61116647bb9388eb3c4e31848dd6038458b7ba33c0eb3b659d96739eceb73",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:37821ea7829def707f819ac21122cea62efdbbd640679b6004e552fb9a1e17a3",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:37821ea7829def707f819ac21122cea62efdbbd640679b6004e552fb9a1e17a3",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:50c2a2b998e467c82716efa79fe136aa6f7ea95fd23576cf384d251bb9628640",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:50c2a2b998e467c82716efa79fe136aa6f7ea95fd23576cf384d251bb9628640",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "image": "nvcr.io/nvidia/cuda@sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:e3f16c26b9340ed46aed248cc4d18353ba3a65886bf7a2f0cea25ff41b2553da",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:e3f16c26b9340ed46aed248cc4d18353ba3a65886bf7a2f0cea25ff41b2553da",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "image": "nvcr.io/nvidia/cuda@sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "name": "vfio-manager-image"
        },
        {
          "digest": "sha256:0d47dad29d2ef445b301c5c64717758eed43a606345b79f97bce2e64b40a91a8",
          "image": "nvcr.io/nvidia/kubevirt-gpu-device-plugin@sha256:0d47dad29d2ef445b301c5c64717758eed43a606345b79f97bce2e64b40a91a8",
          "name": "sandbox-device-plugin-image"
        },
        {
          "digest": "sha256:64d757b4c80b910e64647a84a1d592fab2ea3313ff6dce30c25c3a08e180bd74",
          "image": "nvcr.io/nvidia/cloud-native/vgpu-device-manager@sha256:64d757b4c80b910e64647a84a1d592fab2ea3313ff6dce30c25c3a08e180bd74",
          "name": "vgpu-device-manager-image"
        },
        {
          "digest": "sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "name": "gpu-operator-6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db-annotation"
        },
        {
          "digest": "sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v22.9.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "22.9.0",
      "version_original": "22.9.0"
    },
    {
      "_id": "633ba03b9fd3c31befe8a5f5",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {},
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "use_ocp_driver_toolkit": true,
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {}
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:4d1268054559b7678028a7a66e36567c55417b729101ef131dec8d989cbef1d3",
      "bundle_path_digest": "sha256:4d1268054559b7678028a7a66e36567c55417b729101ef131dec8d989cbef1d3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v22.9",
      "creation_date": "2022-10-04T02:53:47.044000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:07:52.945000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:d46393d6bd5be020c78e1d45669d2bb3ac8681df13369ddbbbf90740e354c0cf",
          "image": "nvcr.io/nvidia/driver@sha256:d46393d6bd5be020c78e1d45669d2bb3ac8681df13369ddbbbf90740e354c0cf",
          "name": "driver-image"
        },
        {
          "digest": "sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:c7609c27c68ae6520ff21862665d10e1dd0dc99fe0615968310478632187341b",
          "image": "docker.io/nvidia/cuda@sha256:c7609c27c68ae6520ff21862665d10e1dd0dc99fe0615968310478632187341b",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:6819f4c9136e82e44ec34b03ba71c72cbbeebe1db49c596a8bc245fea3bee596",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6819f4c9136e82e44ec34b03ba71c72cbbeebe1db49c596a8bc245fea3bee596",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be",
          "name": "gpu-operator-e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be-annotation"
        },
        {
          "digest": "sha256:e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:e2da1a42a885482a6b40b397397e79c037a10e71abd08e4658eb0b9fc2a761be",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "633ba03e9fd3c31befe8a5f7",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {},
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "use_ocp_driver_toolkit": true,
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {}
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:60b1d25ebb3aada94985e359bb059d4491bf0148ac75d51b68a461670659e429",
      "bundle_path_digest": "sha256:60b1d25ebb3aada94985e359bb059d4491bf0148ac75d51b68a461670659e429",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v22.9",
      "creation_date": "2022-10-04T02:53:50.603000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.10.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:08:26.634000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:f99b66855e92451a59a722355dd52bf97eb985cc8a647172273de8178aeaa93c",
          "image": "nvcr.io/nvidia/driver@sha256:f99b66855e92451a59a722355dd52bf97eb985cc8a647172273de8178aeaa93c",
          "name": "driver-image"
        },
        {
          "digest": "sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:7f0f7dc8c993a86865d4d9f9b0e36d113ea15603d5d5279d2879fa2bc21c8236",
          "image": "nvcr.io/nvidia/cuda@sha256:7f0f7dc8c993a86865d4d9f9b0e36d113ea15603d5d5279d2879fa2bc21c8236",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:24d804e8f005d7aeca8343aa13e5f92295d8642a4c47cb24e3ac86a22543bc37",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:24d804e8f005d7aeca8343aa13e5f92295d8642a4c47cb24e3ac86a22543bc37",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator-c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a-annotation"
        },
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v1.10.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.10.1",
      "version_original": "1.10.1"
    },
    {
      "_id": "633ba04198bae04fd1a69bf3",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {
              "config": {
                "default": "",
                "name": ""
              }
            },
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "initContainer": {},
              "use_ocp_driver_toolkit": true
            },
            "sandboxDevicePlugin": {
              "enabled": true
            },
            "sandboxWorkloads": {
              "defaultWorkload": "container",
              "enabled": false
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            },
            "vfioManager": {
              "enabled": true
            },
            "vgpuDeviceManager": {
              "config": {
                "default": "default",
                "name": "vgpu-devices-config"
              },
              "enabled": true
            },
            "vgpuManager": {
              "enabled": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64"
      ],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:501dd759f32adb585848f511f6dfa7bc9372d5e905abea9b082dd50cbe232216",
      "bundle_path_digest": "sha256:501dd759f32adb585848f511f6dfa7bc9372d5e905abea9b082dd50cbe232216",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v22.9",
      "creation_date": "2022-10-04T02:53:53.973000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://cloud.redhat.com/blog/introducing-the-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.11.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:08:50.247000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "image": "nvcr.io/nvidia/driver@sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "name": "driver-image"
        },
        {
          "digest": "sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "image": "nvcr.io/nvidia/driver@sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "name": "driver-image-510"
        },
        {
          "digest": "sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "image": "nvcr.io/nvidia/driver@sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "name": "driver-image-470"
        },
        {
          "digest": "sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "image": "nvcr.io/nvidia/driver@sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "name": "driver-image-450"
        },
        {
          "digest": "sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:d83aee1c7a9c3aa39e3947f0bd206e7955390943b8e3f2e56bdb96bc4ef99d69",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:d83aee1c7a9c3aa39e3947f0bd206e7955390943b8e3f2e56bdb96bc4ef99d69",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:2cb6f2b43e153e67780b1b350ae171c800e15b3f1ae5ad6375b66de530d701fd",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:2cb6f2b43e153e67780b1b350ae171c800e15b3f1ae5ad6375b66de530d701fd",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "vfio-manager-image"
        },
        {
          "digest": "sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "image": "nvcr.io/nvidia/kubevirt-gpu-device-plugin@sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "name": "sandbox-device-plugin-image"
        },
        {
          "digest": "sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "image": "nvcr.io/nvidia/cloud-native/vgpu-device-manager@sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "name": "vgpu-device-manager-image"
        },
        {
          "digest": "sha256:7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5",
          "name": "gpu-operator-7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5-annotation"
        },
        {
          "digest": "sha256:7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:7e3699c82bf02ba640d49775ce1b1fc96a5eca02d5ea453ea0ed1571d73779a5",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v1.11.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.11.0",
      "version_original": "1.11.0"
    },
    {
      "_id": "633ba045a78cfb392933ee12",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {
              "config": {
                "default": "",
                "name": ""
              }
            },
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "rollingUpdate": {
                "maxUnavailable": "1"
              },
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "initContainer": {},
              "use_ocp_driver_toolkit": true
            },
            "sandboxDevicePlugin": {
              "enabled": true
            },
            "sandboxWorkloads": {
              "defaultWorkload": "container",
              "enabled": false
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            },
            "vfioManager": {
              "enabled": true
            },
            "vgpuDeviceManager": {
              "config": {
                "default": "default",
                "name": "vgpu-devices-config"
              },
              "enabled": true
            },
            "vgpuManager": {
              "enabled": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64"
      ],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:3128cd81b56975643c1c88c6ceff6d72e918a67ec2d6a5a606b6e04753c5b0ce",
      "bundle_path_digest": "sha256:3128cd81b56975643c1c88c6ceff6d72e918a67ec2d6a5a606b6e04753c5b0ce",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v22.9",
      "creation_date": "2022-10-04T02:53:57.416000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://cloud.redhat.com/blog/introducing-the-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.11.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:09:13.851000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "image": "nvcr.io/nvidia/driver@sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "name": "driver-image"
        },
        {
          "digest": "sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "image": "nvcr.io/nvidia/driver@sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "name": "driver-image-510"
        },
        {
          "digest": "sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "image": "nvcr.io/nvidia/driver@sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "name": "driver-image-470"
        },
        {
          "digest": "sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "image": "nvcr.io/nvidia/driver@sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "name": "driver-image-450"
        },
        {
          "digest": "sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:10d825ccbfcf87f8c74f841fa89ae345f2d381fb47a5b2b31f61b72ebbbb0915",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:10d825ccbfcf87f8c74f841fa89ae345f2d381fb47a5b2b31f61b72ebbbb0915",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:e88e610d09f1a7528ab32cb54259aee340eba2b2bf66b92a28157626daadc82d",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:e88e610d09f1a7528ab32cb54259aee340eba2b2bf66b92a28157626daadc82d",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "vfio-manager-image"
        },
        {
          "digest": "sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "image": "nvcr.io/nvidia/kubevirt-gpu-device-plugin@sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "name": "sandbox-device-plugin-image"
        },
        {
          "digest": "sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "image": "nvcr.io/nvidia/cloud-native/vgpu-device-manager@sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "name": "vgpu-device-manager-image"
        },
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator-53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d-annotation"
        },
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v1.11.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.11.1",
      "version_original": "1.11.1"
    },
    {
      "_id": "633ba048a78cfb392933ee14",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              },
              "enabled": true,
              "serviceMonitor": {
                "enabled": true
              }
            },
            "devicePlugin": {
              "config": {
                "default": "",
                "name": ""
              },
              "enabled": true
            },
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "rollingUpdate": {
                "maxUnavailable": "1"
              },
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {
              "enabled": true
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "initContainer": {},
              "use_ocp_driver_toolkit": true
            },
            "sandboxDevicePlugin": {
              "enabled": true
            },
            "sandboxWorkloads": {
              "defaultWorkload": "container",
              "enabled": false
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            },
            "vfioManager": {
              "enabled": true
            },
            "vgpuDeviceManager": {
              "enabled": true
            },
            "vgpuManager": {
              "enabled": false
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64"
      ],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:8d879d1275b548fc69b2d7511433e6a7882ef186052c12f6cd11bd9b2a3164e3",
      "bundle_path_digest": "sha256:8d879d1275b548fc69b2d7511433e6a7882ef186052c12f6cd11bd9b2a3164e3",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-04T02:54:00.659000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://cloud.redhat.com/blog/introducing-the-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v22.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:09:19.490000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:4f991f2be8ec9f590ed53d15bcc5d9cf105298b1eca2d69b8449f8972e6a3faf",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:4f991f2be8ec9f590ed53d15bcc5d9cf105298b1eca2d69b8449f8972e6a3faf",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:150c446598d4ab03db0fd2301b1922aabdf3e0159571c71abe4489075639b2e7",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:150c446598d4ab03db0fd2301b1922aabdf3e0159571c71abe4489075639b2e7",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:efb88937f73434994d1bbadc87b492a1df047aa9f8d6e9f5ec3b09536e6e7691",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:efb88937f73434994d1bbadc87b492a1df047aa9f8d6e9f5ec3b09536e6e7691",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:4d1bf34d0ee9a3f5fa3fa124ab89ef13ae38dea12c92a9c8bd79b4180a205b56",
          "image": "nvcr.io/nvidia/driver@sha256:4d1bf34d0ee9a3f5fa3fa124ab89ef13ae38dea12c92a9c8bd79b4180a205b56",
          "name": "driver-image"
        },
        {
          "digest": "sha256:9be9edb8109dc4f7f3023197aea648e67c4d07649fc5ab7e9cc8b26ee3b7d3e2",
          "image": "nvcr.io/nvidia/driver@sha256:9be9edb8109dc4f7f3023197aea648e67c4d07649fc5ab7e9cc8b26ee3b7d3e2",
          "name": "driver-image-510"
        },
        {
          "digest": "sha256:c6d6697bd9281fe5b5666ba44d0855c9e9c2f2226be65a6bababe08db1fc4cd5",
          "image": "nvcr.io/nvidia/driver@sha256:c6d6697bd9281fe5b5666ba44d0855c9e9c2f2226be65a6bababe08db1fc4cd5",
          "name": "driver-image-470"
        },
        {
          "digest": "sha256:dd8155a49340aaea95fd85639576e76196d0170fc023dc7782b35f7c313275b5",
          "image": "nvcr.io/nvidia/driver@sha256:dd8155a49340aaea95fd85639576e76196d0170fc023dc7782b35f7c313275b5",
          "name": "driver-image-450"
        },
        {
          "digest": "sha256:d1c61116647bb9388eb3c4e31848dd6038458b7ba33c0eb3b659d96739eceb73",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:d1c61116647bb9388eb3c4e31848dd6038458b7ba33c0eb3b659d96739eceb73",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:37821ea7829def707f819ac21122cea62efdbbd640679b6004e552fb9a1e17a3",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:37821ea7829def707f819ac21122cea62efdbbd640679b6004e552fb9a1e17a3",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:50c2a2b998e467c82716efa79fe136aa6f7ea95fd23576cf384d251bb9628640",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:50c2a2b998e467c82716efa79fe136aa6f7ea95fd23576cf384d251bb9628640",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "image": "nvcr.io/nvidia/cuda@sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:e3f16c26b9340ed46aed248cc4d18353ba3a65886bf7a2f0cea25ff41b2553da",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:e3f16c26b9340ed46aed248cc4d18353ba3a65886bf7a2f0cea25ff41b2553da",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "image": "nvcr.io/nvidia/cuda@sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "name": "vfio-manager-image"
        },
        {
          "digest": "sha256:0d47dad29d2ef445b301c5c64717758eed43a606345b79f97bce2e64b40a91a8",
          "image": "nvcr.io/nvidia/kubevirt-gpu-device-plugin@sha256:0d47dad29d2ef445b301c5c64717758eed43a606345b79f97bce2e64b40a91a8",
          "name": "sandbox-device-plugin-image"
        },
        {
          "digest": "sha256:64d757b4c80b910e64647a84a1d592fab2ea3313ff6dce30c25c3a08e180bd74",
          "image": "nvcr.io/nvidia/cloud-native/vgpu-device-manager@sha256:64d757b4c80b910e64647a84a1d592fab2ea3313ff6dce30c25c3a08e180bd74",
          "name": "vgpu-device-manager-image"
        },
        {
          "digest": "sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "name": "gpu-operator-6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db-annotation"
        },
        {
          "digest": "sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v22.9.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "22.9.0",
      "version_original": "22.9.0"
    },
    {
      "_id": "633ba04ce2a358554c1930e1",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              },
              "enabled": true,
              "serviceMonitor": {
                "enabled": true
              }
            },
            "devicePlugin": {
              "config": {
                "default": "",
                "name": ""
              },
              "enabled": true
            },
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "rollingUpdate": {
                "maxUnavailable": "1"
              },
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {
              "enabled": true
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "initContainer": {},
              "use_ocp_driver_toolkit": true
            },
            "sandboxDevicePlugin": {
              "enabled": true
            },
            "sandboxWorkloads": {
              "defaultWorkload": "container",
              "enabled": false
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            },
            "vfioManager": {
              "enabled": true
            },
            "vgpuDeviceManager": {
              "enabled": true
            },
            "vgpuManager": {
              "enabled": false
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64"
      ],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:8d879d1275b548fc69b2d7511433e6a7882ef186052c12f6cd11bd9b2a3164e3",
      "bundle_path_digest": "sha256:8d879d1275b548fc69b2d7511433e6a7882ef186052c12f6cd11bd9b2a3164e3",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "v22.9",
      "creation_date": "2022-10-04T02:54:04.183000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://cloud.redhat.com/blog/introducing-the-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v22.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:09:24.543000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:4f991f2be8ec9f590ed53d15bcc5d9cf105298b1eca2d69b8449f8972e6a3faf",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:4f991f2be8ec9f590ed53d15bcc5d9cf105298b1eca2d69b8449f8972e6a3faf",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:150c446598d4ab03db0fd2301b1922aabdf3e0159571c71abe4489075639b2e7",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:150c446598d4ab03db0fd2301b1922aabdf3e0159571c71abe4489075639b2e7",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:efb88937f73434994d1bbadc87b492a1df047aa9f8d6e9f5ec3b09536e6e7691",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:efb88937f73434994d1bbadc87b492a1df047aa9f8d6e9f5ec3b09536e6e7691",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:4d1bf34d0ee9a3f5fa3fa124ab89ef13ae38dea12c92a9c8bd79b4180a205b56",
          "image": "nvcr.io/nvidia/driver@sha256:4d1bf34d0ee9a3f5fa3fa124ab89ef13ae38dea12c92a9c8bd79b4180a205b56",
          "name": "driver-image"
        },
        {
          "digest": "sha256:9be9edb8109dc4f7f3023197aea648e67c4d07649fc5ab7e9cc8b26ee3b7d3e2",
          "image": "nvcr.io/nvidia/driver@sha256:9be9edb8109dc4f7f3023197aea648e67c4d07649fc5ab7e9cc8b26ee3b7d3e2",
          "name": "driver-image-510"
        },
        {
          "digest": "sha256:c6d6697bd9281fe5b5666ba44d0855c9e9c2f2226be65a6bababe08db1fc4cd5",
          "image": "nvcr.io/nvidia/driver@sha256:c6d6697bd9281fe5b5666ba44d0855c9e9c2f2226be65a6bababe08db1fc4cd5",
          "name": "driver-image-470"
        },
        {
          "digest": "sha256:dd8155a49340aaea95fd85639576e76196d0170fc023dc7782b35f7c313275b5",
          "image": "nvcr.io/nvidia/driver@sha256:dd8155a49340aaea95fd85639576e76196d0170fc023dc7782b35f7c313275b5",
          "name": "driver-image-450"
        },
        {
          "digest": "sha256:d1c61116647bb9388eb3c4e31848dd6038458b7ba33c0eb3b659d96739eceb73",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:d1c61116647bb9388eb3c4e31848dd6038458b7ba33c0eb3b659d96739eceb73",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:37821ea7829def707f819ac21122cea62efdbbd640679b6004e552fb9a1e17a3",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:37821ea7829def707f819ac21122cea62efdbbd640679b6004e552fb9a1e17a3",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:50c2a2b998e467c82716efa79fe136aa6f7ea95fd23576cf384d251bb9628640",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:50c2a2b998e467c82716efa79fe136aa6f7ea95fd23576cf384d251bb9628640",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "image": "nvcr.io/nvidia/cuda@sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:e3f16c26b9340ed46aed248cc4d18353ba3a65886bf7a2f0cea25ff41b2553da",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:e3f16c26b9340ed46aed248cc4d18353ba3a65886bf7a2f0cea25ff41b2553da",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "image": "nvcr.io/nvidia/cuda@sha256:7e840c252c730279c0e3f89b68208aac02ded73c945c0c21e2f1d23b1a9b052f",
          "name": "vfio-manager-image"
        },
        {
          "digest": "sha256:0d47dad29d2ef445b301c5c64717758eed43a606345b79f97bce2e64b40a91a8",
          "image": "nvcr.io/nvidia/kubevirt-gpu-device-plugin@sha256:0d47dad29d2ef445b301c5c64717758eed43a606345b79f97bce2e64b40a91a8",
          "name": "sandbox-device-plugin-image"
        },
        {
          "digest": "sha256:64d757b4c80b910e64647a84a1d592fab2ea3313ff6dce30c25c3a08e180bd74",
          "image": "nvcr.io/nvidia/cloud-native/vgpu-device-manager@sha256:64d757b4c80b910e64647a84a1d592fab2ea3313ff6dce30c25c3a08e180bd74",
          "name": "vgpu-device-manager-image"
        },
        {
          "digest": "sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "name": "gpu-operator-6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db-annotation"
        },
        {
          "digest": "sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v22.9.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "22.9.0",
      "version_original": "22.9.0"
    },
    {
      "_id": "633c690f44590e9e97336e7c",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "bundle_path_digest": "sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-10-04T17:10:39.925000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:25:02.452000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "name": "authcheck"
        },
        {
          "digest": "sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "name": "dqlite"
        },
        {
          "digest": "sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "name": "reporter"
        },
        {
          "digest": "sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "name": "prometheus"
        },
        {
          "digest": "sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "name": "metric_state"
        },
        {
          "digest": "sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "redhat-marketplace-operator-84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c-annotation"
        },
        {
          "digest": "sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.8.2",
      "version_original": "2.8.2"
    },
    {
      "_id": "633c6913af1788e5024be2b7",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "bundle_path_digest": "sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-04T17:10:43.724000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:25:08.666000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "name": "authcheck"
        },
        {
          "digest": "sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "name": "dqlite"
        },
        {
          "digest": "sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "name": "reporter"
        },
        {
          "digest": "sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "name": "prometheus"
        },
        {
          "digest": "sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "name": "metric_state"
        },
        {
          "digest": "sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "redhat-marketplace-operator-84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c-annotation"
        },
        {
          "digest": "sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.8.2",
      "version_original": "2.8.2"
    },
    {
      "_id": "633c696c6795ebcfc7f83496",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "bundle_path_digest": "sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-10-04T17:12:12.267000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:27:22.139000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "name": "authcheck"
        },
        {
          "digest": "sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "name": "dqlite"
        },
        {
          "digest": "sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "name": "reporter"
        },
        {
          "digest": "sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "name": "prometheus"
        },
        {
          "digest": "sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "name": "metric_state"
        },
        {
          "digest": "sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "redhat-marketplace-operator-84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c-annotation"
        },
        {
          "digest": "sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.8.2",
      "version_original": "2.8.2"
    },
    {
      "_id": "633c696d44590e9e97336ea3",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "bundle_path_digest": "sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-04T17:12:13.641000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:27:30.571000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "name": "authcheck"
        },
        {
          "digest": "sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "name": "dqlite"
        },
        {
          "digest": "sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "name": "reporter"
        },
        {
          "digest": "sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "name": "prometheus"
        },
        {
          "digest": "sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "name": "metric_state"
        },
        {
          "digest": "sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "redhat-marketplace-operator-84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c-annotation"
        },
        {
          "digest": "sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.8.2",
      "version_original": "2.8.2"
    },
    {
      "_id": "633c6a55394f2c415dc1a711",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "bundle_path_digest": "sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-10-04T17:16:05.175000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:56:31.148000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "name": "authcheck"
        },
        {
          "digest": "sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "name": "dqlite"
        },
        {
          "digest": "sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "name": "reporter"
        },
        {
          "digest": "sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "name": "prometheus"
        },
        {
          "digest": "sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "name": "metric_state"
        },
        {
          "digest": "sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "redhat-marketplace-operator-84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c-annotation"
        },
        {
          "digest": "sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.8.2",
      "version_original": "2.8.2"
    },
    {
      "_id": "633c6a54394f2c415dc1a70f",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "bundle_path_digest": "sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-04T17:16:04.243000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:37:00.147000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "name": "authcheck"
        },
        {
          "digest": "sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "name": "dqlite"
        },
        {
          "digest": "sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "name": "reporter"
        },
        {
          "digest": "sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "name": "prometheus"
        },
        {
          "digest": "sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "name": "metric_state"
        },
        {
          "digest": "sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "redhat-marketplace-operator-84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c-annotation"
        },
        {
          "digest": "sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.8.2",
      "version_original": "2.8.2"
    },
    {
      "_id": "633c6c490474789a00f8a374",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "bundle_path_digest": "sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-10-04T17:24:25.935000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:28:23.258000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "version": "v1beta1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "name": "authcheck"
        },
        {
          "digest": "sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "name": "dqlite"
        },
        {
          "digest": "sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "name": "reporter"
        },
        {
          "digest": "sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "name": "prometheus"
        },
        {
          "digest": "sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "name": "metric_state"
        },
        {
          "digest": "sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "redhat-marketplace-operator-84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c-annotation"
        },
        {
          "digest": "sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.8.2",
      "version_original": "2.8.2"
    },
    {
      "_id": "633c6c4ae40354449aaafa67",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "bundle_path_digest": "sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-04T17:24:26.458000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:15:45.945000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "version": "v1beta1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "name": "authcheck"
        },
        {
          "digest": "sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "name": "dqlite"
        },
        {
          "digest": "sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "name": "reporter"
        },
        {
          "digest": "sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "name": "prometheus"
        },
        {
          "digest": "sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "name": "metric_state"
        },
        {
          "digest": "sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "redhat-marketplace-operator-84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c-annotation"
        },
        {
          "digest": "sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.8.2",
      "version_original": "2.8.2"
    },
    {
      "_id": "633c6d5c0474789a00f8a3f2",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "bundle_path_digest": "sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-04T17:29:00.279000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:40:23.140000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "plural": "meterreports",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "plural": "razeedeployments",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "plural": "remoteresources3s",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "plural": "marketplaceconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "plural": "meterbases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "name": "authcheck"
        },
        {
          "digest": "sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "name": "dqlite"
        },
        {
          "digest": "sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "name": "reporter"
        },
        {
          "digest": "sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "name": "prometheus"
        },
        {
          "digest": "sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "name": "metric_state"
        },
        {
          "digest": "sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "redhat-marketplace-operator-84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c-annotation"
        },
        {
          "digest": "sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.8.2",
      "version_original": "2.8.2"
    },
    {
      "_id": "633c6d5cf37c6281489d0f85",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "bundle_path_digest": "sha256:59c9ea52e8321078e9cf831106c92e4feed1b503463490425e64c5876956f1da",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-10-04T17:29:00.966000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T10:50:35.346000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "plural": "meterreports",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "plural": "razeedeployments",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "plural": "remoteresources3s",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "plural": "marketplaceconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "plural": "meterbases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8d00f0718882e7c4f28f7dd0171cec2aabe470440daef02bf1821032d1563d15",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:0b691105c2bd7e24a3072e2e793b72b442605269bdf6b0e13944b9cb27285d07",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:d0a841dbbf16fde198e361ecc110eebc89221aabac2291e23b55614fc1992764",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:4422044d95b4181fbf6618b11ba50b1ced4d18382443caf4a544d7ea9147c9f4",
          "name": "authcheck"
        },
        {
          "digest": "sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:d16eebb8840a63d3700cdcbf635ae2160df92955e9fef7cf4f8f41cf696165ce",
          "name": "dqlite"
        },
        {
          "digest": "sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:44ec91705e89029bd4aa89e7432a82d1da9991a46e698afc1ef51545a0ae637d",
          "name": "reporter"
        },
        {
          "digest": "sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:7b47d6aec483a159e182c8360c6830405337446ea92b012bacb5d30883b46b7c",
          "name": "prometheus"
        },
        {
          "digest": "sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:02cac40abbdaf9cab97d50d7f7d5803993a32f9a21997a6caa3e5f27342cdc60",
          "name": "metric_state"
        },
        {
          "digest": "sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:7cc4a46f132ce4cac57a6a48236cd9b326476bdba8f8f27f884c5687ded389f5",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "redhat-marketplace-operator-84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c-annotation"
        },
        {
          "digest": "sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:2f0d7f50bfaf581794d1391ee12c09ecb7cbfb5c14ebcf273dbb3213e7ba1927",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:84fab183dd572f8d4aa7b7b1418433ec66e45c6e3f736f5c1d42e937d2d0a92c",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.8.2",
      "version_original": "2.8.2"
    },
    {
      "_id": "633f15d6efdb7e4bd86066e3",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixCpxWithIngressController",
          "metadata": {
            "name": "citrixcpxwithingresscontroller-sample"
          },
          "spec": {
            "ADMSettings": {
              "ADMIP": "",
              "analyticsServerPort": 5557,
              "bandWidth": 1000,
              "bandWidthLicense": false,
              "cpxCores": 1,
              "licenseEdition": "PLATINUM",
              "licenseServerIP": "",
              "licenseServerPort": 27000,
              "loginSecret": "",
              "vCPULicense": false
            },
            "affinity": {},
            "analyticsConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": "",
                "service": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 5563
              },
              "transactions": {
                "enable": false,
                "port": 5557
              }
            },
            "bgpPort": 179,
            "bgpSettings": {
              "bgpConfig": [
                {
                  "bgpRouter": {
                    "localAS": 100,
                    "neighbor": [
                      {
                        "ASOriginationInterval": 10,
                        "address": "",
                        "advertisementInterval": 10,
                        "remoteAS": 100
                      }
                    ]
                  }
                }
              ],
              "required": false
            },
            "cic": {
              "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
              "pullPolicy": "IfNotPresent",
              "required": true,
              "resources": {}
            },
            "cpxBgpRouter": false,
            "cpxLicenseAggregator": "",
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "daemonSet": false,
            "defaultSSLCertSecret": "",
            "disableAPIServerCertVerify": false,
            "disableOpenshiftRoutes": false,
            "entityPrefix": "",
            "exporter": {
              "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false,
              "resources": {}
            },
            "fullnameOverride": "",
            "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
            "imagePullSecrets": [],
            "ingressClass": [],
            "ingressIP": "",
            "ipam": false,
            "jsonLog": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "mgmtHttpPort": 9080,
            "mgmtHttpsPort": 9443,
            "nameOverride": "",
            "namespaceLabels": "",
            "nitroReadTimeout": 20,
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nsConfigDnsRec": false,
            "nsCookieVersion": "0",
            "nsDnsNameserver": "",
            "nsGateway": "192.168.1.1",
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "192.168.1.2",
            "nsLbHashAlgo": {
              "hashAlgorithm": "DEFAULT",
              "hashFingers": 256,
              "required": false
            },
            "nsProtocol": "http",
            "nsSvcLbDnsRec": false,
            "openshift": true,
            "optimizeEndpointBinding": false,
            "podAnnotations": {},
            "pullPolicy": "IfNotPresent",
            "replicaCount": 1,
            "resources": {},
            "routeLabels": "",
            "serviceAccount": {
              "create": true
            },
            "serviceAnnotations": {},
            "servicePorts": [],
            "serviceSpec": {
              "externalTrafficPolicy": "Cluster",
              "loadBalancerIP": "",
              "loadBalancerSourceRanges": []
            },
            "serviceType": {
              "loadBalancer": {
                "enabled": false
              },
              "nodePort": {
                "enabled": false,
                "httpPort": "",
                "httpsPort": ""
              }
            },
            "setAsDefaultIngressClass": false,
            "sslCertManagedByAWS": false,
            "tolerations": [],
            "updateIngressStatus": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-bundle@sha256:e829120dd02b44fb22af30cbc6ef2b654a7f17750f838bf7994fbf79291ed6c7",
      "bundle_path_digest": "sha256:e829120dd02b44fb22af30cbc6ef2b654a7f17750f838bf7994fbf79291ed6c7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-06T17:52:22.455000+00:00",
      "csv_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an OpenShift environment.",
      "csv_display_name": "Citrix ADC CPX with Ingress Controller",
      "csv_metadata_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an Openshift environment.",
      "csv_name": "citrix-cpx-with-ingress-controller-operator.v1.26.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:24:20.132000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "citrix-cpx-with-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixCpxWithIngressController",
          "version": "v1alpha1"
        }
      ],
      "provider": "Citrix",
      "related_images": [
        {
          "digest": "sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "name": "cpx"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "cic"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "exporter"
        },
        {
          "digest": "sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "name": "citrix-k8s-cpx-ingress-controller-a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300-annotation"
        },
        {
          "digest": "sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "name": "manager"
        },
        {
          "digest": "sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "name": "citrix-k8s-cpx-ingress-f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d-annotation"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "citrix-adc-metrics-exporter-2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58-annotation"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "citrix-k8s-ingress-controller-2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.18.5 <1.26.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.26.7",
      "version_original": "1.26.7"
    },
    {
      "_id": "633f185663b8e691ec8fad4b",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixCpxWithIngressController",
          "metadata": {
            "name": "citrixcpxwithingresscontroller-sample"
          },
          "spec": {
            "ADMSettings": {
              "ADMIP": "",
              "analyticsServerPort": 5557,
              "bandWidth": 1000,
              "bandWidthLicense": false,
              "cpxCores": 1,
              "licenseEdition": "PLATINUM",
              "licenseServerIP": "",
              "licenseServerPort": 27000,
              "loginSecret": "",
              "vCPULicense": false
            },
            "affinity": {},
            "analyticsConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": "",
                "service": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 5563
              },
              "transactions": {
                "enable": false,
                "port": 5557
              }
            },
            "bgpPort": 179,
            "bgpSettings": {
              "bgpConfig": [
                {
                  "bgpRouter": {
                    "localAS": 100,
                    "neighbor": [
                      {
                        "ASOriginationInterval": 10,
                        "address": "",
                        "advertisementInterval": 10,
                        "remoteAS": 100
                      }
                    ]
                  }
                }
              ],
              "required": false
            },
            "cic": {
              "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
              "pullPolicy": "IfNotPresent",
              "required": true,
              "resources": {}
            },
            "cpxBgpRouter": false,
            "cpxLicenseAggregator": "",
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "daemonSet": false,
            "defaultSSLCertSecret": "",
            "disableAPIServerCertVerify": false,
            "disableOpenshiftRoutes": false,
            "entityPrefix": "",
            "exporter": {
              "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false,
              "resources": {}
            },
            "fullnameOverride": "",
            "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
            "imagePullSecrets": [],
            "ingressClass": [],
            "ingressIP": "",
            "ipam": false,
            "jsonLog": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "mgmtHttpPort": 9080,
            "mgmtHttpsPort": 9443,
            "nameOverride": "",
            "namespaceLabels": "",
            "nitroReadTimeout": 20,
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nsConfigDnsRec": false,
            "nsCookieVersion": "0",
            "nsDnsNameserver": "",
            "nsGateway": "192.168.1.1",
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "192.168.1.2",
            "nsLbHashAlgo": {
              "hashAlgorithm": "DEFAULT",
              "hashFingers": 256,
              "required": false
            },
            "nsProtocol": "http",
            "nsSvcLbDnsRec": false,
            "openshift": true,
            "optimizeEndpointBinding": false,
            "podAnnotations": {},
            "pullPolicy": "IfNotPresent",
            "replicaCount": 1,
            "resources": {},
            "routeLabels": "",
            "serviceAccount": {
              "create": true
            },
            "serviceAnnotations": {},
            "servicePorts": [],
            "serviceSpec": {
              "externalTrafficPolicy": "Cluster",
              "loadBalancerIP": "",
              "loadBalancerSourceRanges": []
            },
            "serviceType": {
              "loadBalancer": {
                "enabled": false
              },
              "nodePort": {
                "enabled": false,
                "httpPort": "",
                "httpsPort": ""
              }
            },
            "setAsDefaultIngressClass": false,
            "sslCertManagedByAWS": false,
            "tolerations": [],
            "updateIngressStatus": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-bundle@sha256:e829120dd02b44fb22af30cbc6ef2b654a7f17750f838bf7994fbf79291ed6c7",
      "bundle_path_digest": "sha256:e829120dd02b44fb22af30cbc6ef2b654a7f17750f838bf7994fbf79291ed6c7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-06T18:03:02.455000+00:00",
      "csv_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an OpenShift environment.",
      "csv_display_name": "Citrix ADC CPX with Ingress Controller",
      "csv_metadata_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an Openshift environment.",
      "csv_name": "citrix-cpx-with-ingress-controller-operator.v1.26.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:58:18.106000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "citrix-cpx-with-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixCpxWithIngressController",
          "version": "v1alpha1"
        }
      ],
      "provider": "Citrix",
      "related_images": [
        {
          "digest": "sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "name": "cpx"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "cic"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "exporter"
        },
        {
          "digest": "sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "name": "citrix-k8s-cpx-ingress-controller-a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300-annotation"
        },
        {
          "digest": "sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "name": "manager"
        },
        {
          "digest": "sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "name": "citrix-k8s-cpx-ingress-f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d-annotation"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "citrix-adc-metrics-exporter-2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58-annotation"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "citrix-k8s-ingress-controller-2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.18.5 <1.26.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.26.7",
      "version_original": "1.26.7"
    },
    {
      "_id": "633f187d2dfa45b383c6c617",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixCpxWithIngressController",
          "metadata": {
            "name": "citrixcpxwithingresscontroller-sample"
          },
          "spec": {
            "ADMSettings": {
              "ADMIP": "",
              "analyticsServerPort": 5557,
              "bandWidth": 1000,
              "bandWidthLicense": false,
              "cpxCores": 1,
              "licenseEdition": "PLATINUM",
              "licenseServerIP": "",
              "licenseServerPort": 27000,
              "loginSecret": "",
              "vCPULicense": false
            },
            "affinity": {},
            "analyticsConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": "",
                "service": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 5563
              },
              "transactions": {
                "enable": false,
                "port": 5557
              }
            },
            "bgpPort": 179,
            "bgpSettings": {
              "bgpConfig": [
                {
                  "bgpRouter": {
                    "localAS": 100,
                    "neighbor": [
                      {
                        "ASOriginationInterval": 10,
                        "address": "",
                        "advertisementInterval": 10,
                        "remoteAS": 100
                      }
                    ]
                  }
                }
              ],
              "required": false
            },
            "cic": {
              "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
              "pullPolicy": "IfNotPresent",
              "required": true,
              "resources": {}
            },
            "cpxBgpRouter": false,
            "cpxLicenseAggregator": "",
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "daemonSet": false,
            "defaultSSLCertSecret": "",
            "disableAPIServerCertVerify": false,
            "disableOpenshiftRoutes": false,
            "entityPrefix": "",
            "exporter": {
              "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false,
              "resources": {}
            },
            "fullnameOverride": "",
            "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
            "imagePullSecrets": [],
            "ingressClass": [],
            "ingressIP": "",
            "ipam": false,
            "jsonLog": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "mgmtHttpPort": 9080,
            "mgmtHttpsPort": 9443,
            "nameOverride": "",
            "namespaceLabels": "",
            "nitroReadTimeout": 20,
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nsConfigDnsRec": false,
            "nsCookieVersion": "0",
            "nsDnsNameserver": "",
            "nsGateway": "192.168.1.1",
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "192.168.1.2",
            "nsLbHashAlgo": {
              "hashAlgorithm": "DEFAULT",
              "hashFingers": 256,
              "required": false
            },
            "nsProtocol": "http",
            "nsSvcLbDnsRec": false,
            "openshift": true,
            "optimizeEndpointBinding": false,
            "podAnnotations": {},
            "pullPolicy": "IfNotPresent",
            "replicaCount": 1,
            "resources": {},
            "routeLabels": "",
            "serviceAccount": {
              "create": true
            },
            "serviceAnnotations": {},
            "servicePorts": [],
            "serviceSpec": {
              "externalTrafficPolicy": "Cluster",
              "loadBalancerIP": "",
              "loadBalancerSourceRanges": []
            },
            "serviceType": {
              "loadBalancer": {
                "enabled": false
              },
              "nodePort": {
                "enabled": false,
                "httpPort": "",
                "httpsPort": ""
              }
            },
            "setAsDefaultIngressClass": false,
            "sslCertManagedByAWS": false,
            "tolerations": [],
            "updateIngressStatus": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-bundle@sha256:e829120dd02b44fb22af30cbc6ef2b654a7f17750f838bf7994fbf79291ed6c7",
      "bundle_path_digest": "sha256:e829120dd02b44fb22af30cbc6ef2b654a7f17750f838bf7994fbf79291ed6c7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-06T18:03:41.262000+00:00",
      "csv_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an OpenShift environment.",
      "csv_display_name": "Citrix ADC CPX with Ingress Controller",
      "csv_metadata_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an Openshift environment.",
      "csv_name": "citrix-cpx-with-ingress-controller-operator.v1.26.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:02:12.683000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "citrix-cpx-with-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixCpxWithIngressController",
          "version": "v1alpha1"
        }
      ],
      "provider": "Citrix",
      "related_images": [
        {
          "digest": "sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "name": "cpx"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "cic"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "exporter"
        },
        {
          "digest": "sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "name": "citrix-k8s-cpx-ingress-controller-a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300-annotation"
        },
        {
          "digest": "sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "name": "manager"
        },
        {
          "digest": "sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "name": "citrix-k8s-cpx-ingress-f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d-annotation"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "citrix-adc-metrics-exporter-2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58-annotation"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "citrix-k8s-ingress-controller-2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.18.5 <1.26.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.26.7",
      "version_original": "1.26.7"
    },
    {
      "_id": "633f1a0eaba219c1c89e56bd",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixCpxWithIngressController",
          "metadata": {
            "name": "citrixcpxwithingresscontroller-sample"
          },
          "spec": {
            "ADMSettings": {
              "ADMIP": "",
              "analyticsServerPort": 5557,
              "bandWidth": 1000,
              "bandWidthLicense": false,
              "cpxCores": 1,
              "licenseEdition": "PLATINUM",
              "licenseServerIP": "",
              "licenseServerPort": 27000,
              "loginSecret": "",
              "vCPULicense": false
            },
            "affinity": {},
            "analyticsConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": "",
                "service": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 5563
              },
              "transactions": {
                "enable": false,
                "port": 5557
              }
            },
            "bgpPort": 179,
            "bgpSettings": {
              "bgpConfig": [
                {
                  "bgpRouter": {
                    "localAS": 100,
                    "neighbor": [
                      {
                        "ASOriginationInterval": 10,
                        "address": "",
                        "advertisementInterval": 10,
                        "remoteAS": 100
                      }
                    ]
                  }
                }
              ],
              "required": false
            },
            "cic": {
              "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
              "pullPolicy": "IfNotPresent",
              "required": true,
              "resources": {}
            },
            "cpxBgpRouter": false,
            "cpxLicenseAggregator": "",
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "daemonSet": false,
            "defaultSSLCertSecret": "",
            "disableAPIServerCertVerify": false,
            "disableOpenshiftRoutes": false,
            "entityPrefix": "",
            "exporter": {
              "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false,
              "resources": {}
            },
            "fullnameOverride": "",
            "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
            "imagePullSecrets": [],
            "ingressClass": [],
            "ingressIP": "",
            "ipam": false,
            "jsonLog": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "mgmtHttpPort": 9080,
            "mgmtHttpsPort": 9443,
            "nameOverride": "",
            "namespaceLabels": "",
            "nitroReadTimeout": 20,
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nsConfigDnsRec": false,
            "nsCookieVersion": "0",
            "nsDnsNameserver": "",
            "nsGateway": "192.168.1.1",
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "192.168.1.2",
            "nsLbHashAlgo": {
              "hashAlgorithm": "DEFAULT",
              "hashFingers": 256,
              "required": false
            },
            "nsProtocol": "http",
            "nsSvcLbDnsRec": false,
            "openshift": true,
            "optimizeEndpointBinding": false,
            "podAnnotations": {},
            "pullPolicy": "IfNotPresent",
            "replicaCount": 1,
            "resources": {},
            "routeLabels": "",
            "serviceAccount": {
              "create": true
            },
            "serviceAnnotations": {},
            "servicePorts": [],
            "serviceSpec": {
              "externalTrafficPolicy": "Cluster",
              "loadBalancerIP": "",
              "loadBalancerSourceRanges": []
            },
            "serviceType": {
              "loadBalancer": {
                "enabled": false
              },
              "nodePort": {
                "enabled": false,
                "httpPort": "",
                "httpsPort": ""
              }
            },
            "setAsDefaultIngressClass": false,
            "sslCertManagedByAWS": false,
            "tolerations": [],
            "updateIngressStatus": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-bundle@sha256:e829120dd02b44fb22af30cbc6ef2b654a7f17750f838bf7994fbf79291ed6c7",
      "bundle_path_digest": "sha256:e829120dd02b44fb22af30cbc6ef2b654a7f17750f838bf7994fbf79291ed6c7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-06T18:10:22.378000+00:00",
      "csv_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an OpenShift environment.",
      "csv_display_name": "Citrix ADC CPX with Ingress Controller",
      "csv_metadata_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an Openshift environment.",
      "csv_name": "citrix-cpx-with-ingress-controller-operator.v1.26.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:51:52.831000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "citrix-cpx-with-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixCpxWithIngressController",
          "version": "v1alpha1"
        }
      ],
      "provider": "Citrix",
      "related_images": [
        {
          "digest": "sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "name": "cpx"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "cic"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "exporter"
        },
        {
          "digest": "sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "name": "citrix-k8s-cpx-ingress-controller-a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300-annotation"
        },
        {
          "digest": "sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "name": "manager"
        },
        {
          "digest": "sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "name": "citrix-k8s-cpx-ingress-f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d-annotation"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "citrix-adc-metrics-exporter-2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58-annotation"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "citrix-k8s-ingress-controller-2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.18.5 <1.26.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.26.7",
      "version_original": "1.26.7"
    },
    {
      "_id": "633f1d7daf509d7a6b9031f9",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixCpxWithIngressController",
          "metadata": {
            "name": "citrixcpxwithingresscontroller-sample"
          },
          "spec": {
            "ADMSettings": {
              "ADMIP": "",
              "analyticsServerPort": 5557,
              "bandWidth": 1000,
              "bandWidthLicense": false,
              "cpxCores": 1,
              "licenseEdition": "PLATINUM",
              "licenseServerIP": "",
              "licenseServerPort": 27000,
              "loginSecret": "",
              "vCPULicense": false
            },
            "affinity": {},
            "analyticsConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": "",
                "service": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 5563
              },
              "transactions": {
                "enable": false,
                "port": 5557
              }
            },
            "bgpPort": 179,
            "bgpSettings": {
              "bgpConfig": [
                {
                  "bgpRouter": {
                    "localAS": 100,
                    "neighbor": [
                      {
                        "ASOriginationInterval": 10,
                        "address": "",
                        "advertisementInterval": 10,
                        "remoteAS": 100
                      }
                    ]
                  }
                }
              ],
              "required": false
            },
            "cic": {
              "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
              "pullPolicy": "IfNotPresent",
              "required": true,
              "resources": {}
            },
            "cpxBgpRouter": false,
            "cpxLicenseAggregator": "",
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "daemonSet": false,
            "defaultSSLCertSecret": "",
            "disableAPIServerCertVerify": false,
            "disableOpenshiftRoutes": false,
            "entityPrefix": "",
            "exporter": {
              "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false,
              "resources": {}
            },
            "fullnameOverride": "",
            "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
            "imagePullSecrets": [],
            "ingressClass": [],
            "ingressIP": "",
            "ipam": false,
            "jsonLog": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "mgmtHttpPort": 9080,
            "mgmtHttpsPort": 9443,
            "nameOverride": "",
            "namespaceLabels": "",
            "nitroReadTimeout": 20,
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nsConfigDnsRec": false,
            "nsCookieVersion": "0",
            "nsDnsNameserver": "",
            "nsGateway": "192.168.1.1",
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "192.168.1.2",
            "nsLbHashAlgo": {
              "hashAlgorithm": "DEFAULT",
              "hashFingers": 256,
              "required": false
            },
            "nsProtocol": "http",
            "nsSvcLbDnsRec": false,
            "openshift": true,
            "optimizeEndpointBinding": false,
            "podAnnotations": {},
            "pullPolicy": "IfNotPresent",
            "replicaCount": 1,
            "resources": {},
            "routeLabels": "",
            "serviceAccount": {
              "create": true
            },
            "serviceAnnotations": {},
            "servicePorts": [],
            "serviceSpec": {
              "externalTrafficPolicy": "Cluster",
              "loadBalancerIP": "",
              "loadBalancerSourceRanges": []
            },
            "serviceType": {
              "loadBalancer": {
                "enabled": false
              },
              "nodePort": {
                "enabled": false,
                "httpPort": "",
                "httpsPort": ""
              }
            },
            "setAsDefaultIngressClass": false,
            "sslCertManagedByAWS": false,
            "tolerations": [],
            "updateIngressStatus": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-bundle@sha256:e829120dd02b44fb22af30cbc6ef2b654a7f17750f838bf7994fbf79291ed6c7",
      "bundle_path_digest": "sha256:e829120dd02b44fb22af30cbc6ef2b654a7f17750f838bf7994fbf79291ed6c7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-06T18:25:01.071000+00:00",
      "csv_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an OpenShift environment.",
      "csv_display_name": "Citrix ADC CPX with Ingress Controller",
      "csv_metadata_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an Openshift environment.",
      "csv_name": "citrix-cpx-with-ingress-controller-operator.v1.26.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:59:52.428000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "citrix-cpx-with-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixCpxWithIngressController",
          "plural": "citrixcpxwithingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Citrix",
      "related_images": [
        {
          "digest": "sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "name": "cpx"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "cic"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "exporter"
        },
        {
          "digest": "sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "name": "citrix-k8s-cpx-ingress-controller-a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300-annotation"
        },
        {
          "digest": "sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:a33ec045d02f2807f23d6d654a19e3e076b6fa07935a85bd8c6b17770a40f300",
          "name": "manager"
        },
        {
          "digest": "sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d",
          "name": "citrix-k8s-cpx-ingress-f9acb4582ab535a30289f51182cf51fbb951368316accdfbd3a054d7b753be1d-annotation"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "citrix-adc-metrics-exporter-2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58-annotation"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "citrix-k8s-ingress-controller-2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.18.5 <1.26.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.26.7",
      "version_original": "1.26.7"
    },
    {
      "_id": "633f4dc346ed6d3a20dd41e4",
      "alm_examples": [
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDB",
          "metadata": {
            "finalizers": [
              "delete-psmdb-pods-in-order"
            ],
            "name": "my-cluster-name"
          },
          "spec": {
            "allowUnsafeConfigurations": false,
            "backup": {
              "enabled": true,
              "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:9ccc1560fa9d5870e57ee847e39b5545e2e59ebe431b464798c546ff261d0de5",
              "pitr": {
                "compressionLevel": 6,
                "compressionType": "gzip",
                "enabled": false
              },
              "serviceAccountName": "percona-server-mongodb-operator"
            },
            "crVersion": "1.13.0",
            "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:d7e4c1ebdc661dafa5bf756b194a09ab71575c355221930f4a65161d976b1788",
            "imagePullPolicy": "Always",
            "multiCluster": {
              "DNSSuffix": "svc.clusterset.local",
              "enabled": false
            },
            "pmm": {
              "enabled": false,
              "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:de556410de32a49a8a6bc157536881e2baefc8549a1094d6c2c70242a3c792cb",
              "serverHost": "monitoring-service"
            },
            "replsets": [
              {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "arbiter": {
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "enabled": false,
                  "size": 1
                },
                "expose": {
                  "enabled": false,
                  "exposeType": "ClusterIP"
                },
                "name": "rs0",
                "nonvoting": {
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "enabled": false,
                  "podDisruptionBudget": {
                    "maxUnavailable": 1
                  },
                  "resources": {
                    "limits": {
                      "cpu": "300m",
                      "memory": "0.5G"
                    },
                    "requests": {
                      "cpu": "300m",
                      "memory": "0.5G"
                    }
                  },
                  "size": 3,
                  "volumeSpec": {
                    "persistentVolumeClaim": {
                      "resources": {
                        "requests": {
                          "storage": "3Gi"
                        }
                      }
                    }
                  }
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3,
                "volumeSpec": {
                  "persistentVolumeClaim": {
                    "resources": {
                      "requests": {
                        "storage": "3Gi"
                      }
                    }
                  }
                }
              }
            ],
            "secrets": {
              "encryptionKey": "my-cluster-name-mongodb-encryption-key",
              "users": "my-cluster-name-secrets"
            },
            "sharding": {
              "configsvrReplSet": {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "expose": {
                  "enabled": false,
                  "exposeType": "ClusterIP"
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3,
                "volumeSpec": {
                  "persistentVolumeClaim": {
                    "resources": {
                      "requests": {
                        "storage": "3Gi"
                      }
                    }
                  }
                }
              },
              "enabled": true,
              "mongos": {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "expose": {
                  "exposeType": "ClusterIP"
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3
              }
            },
            "updateStrategy": "SmartUpdate",
            "upgradeOptions": {
              "apply": "disabled",
              "schedule": "0 2 * * *",
              "setFCV": false,
              "versionServiceEndpoint": "https://check.percona.com"
            }
          }
        },
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDBBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "clusterName": "my-cluster-name",
            "storageName": "s3-us-west"
          }
        },
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDBRestore",
          "metadata": {
            "name": "restore1"
          },
          "spec": {
            "backupName": "backup1",
            "clusterName": "my-cluster-name"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-bundle@sha256:e596f5055f117da6b7f7d9526861c835d50756a428e85479477e8123d0307297",
      "bundle_path_digest": "sha256:e596f5055f117da6b7f7d9526861c835d50756a428e85479477e8123d0307297",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-06T21:50:59.453000+00:00",
      "csv_description": "\n## Percona is Cloud Native\nThe Percona Distribution for MongoDB Kubernetes Operator automates the creation, modification, or deletion of items in your Percona Server for MongoDB environment. The Operator contains the necessary Kubernetes settings to maintain a consistent Percona Server for MongoDB instance modification, or deletion of items in your Percona Server for MongoDB environment. The Operator contains the necessary Kubernetes settings to maintain a consistent Percona Server for MongoDB instance.\n\nConsult the [documentation](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/index.html/) on the Percona Kubernetes Operator for Percona Server for MongoDB for complete details on capabilities and options.\n\n### Supported Features\n\n* **Scale Your Cluster** - change the `size` parameter to [add or remove members](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/scaling.html) of the replica set. Three is the minimum recommended size for a functioning replica set.\n\n* **Add Monitoring** - [Percona Monitoring and Management (PMM) can be easily deployed](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/monitoring.html) to monitor your Percona Server for MongoDB replica set(s). The recommended installation process uses Helm, the package manager for Kubernetes.\n\n* **Automate Your Backups** - [configure automatic backups](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/backups.html) to run on a scheduled basis or run an on-demand backup at any time. Backups are performed using Percona Backup for MongoDB (PBM) and can be stored on local PVs or in any S3-compatible cloud storage provider.\n\n### Common Configurations\n\n* **Set Member as Arbiter** - [Set up a replica set which contains an arbiter](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/arbiter.html), which participates in elections but does not store any data.  This reduces storage costs while helping maintain replica set integrity.\n\n* **Expose Members Outside K8S** - [by appropriately configuring the ServiceType](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/expose.html) you can expose replica set members outside of Kubernetes or provide statically assigned IP addresses.\n\n* **Utilize Local Storage Options** - [with support for Local Storage you can mount existing data directories](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/storage.html) into your replica set managed by Kubernetes or utilize high performance hardware for local storage rather than network storage for your database.\n\n### Before You Start\n\nAdd the PSMDB user `Secret` to Kubernetes. User information must be placed in the data section of the `secrets.yaml`\nfile with Base64-encoded logins and passwords for the user accounts.\n\nBelow is a sample `secrets.yaml` file for the correct formatting.\n\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: my-cluster-name-secrets\ntype: Opaque\ndata:\n  MONGODB_BACKUP_USER: YmFja3Vw\n  MONGODB_BACKUP_PASSWORD: YmFja3VwMTIzNDU2\n  MONGODB_CLUSTER_ADMIN_USER: Y2x1c3RlckFkbWlu\n  MONGODB_CLUSTER_ADMIN_PASSWORD: Y2x1c3RlckFkbWluMTIzNDU2\n  MONGODB_CLUSTER_MONITOR_USER: Y2x1c3Rlck1vbml0b3I=\n  MONGODB_CLUSTER_MONITOR_PASSWORD: Y2x1c3Rlck1vbml0b3IxMjM0NTY=\n  MONGODB_USER_ADMIN_USER: dXNlckFkbWlu\n  MONGODB_USER_ADMIN_PASSWORD: dXNlckFkbWluMTIzNDU2\n  PMM_SERVER_API_KEY: dXNlckFkbWluMTIzNDU2\n```\n### Release Highlights\n* Azure Kubernetes Service (AKS) is now officially supported platform, so developers and vendors of the solutions based on the Azure platform can take advantage of the official support from Percona or just use officially certified Percona Operator for MongoDB images\n* Starting from now, the Operator can be installed in multi-namespace (so-called \u201ccluster-wide\u201d) mode, when a single Operator can be given a list of namespaces in which to manage Percona Server for MongoDB clusters\n\n",
      "csv_display_name": "Percona Distribution for MongoDB Operator",
      "csv_metadata_description": "Percona Distribution for MongoDB Operator automates the creation, modification, or deletion of items in your Percona Server for MongoDB environment",
      "csv_name": "percona-server-mongodb-operator.v1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:23:26.640000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "percona-server-mongodb-operator-certified",
      "provided_apis": [
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-9-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-2-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-11-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-8-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-5-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-3-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-6-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-12-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-4-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-7-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-10-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDBBackup",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDBRestore",
          "version": "v1"
        }
      ],
      "provider": "Percona",
      "related_images": [
        {
          "digest": "sha256:e7122a90fe6469b17c65abb5c58449586f13e7837763b90df679d898b73fab4b",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:e7122a90fe6469b17c65abb5c58449586f13e7837763b90df679d898b73fab4b",
          "name": "mongod4.2"
        },
        {
          "digest": "sha256:c38a0366db82bc2429c2f1222e0156afdf55c7b82e33dd346c72ad4df787623d",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:c38a0366db82bc2429c2f1222e0156afdf55c7b82e33dd346c72ad4df787623d",
          "name": "mongod4.4"
        },
        {
          "digest": "sha256:d7e4c1ebdc661dafa5bf756b194a09ab71575c355221930f4a65161d976b1788",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:d7e4c1ebdc661dafa5bf756b194a09ab71575c355221930f4a65161d976b1788",
          "name": "mongod5.0"
        },
        {
          "digest": "sha256:9ccc1560fa9d5870e57ee847e39b5545e2e59ebe431b464798c546ff261d0de5",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:9ccc1560fa9d5870e57ee847e39b5545e2e59ebe431b464798c546ff261d0de5",
          "name": "backup"
        },
        {
          "digest": "sha256:de556410de32a49a8a6bc157536881e2baefc8549a1094d6c2c70242a3c792cb",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:de556410de32a49a8a6bc157536881e2baefc8549a1094d6c2c70242a3c792cb",
          "name": "pmm"
        },
        {
          "digest": "sha256:7137ee6ff918bd2366033f198f2919e7aa291ae3b76460e267896bf052251837",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:7137ee6ff918bd2366033f198f2919e7aa291ae3b76460e267896bf052251837",
          "name": "operator"
        },
        {
          "digest": "sha256:7137ee6ff918bd2366033f198f2919e7aa291ae3b76460e267896bf052251837",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:7137ee6ff918bd2366033f198f2919e7aa291ae3b76460e267896bf052251837",
          "name": "percona-server-mongodb-operator-7137ee6ff918bd2366033f198f2919e7aa291ae3b76460e267896bf052251837-annotation"
        },
        {
          "digest": "sha256:7137ee6ff918bd2366033f198f2919e7aa291ae3b76460e267896bf052251837",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:7137ee6ff918bd2366033f198f2919e7aa291ae3b76460e267896bf052251837",
          "name": "percona-server-mongodb-operator"
        },
        {
          "digest": "sha256:9ccc1560fa9d5870e57ee847e39b5545e2e59ebe431b464798c546ff261d0de5",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:9ccc1560fa9d5870e57ee847e39b5545e2e59ebe431b464798c546ff261d0de5",
          "name": "percona-server-mongodb-operator-containers-9ccc1560fa9d5870e57ee847e39b5545e2e59ebe431b464798c546ff261d0de5-annotation"
        },
        {
          "digest": "sha256:de556410de32a49a8a6bc157536881e2baefc8549a1094d6c2c70242a3c792cb",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:de556410de32a49a8a6bc157536881e2baefc8549a1094d6c2c70242a3c792cb",
          "name": "percona-server-mongodb-operator-containers-de556410de32a49a8a6bc157536881e2baefc8549a1094d6c2c70242a3c792cb-annotation"
        },
        {
          "digest": "sha256:d7e4c1ebdc661dafa5bf756b194a09ab71575c355221930f4a65161d976b1788",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:d7e4c1ebdc661dafa5bf756b194a09ab71575c355221930f4a65161d976b1788",
          "name": "percona-server-mongodb-operator-containers-d7e4c1ebdc661dafa5bf756b194a09ab71575c355221930f4a65161d976b1788-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.13.0",
      "version_original": "1.13.0"
    },
    {
      "_id": "63403231eba32fffe39b577a",
      "alm_examples": [
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDB",
          "metadata": {
            "finalizers": [
              "delete-psmdb-pods-in-order"
            ],
            "name": "my-cluster-name"
          },
          "spec": {
            "allowUnsafeConfigurations": false,
            "backup": {
              "enabled": true,
              "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:9ccc1560fa9d5870e57ee847e39b5545e2e59ebe431b464798c546ff261d0de5",
              "pitr": {
                "compressionLevel": 6,
                "compressionType": "gzip",
                "enabled": false
              },
              "serviceAccountName": "percona-server-mongodb-operator"
            },
            "crVersion": "1.13.0",
            "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:d7e4c1ebdc661dafa5bf756b194a09ab71575c355221930f4a65161d976b1788",
            "imagePullPolicy": "Always",
            "multiCluster": {
              "DNSSuffix": "svc.clusterset.local",
              "enabled": false
            },
            "pmm": {
              "enabled": false,
              "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:de556410de32a49a8a6bc157536881e2baefc8549a1094d6c2c70242a3c792cb",
              "serverHost": "monitoring-service"
            },
            "replsets": [
              {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "arbiter": {
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "enabled": false,
                  "size": 1
                },
                "expose": {
                  "enabled": false,
                  "exposeType": "ClusterIP"
                },
                "name": "rs0",
                "nonvoting": {
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "enabled": false,
                  "podDisruptionBudget": {
                    "maxUnavailable": 1
                  },
                  "resources": {
                    "limits": {
                      "cpu": "300m",
                      "memory": "0.5G"
                    },
                    "requests": {
                      "cpu": "300m",
                      "memory": "0.5G"
                    }
                  },
                  "size": 3,
                  "volumeSpec": {
                    "persistentVolumeClaim": {
                      "resources": {
                        "requests": {
                          "storage": "3Gi"
                        }
                      }
                    }
                  }
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3,
                "volumeSpec": {
                  "persistentVolumeClaim": {
                    "resources": {
                      "requests": {
                        "storage": "3Gi"
                      }
                    }
                  }
                }
              }
            ],
            "secrets": {
              "encryptionKey": "my-cluster-name-mongodb-encryption-key",
              "users": "my-cluster-name-secrets"
            },
            "sharding": {
              "configsvrReplSet": {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "expose": {
                  "enabled": false,
                  "exposeType": "ClusterIP"
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3,
                "volumeSpec": {
                  "persistentVolumeClaim": {
                    "resources": {
                      "requests": {
                        "storage": "3Gi"
                      }
                    }
                  }
                }
              },
              "enabled": true,
              "mongos": {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "expose": {
                  "exposeType": "ClusterIP"
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3
              }
            },
            "updateStrategy": "SmartUpdate",
            "upgradeOptions": {
              "apply": "disabled",
              "schedule": "0 2 * * *",
              "setFCV": false,
              "versionServiceEndpoint": "https://check.percona.com"
            }
          }
        },
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDBBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "clusterName": "my-cluster-name",
            "storageName": "s3-us-west"
          }
        },
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDBRestore",
          "metadata": {
            "name": "restore1"
          },
          "spec": {
            "backupName": "backup1",
            "clusterName": "my-cluster-name"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-bundle@sha256:e596f5055f117da6b7f7d9526861c835d50756a428e85479477e8123d0307297",
      "bundle_path_digest": "sha256:e596f5055f117da6b7f7d9526861c835d50756a428e85479477e8123d0307297",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-07T14:05:37.672000+00:00",
      "csv_description": "\n## Percona is Cloud Native\nThe Percona Distribution for MongoDB Kubernetes Operator automates the creation, modification, or deletion of items in your Percona Server for MongoDB environment. The Operator contains the necessary Kubernetes settings to maintain a consistent Percona Server for MongoDB instance modification, or deletion of items in your Percona Server for MongoDB environment. The Operator contains the necessary Kubernetes settings to maintain a consistent Percona Server for MongoDB instance.\n\nConsult the [documentation](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/index.html/) on the Percona Kubernetes Operator for Percona Server for MongoDB for complete details on capabilities and options.\n\n### Supported Features\n\n* **Scale Your Cluster** - change the `size` parameter to [add or remove members](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/scaling.html) of the replica set. Three is the minimum recommended size for a functioning replica set.\n\n* **Add Monitoring** - [Percona Monitoring and Management (PMM) can be easily deployed](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/monitoring.html) to monitor your Percona Server for MongoDB replica set(s). The recommended installation process uses Helm, the package manager for Kubernetes.\n\n* **Automate Your Backups** - [configure automatic backups](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/backups.html) to run on a scheduled basis or run an on-demand backup at any time. Backups are performed using Percona Backup for MongoDB (PBM) and can be stored on local PVs or in any S3-compatible cloud storage provider.\n\n### Common Configurations\n\n* **Set Member as Arbiter** - [Set up a replica set which contains an arbiter](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/arbiter.html), which participates in elections but does not store any data.  This reduces storage costs while helping maintain replica set integrity.\n\n* **Expose Members Outside K8S** - [by appropriately configuring the ServiceType](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/expose.html) you can expose replica set members outside of Kubernetes or provide statically assigned IP addresses.\n\n* **Utilize Local Storage Options** - [with support for Local Storage you can mount existing data directories](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/storage.html) into your replica set managed by Kubernetes or utilize high performance hardware for local storage rather than network storage for your database.\n\n### Before You Start\n\nAdd the PSMDB user `Secret` to Kubernetes. User information must be placed in the data section of the `secrets.yaml`\nfile with Base64-encoded logins and passwords for the user accounts.\n\nBelow is a sample `secrets.yaml` file for the correct formatting.\n\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: my-cluster-name-secrets\ntype: Opaque\ndata:\n  MONGODB_BACKUP_USER: YmFja3Vw\n  MONGODB_BACKUP_PASSWORD: YmFja3VwMTIzNDU2\n  MONGODB_CLUSTER_ADMIN_USER: Y2x1c3RlckFkbWlu\n  MONGODB_CLUSTER_ADMIN_PASSWORD: Y2x1c3RlckFkbWluMTIzNDU2\n  MONGODB_CLUSTER_MONITOR_USER: Y2x1c3Rlck1vbml0b3I=\n  MONGODB_CLUSTER_MONITOR_PASSWORD: Y2x1c3Rlck1vbml0b3IxMjM0NTY=\n  MONGODB_USER_ADMIN_USER: dXNlckFkbWlu\n  MONGODB_USER_ADMIN_PASSWORD: dXNlckFkbWluMTIzNDU2\n  PMM_SERVER_API_KEY: dXNlckFkbWluMTIzNDU2\n```\n### Release Highlights\n* Azure Kubernetes Service (AKS) is now officially supported platform, so developers and vendors of the solutions based on the Azure platform can take advantage of the official support from Percona or just use officially certified Percona Operator for MongoDB images\n* Starting from now, the Operator can be installed in multi-namespace (so-called \u201ccluster-wide\u201d) mode, when a single Operator can be given a list of namespaces in which to manage Percona Server for MongoDB clusters\n\n",
      "csv_display_name": "Percona Distribution for MongoDB Operator",
      "csv_metadata_description": "Percona Distribution for MongoDB Operator automates the creation, modification, or deletion of items in your Percona Server for MongoDB environment",
      "csv_name": "percona-server-mongodb-operator.v1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:55:07.275000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "percona-server-mongodb-operator-certified",
      "provided_apis": [
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-10-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-11-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-12-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-2-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-3-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-4-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-5-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-6-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-7-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-8-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-9-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDBBackup",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDBRestore",
          "version": "v1"
        }
      ],
      "provider": "Percona",
      "related_images": [
        {
          "digest": "sha256:e7122a90fe6469b17c65abb5c58449586f13e7837763b90df679d898b73fab4b",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:e7122a90fe6469b17c65abb5c58449586f13e7837763b90df679d898b73fab4b",
          "name": "mongod4.2"
        },
        {
          "digest": "sha256:c38a0366db82bc2429c2f1222e0156afdf55c7b82e33dd346c72ad4df787623d",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:c38a0366db82bc2429c2f1222e0156afdf55c7b82e33dd346c72ad4df787623d",
          "name": "mongod4.4"
        },
        {
          "digest": "sha256:d7e4c1ebdc661dafa5bf756b194a09ab71575c355221930f4a65161d976b1788",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:d7e4c1ebdc661dafa5bf756b194a09ab71575c355221930f4a65161d976b1788",
          "name": "mongod5.0"
        },
        {
          "digest": "sha256:9ccc1560fa9d5870e57ee847e39b5545e2e59ebe431b464798c546ff261d0de5",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:9ccc1560fa9d5870e57ee847e39b5545e2e59ebe431b464798c546ff261d0de5",
          "name": "backup"
        },
        {
          "digest": "sha256:de556410de32a49a8a6bc157536881e2baefc8549a1094d6c2c70242a3c792cb",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:de556410de32a49a8a6bc157536881e2baefc8549a1094d6c2c70242a3c792cb",
          "name": "pmm"
        },
        {
          "digest": "sha256:7137ee6ff918bd2366033f198f2919e7aa291ae3b76460e267896bf052251837",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:7137ee6ff918bd2366033f198f2919e7aa291ae3b76460e267896bf052251837",
          "name": "operator"
        },
        {
          "digest": "sha256:7137ee6ff918bd2366033f198f2919e7aa291ae3b76460e267896bf052251837",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:7137ee6ff918bd2366033f198f2919e7aa291ae3b76460e267896bf052251837",
          "name": "percona-server-mongodb-operator-7137ee6ff918bd2366033f198f2919e7aa291ae3b76460e267896bf052251837-annotation"
        },
        {
          "digest": "sha256:7137ee6ff918bd2366033f198f2919e7aa291ae3b76460e267896bf052251837",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:7137ee6ff918bd2366033f198f2919e7aa291ae3b76460e267896bf052251837",
          "name": "percona-server-mongodb-operator"
        },
        {
          "digest": "sha256:9ccc1560fa9d5870e57ee847e39b5545e2e59ebe431b464798c546ff261d0de5",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:9ccc1560fa9d5870e57ee847e39b5545e2e59ebe431b464798c546ff261d0de5",
          "name": "percona-server-mongodb-operator-containers-9ccc1560fa9d5870e57ee847e39b5545e2e59ebe431b464798c546ff261d0de5-annotation"
        },
        {
          "digest": "sha256:de556410de32a49a8a6bc157536881e2baefc8549a1094d6c2c70242a3c792cb",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:de556410de32a49a8a6bc157536881e2baefc8549a1094d6c2c70242a3c792cb",
          "name": "percona-server-mongodb-operator-containers-de556410de32a49a8a6bc157536881e2baefc8549a1094d6c2c70242a3c792cb-annotation"
        },
        {
          "digest": "sha256:d7e4c1ebdc661dafa5bf756b194a09ab71575c355221930f4a65161d976b1788",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:d7e4c1ebdc661dafa5bf756b194a09ab71575c355221930f4a65161d976b1788",
          "name": "percona-server-mongodb-operator-containers-d7e4c1ebdc661dafa5bf756b194a09ab71575c355221930f4a65161d976b1788-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.13.0",
      "version_original": "1.13.0"
    },
    {
      "_id": "634035aea13cf60c13cfdadd",
      "alm_examples": [
        {
          "api_version": "tools.opdev.io/v1",
          "kind": "DemoResource",
          "metadata": {
            "name": "demoresource-sample"
          },
          "spec": {
            "message": "Hello, World!"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/a60924148a9b77a2ff5f7b786/dajhdgsajhgsajhgsda@sha256:4636ffe9c8cc757db2a81f9fe702a736f636ab97071d602bb2ca8d3f8f2620ae",
      "bundle_path_digest": "sha256:4636ffe9c8cc757db2a81f9fe702a736f636ab97071d602bb2ca8d3f8f2620ae",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-07T14:20:30.495000+00:00",
      "csv_description": "A test-revert-changes-prod-obi with a minimal reconciliation function, for testing basic operator installation and validation workflows.",
      "csv_display_name": "test-revert-changes-prod-obi",
      "csv_metadata_description": "",
      "csv_name": "test-revert-changes-prod-obi.0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:40:06.317000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "test-revert-changes-prod-obi",
      "provided_apis": [
        {
          "group": "tools.opdev.io",
          "kind": "DemoResource",
          "version": "v1"
        }
      ],
      "provider": "Red Hat Ecosystem Engineering",
      "related_images": [
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "image": "quay.io/opdev/simple-demo-operator@sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "0.0.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "63403778d67be106adce13bf",
      "alm_examples": [
        {
          "api_version": "tools.opdev.io/v1",
          "kind": "DemoResource",
          "metadata": {
            "name": "demoresource-sample"
          },
          "spec": {
            "message": "Hello, World!"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/a60924148a9b77a2ff5f7b786/dajhdgsajhgsajhgsda@sha256:4636ffe9c8cc757db2a81f9fe702a736f636ab97071d602bb2ca8d3f8f2620ae",
      "bundle_path_digest": "sha256:4636ffe9c8cc757db2a81f9fe702a736f636ab97071d602bb2ca8d3f8f2620ae",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-07T14:28:08.175000+00:00",
      "csv_description": "A test-revert-changes-prod-obi with a minimal reconciliation function, for testing basic operator installation and validation workflows.",
      "csv_display_name": "test-revert-changes-prod-obi",
      "csv_metadata_description": "",
      "csv_name": "test-revert-changes-prod-obi.0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:33:07.320000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "test-revert-changes-prod-obi",
      "provided_apis": [
        {
          "group": "tools.opdev.io",
          "kind": "DemoResource",
          "plural": "demoresources",
          "version": "v1"
        }
      ],
      "provider": "Red Hat Ecosystem Engineering",
      "related_images": [
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "image": "quay.io/opdev/simple-demo-operator@sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "0.0.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "63403869a13cf60c13cfdbf5",
      "alm_examples": [
        {
          "api_version": "tools.opdev.io/v1",
          "kind": "DemoResource",
          "metadata": {
            "name": "demoresource-sample"
          },
          "spec": {
            "message": "Hello, World!"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/a60924148a9b77a2ff5f7b786/dajhdgsajhgsajhgsda@sha256:4636ffe9c8cc757db2a81f9fe702a736f636ab97071d602bb2ca8d3f8f2620ae",
      "bundle_path_digest": "sha256:4636ffe9c8cc757db2a81f9fe702a736f636ab97071d602bb2ca8d3f8f2620ae",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-07T14:32:09.933000+00:00",
      "csv_description": "A test-revert-changes-prod-obi with a minimal reconciliation function, for testing basic operator installation and validation workflows.",
      "csv_display_name": "test-revert-changes-prod-obi",
      "csv_metadata_description": "",
      "csv_name": "test-revert-changes-prod-obi.0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:33:27.518000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "test-revert-changes-prod-obi",
      "provided_apis": [
        {
          "group": "tools.opdev.io",
          "kind": "DemoResource",
          "plural": "demoresources",
          "version": "v1"
        }
      ],
      "provider": "Red Hat Ecosystem Engineering",
      "related_images": [
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "image": "quay.io/opdev/simple-demo-operator@sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "0.0.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "6340397abf62483057c9b658",
      "alm_examples": [
        {
          "api_version": "tools.opdev.io/v1",
          "kind": "DemoResource",
          "metadata": {
            "name": "demoresource-sample"
          },
          "spec": {
            "message": "Hello, World!"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/a60924148a9b77a2ff5f7b786/dajhdgsajhgsajhgsda@sha256:4636ffe9c8cc757db2a81f9fe702a736f636ab97071d602bb2ca8d3f8f2620ae",
      "bundle_path_digest": "sha256:4636ffe9c8cc757db2a81f9fe702a736f636ab97071d602bb2ca8d3f8f2620ae",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-07T14:36:42.852000+00:00",
      "csv_description": "A test-revert-changes-prod-obi with a minimal reconciliation function, for testing basic operator installation and validation workflows.",
      "csv_display_name": "test-revert-changes-prod-obi",
      "csv_metadata_description": "",
      "csv_name": "test-revert-changes-prod-obi.0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T12:03:57.731000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "test-revert-changes-prod-obi",
      "provided_apis": [
        {
          "group": "tools.opdev.io",
          "kind": "DemoResource",
          "plural": "demoresources",
          "version": "v1"
        }
      ],
      "provider": "Red Hat Ecosystem Engineering",
      "related_images": [
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "image": "quay.io/opdev/simple-demo-operator@sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "0.0.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "634053795e9aa29cb93651c1",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:7737c153d0c3ce8480b7bfeef123700196f73479f997099e5432bfe241880ef4",
      "bundle_path_digest": "sha256:7737c153d0c3ce8480b7bfeef123700196f73479f997099e5432bfe241880ef4",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.15",
      "creation_date": "2022-10-07T16:27:37.816000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:02:37.500000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "name": "cloud-native-postgresql-15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066-annotation"
        },
        {
          "digest": "sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.15.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.15.5",
      "version_original": "1.15.5"
    },
    {
      "_id": "63405492bf62483057c9c675",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:7737c153d0c3ce8480b7bfeef123700196f73479f997099e5432bfe241880ef4",
      "bundle_path_digest": "sha256:7737c153d0c3ce8480b7bfeef123700196f73479f997099e5432bfe241880ef4",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.15",
      "creation_date": "2022-10-07T16:32:18.549000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T10:58:31.239000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "name": "cloud-native-postgresql-15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066-annotation"
        },
        {
          "digest": "sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.15.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.15.5",
      "version_original": "1.15.5"
    },
    {
      "_id": "634058c13be061d37b27fbff",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:7737c153d0c3ce8480b7bfeef123700196f73479f997099e5432bfe241880ef4",
      "bundle_path_digest": "sha256:7737c153d0c3ce8480b7bfeef123700196f73479f997099e5432bfe241880ef4",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.15",
      "creation_date": "2022-10-07T16:50:09.228000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:01:17.515000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "name": "cloud-native-postgresql-15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066-annotation"
        },
        {
          "digest": "sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.15.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.15.5",
      "version_original": "1.15.5"
    },
    {
      "_id": "634059d63be061d37b27fca8",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:7737c153d0c3ce8480b7bfeef123700196f73479f997099e5432bfe241880ef4",
      "bundle_path_digest": "sha256:7737c153d0c3ce8480b7bfeef123700196f73479f997099e5432bfe241880ef4",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.15",
      "creation_date": "2022-10-07T16:54:46.207000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T12:05:53.380000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "name": "cloud-native-postgresql-15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066-annotation"
        },
        {
          "digest": "sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.15.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.15.5",
      "version_original": "1.15.5"
    },
    {
      "_id": "63405ac95e9aa29cb9365686",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:7737c153d0c3ce8480b7bfeef123700196f73479f997099e5432bfe241880ef4",
      "bundle_path_digest": "sha256:7737c153d0c3ce8480b7bfeef123700196f73479f997099e5432bfe241880ef4",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.15",
      "creation_date": "2022-10-07T16:58:49.568000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:47:58.572000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "name": "cloud-native-postgresql-15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066-annotation"
        },
        {
          "digest": "sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:15956f64258fbaa09f6b234f47312f9692baf15880cb3e235725c3139b3cf066",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.15.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.15.5",
      "version_original": "1.15.5"
    },
    {
      "_id": "634066e2eba32fffe39b76bb",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:3abb3fdfe9370f55bc24a185d9c1b2f32d72c6bfacc4fbf148521164c6f3d47b",
      "bundle_path_digest": "sha256:3abb3fdfe9370f55bc24a185d9c1b2f32d72c6bfacc4fbf148521164c6f3d47b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.16",
      "creation_date": "2022-10-07T17:50:26.093000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.16.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:30:08.017000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "name": "cloud-native-postgresql-13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f-annotation"
        },
        {
          "digest": "sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.16.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.16.3",
      "version_original": "1.16.3"
    },
    {
      "_id": "63406a4f9faf0354ee99f615",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:3abb3fdfe9370f55bc24a185d9c1b2f32d72c6bfacc4fbf148521164c6f3d47b",
      "bundle_path_digest": "sha256:3abb3fdfe9370f55bc24a185d9c1b2f32d72c6bfacc4fbf148521164c6f3d47b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.16",
      "creation_date": "2022-10-07T18:05:03.316000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.16.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:02:49.287000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "name": "cloud-native-postgresql-13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f-annotation"
        },
        {
          "digest": "sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.16.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.16.3",
      "version_original": "1.16.3"
    },
    {
      "_id": "63406b596804229d44d55cbc",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:3abb3fdfe9370f55bc24a185d9c1b2f32d72c6bfacc4fbf148521164c6f3d47b",
      "bundle_path_digest": "sha256:3abb3fdfe9370f55bc24a185d9c1b2f32d72c6bfacc4fbf148521164c6f3d47b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.16",
      "creation_date": "2022-10-07T18:09:29.038000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.16.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T10:58:51.517000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "name": "cloud-native-postgresql-13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f-annotation"
        },
        {
          "digest": "sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.16.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.16.3",
      "version_original": "1.16.3"
    },
    {
      "_id": "634070b26804229d44d55fcd",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:3abb3fdfe9370f55bc24a185d9c1b2f32d72c6bfacc4fbf148521164c6f3d47b",
      "bundle_path_digest": "sha256:3abb3fdfe9370f55bc24a185d9c1b2f32d72c6bfacc4fbf148521164c6f3d47b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.16",
      "creation_date": "2022-10-07T18:32:18.932000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.16.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T10:52:47.030000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "name": "cloud-native-postgresql-13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f-annotation"
        },
        {
          "digest": "sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.16.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.16.3",
      "version_original": "1.16.3"
    },
    {
      "_id": "634071e5eba32fffe39b7cc9",
      "alm_examples": [
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "my-replica-set"
          },
          "spec": {
            "credentials": "my-credentials",
            "members": 3,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "sample-sharded-cluster"
          },
          "spec": {
            "configServerCount": 3,
            "credentials": "my-credentials",
            "mongodsPerShardCount": 3,
            "mongosCount": 2,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "shardCount": 1,
            "type": "ShardedCluster",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBMulti",
          "metadata": {
            "name": "multi-replica-set"
          },
          "spec": {
            "clusterSpecList": {
              "clusterSpecs": [
                {
                  "clusterName": "e2e.cluster1.mongokubernetes.com",
                  "members": 2
                },
                {
                  "clusterName": "e2e.cluster2.mongokubernetes.com",
                  "members": 1
                },
                {
                  "clusterName": "e2e.cluster3.mongokubernetes.com",
                  "members": 2
                }
              ]
            },
            "credentials": "my-credentials",
            "duplicateServiceObjects": false,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": false,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBOpsManager",
          "metadata": {
            "name": "ops-manager"
          },
          "spec": {
            "adminCredentials": "ops-manager-admin",
            "applicationDatabase": {
              "members": 3,
              "podSpec": {
                "cpu": 1
              }
            },
            "configuration": {
              "mms.fromEmailAddr": "admin@thecompany.com"
            },
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "version": "6.0.3"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBUser",
          "metadata": {
            "name": "my-replica-set-x509-user"
          },
          "spec": {
            "db": "$external",
            "mongodbResourceRef": {
              "name": "my-replica-set"
            },
            "roles": [
              {
                "db": "admin",
                "name": "dbOwner"
              }
            ],
            "username": "CN=my-replica-set-x509-user,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:f744047cce1c83d76d7ed47e0034ba666188117ec92ddd417a296f3b41a63f08",
      "bundle_path_digest": "sha256:f744047cce1c83d76d7ed47e0034ba666188117ec92ddd417a296f3b41a63f08",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-07T18:37:25.892000+00:00",
      "csv_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\n## Before You Start\n\nTo start using the operator you''ll need an account in MongoDB Cloud Manager or\na MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-operator-credentials/#procedure)\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-project-using-configmap/)\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `opsManager` or `cloudManager` - Enter the name of the ConfigMap containing project information\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n* `type` - Enter MongoDB Deployment Types (\"Standalone\", \"ReplicaSet\", \"ShardedCluster\"\n\n## Supported MongoDB Deployment Types ##\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Requirements for deploying MongoDB OpsManager\n\n* In order to deploy resources of type MongoDB OpsManager, you will need to\ncreate a secret containing the [credentials](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/plan-om-resource/#om-rsrc-prereqs)\nfor the Global Owner user\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you\nshould create your certificates.  or you can leave the operator to create all\nthe certificates for you. The operator ability to create certs is been\ndeprecated due to Kubernetes API changes.\n\nFor more information, please read the official MongoDB\nKubernetes Operator  [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
      "csv_display_name": "MongoDB Enterprise Operator",
      "csv_metadata_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
      "csv_name": "mongodb-enterprise.v1.17.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T12:24:17.989000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDB",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBMulti",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBOpsManager",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBUser",
          "version": "v1"
        }
      ],
      "provider": "MongoDB, Inc",
      "related_images": [
        {
          "digest": "sha256:943185414fb86b643c5b5f2c85fa890d509e0f352bb9de492ed927a493a5332e",
          "image": "quay.io/mongodb/mongodb-enterprise-init-ops-manager-ubi@sha256:943185414fb86b643c5b5f2c85fa890d509e0f352bb9de492ed927a493a5332e",
          "name": "init_ops_manager_image_repository_1_0_9"
        },
        {
          "digest": "sha256:a4cadf209ab87eb7d121ccd8b1503fa5d88be8866b5c3cb7897d14c36869abf6",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:a4cadf209ab87eb7d121ccd8b1503fa5d88be8866b5c3cb7897d14c36869abf6",
          "name": "agent_image_11_12_0_7388_1"
        },
        {
          "digest": "sha256:5cd3ed1053dae64c2cc7e13718cb93f899deffec7116ee7115cf92fa8f42f2e5",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:5cd3ed1053dae64c2cc7e13718cb93f899deffec7116ee7115cf92fa8f42f2e5",
          "name": "mongodb_image_4_2_6_ent"
        },
        {
          "digest": "sha256:0b0b86ae1650100278491f9eb7f8626cd8914f9c9570d0ed3946c775236e8e0d",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:0b0b86ae1650100278491f9eb7f8626cd8914f9c9570d0ed3946c775236e8e0d",
          "name": "mongodb_image_4_4_0_ent"
        },
        {
          "digest": "sha256:322bdd4be1278cd393765332a2acc8e2610f248999be3b064695b41e0ad7fa31",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:322bdd4be1278cd393765332a2acc8e2610f248999be3b064695b41e0ad7fa31",
          "name": "ops-manager-image-repository-5-0-1"
        },
        {
          "digest": "sha256:1c9c085196cafcfec47b7fe0d37c77e32914605d6fadda2e2138030e6646e422",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:1c9c085196cafcfec47b7fe0d37c77e32914605d6fadda2e2138030e6646e422",
          "name": "ops-manager-image-repository-5-0-8"
        },
        {
          "digest": "sha256:2c2e98c4c87faece21154178cab15de8fe9e422f7eb575ddf7fed2b5ba3b1870",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:2c2e98c4c87faece21154178cab15de8fe9e422f7eb575ddf7fed2b5ba3b1870",
          "name": "mongodb_image_4_4_4_ent"
        },
        {
          "digest": "sha256:a10baf02012eb4ce9b5c1bf8a7eac2e219c64a645d20aefc01241c6da332a18c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:a10baf02012eb4ce9b5c1bf8a7eac2e219c64a645d20aefc01241c6da332a18c",
          "name": "ops-manager-image-repository-5-0-6"
        },
        {
          "digest": "sha256:485ae0a64d9648a4085b52d1cd5b9b3bb51df9337e30a1c3d7cc29d2eea1f1d9",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:485ae0a64d9648a4085b52d1cd5b9b3bb51df9337e30a1c3d7cc29d2eea1f1d9",
          "name": "ops_manager_image_repository_5_0_4"
        },
        {
          "digest": "sha256:dc9ae18097d195f3849f981410a1c3d6d761528a15c31b954f0523144800305a",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:dc9ae18097d195f3849f981410a1c3d6d761528a15c31b954f0523144800305a",
          "name": "mongodb-image-4-2-11-ent"
        },
        {
          "digest": "sha256:4b3c346acbc1743e70e02f5346ace810ec8b133ae3c920f7266aee360e6fca87",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:4b3c346acbc1743e70e02f5346ace810ec8b133ae3c920f7266aee360e6fca87",
          "name": "mongodb-image-5-0-1-ent"
        },
        {
          "digest": "sha256:f8977591e64c942e513f3672f6841a03bc1fc6c39a9a0f47785058c3aae4c360",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:f8977591e64c942e513f3672f6841a03bc1fc6c39a9a0f47785058c3aae4c360",
          "name": "ops_manager_image_repository_5_0_0"
        },
        {
          "digest": "sha256:79441d3bddb5d2f6c6be64bcabf7092d154aa3407e057c7f159de0877ae987a0",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:79441d3bddb5d2f6c6be64bcabf7092d154aa3407e057c7f159de0877ae987a0",
          "name": "ops_manager_image_repository_5_0_5"
        },
        {
          "digest": "sha256:554ae3aab672aed1f307f3472d074df901c20461ed89899f6dc30706ec93d400",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:554ae3aab672aed1f307f3472d074df901c20461ed89899f6dc30706ec93d400",
          "name": "ops_manager_image_repository_5_0_12"
        },
        {
          "digest": "sha256:eab363d30db05c6af7bde539b4c550e60c54bdab7403288a8b00a246089d3108",
          "image": "quay.io/mongodb/mongodb-enterprise-database-ubi@sha256:eab363d30db05c6af7bde539b4c550e60c54bdab7403288a8b00a246089d3108",
          "name": "mongodb-enterprise-database-image-2-0-2"
        },
        {
          "digest": "sha256:554ae3aab672aed1f307f3472d074df901c20461ed89899f6dc30706ec93d400",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:554ae3aab672aed1f307f3472d074df901c20461ed89899f6dc30706ec93d400",
          "name": "ops-manager-image-repository-5-0-12"
        },
        {
          "digest": "sha256:7ffc31038b498ff3b884d59c8640d916b1d038c7e08e62167521287c698e1549",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:7ffc31038b498ff3b884d59c8640d916b1d038c7e08e62167521287c698e1549",
          "name": "ops-manager-image-repository-5-0-14"
        },
        {
          "digest": "sha256:71e35d3972e5e49f31ca74f111e8ff6cf804d09d9a21303f6ad4ac43b0628e75",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:71e35d3972e5e49f31ca74f111e8ff6cf804d09d9a21303f6ad4ac43b0628e75",
          "name": "ops-manager-image-repository-5-0-15"
        },
        {
          "digest": "sha256:a10baf02012eb4ce9b5c1bf8a7eac2e219c64a645d20aefc01241c6da332a18c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:a10baf02012eb4ce9b5c1bf8a7eac2e219c64a645d20aefc01241c6da332a18c",
          "name": "ops_manager_image_repository_5_0_6"
        },
        {
          "digest": "sha256:943185414fb86b643c5b5f2c85fa890d509e0f352bb9de492ed927a493a5332e",
          "image": "quay.io/mongodb/mongodb-enterprise-init-ops-manager-ubi@sha256:943185414fb86b643c5b5f2c85fa890d509e0f352bb9de492ed927a493a5332e",
          "name": "init-ops-manager-image-repository-1-0-9"
        },
        {
          "digest": "sha256:584ff388983f963eba8033d439e7f9efbcfa0ed3c84b5843db6bf32d107f0b65",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:584ff388983f963eba8033d439e7f9efbcfa0ed3c84b5843db6bf32d107f0b65",
          "name": "agent-image-12-0-4-7554-1"
        },
        {
          "digest": "sha256:b41059bfd5bc1ced5a1b6c405842473bf2cac091b6bc51b04d55d02b17dd6d7c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:b41059bfd5bc1ced5a1b6c405842473bf2cac091b6bc51b04d55d02b17dd6d7c",
          "name": "ops-manager-image-repository-5-0-9"
        },
        {
          "digest": "sha256:e0530f7856b5038a6081532d2e04ca638de89404976be697620db484364a2461",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e0530f7856b5038a6081532d2e04ca638de89404976be697620db484364a2461",
          "name": "ops-manager-image-repository-6-0-3"
        },
        {
          "digest": "sha256:7ffc31038b498ff3b884d59c8640d916b1d038c7e08e62167521287c698e1549",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:7ffc31038b498ff3b884d59c8640d916b1d038c7e08e62167521287c698e1549",
          "name": "ops_manager_image_repository_5_0_14"
        },
        {
          "digest": "sha256:236e60a18f90f72ef26d20471c28265f244560e22b09779a726f809f12d55ff2",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:236e60a18f90f72ef26d20471c28265f244560e22b09779a726f809f12d55ff2",
          "name": "ops_manager_image_repository_6_0_2"
        },
        {
          "digest": "sha256:9a8416762e874607278f9ae64af1b01d014031d91fc5aec3bb025d846cbe7218",
          "image": "quay.io/mongodb/mongodb-enterprise-init-appdb-ubi@sha256:9a8416762e874607278f9ae64af1b01d014031d91fc5aec3bb025d846cbe7218",
          "name": "init-appdb-image-repository-1-0-12"
        },
        {
          "digest": "sha256:af7dd4b4496ee7714d64596fa6d2e4d7ccc0084c8b7f4efade1ffa344756729c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:af7dd4b4496ee7714d64596fa6d2e4d7ccc0084c8b7f4efade1ffa344756729c",
          "name": "ops-manager-image-repository-5-0-2"
        },
        {
          "digest": "sha256:0b0b86ae1650100278491f9eb7f8626cd8914f9c9570d0ed3946c775236e8e0d",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:0b0b86ae1650100278491f9eb7f8626cd8914f9c9570d0ed3946c775236e8e0d",
          "name": "mongodb-image-4-4-0-ent"
        },
        {
          "digest": "sha256:14362d2593085a56eb092ebfbed7edf78c8e2d654e6b195dd67dccacee3f8464",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:14362d2593085a56eb092ebfbed7edf78c8e2d654e6b195dd67dccacee3f8464",
          "name": "mongodb-image-5-0-5-ent"
        },
        {
          "digest": "sha256:e87a59f4f597b1bed408bd1fe0f0816e1037656fae3efd522c497fff4bc8212f",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e87a59f4f597b1bed408bd1fe0f0816e1037656fae3efd522c497fff4bc8212f",
          "name": "ops_manager_image_repository_6_0_0"
        },
        {
          "digest": "sha256:79441d3bddb5d2f6c6be64bcabf7092d154aa3407e057c7f159de0877ae987a0",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:79441d3bddb5d2f6c6be64bcabf7092d154aa3407e057c7f159de0877ae987a0",
          "name": "ops-manager-image-repository-5-0-5"
        },
        {
          "digest": "sha256:c7c3856813c5fb231d8118f3848b3f30974ea0b675a3ce395db0b75cfc348d12",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:c7c3856813c5fb231d8118f3848b3f30974ea0b675a3ce395db0b75cfc348d12",
          "name": "ops-manager-image-repository-5-0-13"
        },
        {
          "digest": "sha256:ed8a16becb323b2e4a79b4335ece0208fe24526a2e59b3cb487017f9a517fda9",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:ed8a16becb323b2e4a79b4335ece0208fe24526a2e59b3cb487017f9a517fda9",
          "name": "mongodb-image-4-2-8-ent"
        },
        {
          "digest": "sha256:1c9c085196cafcfec47b7fe0d37c77e32914605d6fadda2e2138030e6646e422",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:1c9c085196cafcfec47b7fe0d37c77e32914605d6fadda2e2138030e6646e422",
          "name": "ops_manager_image_repository_5_0_8"
        },
        {
          "digest": "sha256:e69c9e8791b9b78937cb3205ff41e77472ef51b6e6752f3ee3c48c532a765fb7",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e69c9e8791b9b78937cb3205ff41e77472ef51b6e6752f3ee3c48c532a765fb7",
          "name": "ops_manager_image_repository_6_0_1"
        },
        {
          "digest": "sha256:e87a59f4f597b1bed408bd1fe0f0816e1037656fae3efd522c497fff4bc8212f",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e87a59f4f597b1bed408bd1fe0f0816e1037656fae3efd522c497fff4bc8212f",
          "name": "ops-manager-image-repository-6-0-0"
        },
        {
          "digest": "sha256:5cd3ed1053dae64c2cc7e13718cb93f899deffec7116ee7115cf92fa8f42f2e5",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:5cd3ed1053dae64c2cc7e13718cb93f899deffec7116ee7115cf92fa8f42f2e5",
          "name": "mongodb-image-4-2-6-ent"
        },
        {
          "digest": "sha256:236e60a18f90f72ef26d20471c28265f244560e22b09779a726f809f12d55ff2",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:236e60a18f90f72ef26d20471c28265f244560e22b09779a726f809f12d55ff2",
          "name": "ops-manager-image-repository-6-0-2"
        },
        {
          "digest": "sha256:2c2e98c4c87faece21154178cab15de8fe9e422f7eb575ddf7fed2b5ba3b1870",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:2c2e98c4c87faece21154178cab15de8fe9e422f7eb575ddf7fed2b5ba3b1870",
          "name": "mongodb-image-4-4-4-ent"
        },
        {
          "digest": "sha256:584ff388983f963eba8033d439e7f9efbcfa0ed3c84b5843db6bf32d107f0b65",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:584ff388983f963eba8033d439e7f9efbcfa0ed3c84b5843db6bf32d107f0b65",
          "name": "agent_image_12_0_4_7554_1"
        },
        {
          "digest": "sha256:a4cadf209ab87eb7d121ccd8b1503fa5d88be8866b5c3cb7897d14c36869abf6",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:a4cadf209ab87eb7d121ccd8b1503fa5d88be8866b5c3cb7897d14c36869abf6",
          "name": "agent-image-11-12-0-7388-1"
        },
        {
          "digest": "sha256:e69c9e8791b9b78937cb3205ff41e77472ef51b6e6752f3ee3c48c532a765fb7",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e69c9e8791b9b78937cb3205ff41e77472ef51b6e6752f3ee3c48c532a765fb7",
          "name": "ops-manager-image-repository-6-0-1"
        },
        {
          "digest": "sha256:208da2e5c879da7578a9c04dad342a2e1d0282cf9d3c79effa4f1ae036b6873a",
          "image": "quay.io/mongodb/mongodb-enterprise-operator-ubi@sha256:208da2e5c879da7578a9c04dad342a2e1d0282cf9d3c79effa4f1ae036b6873a",
          "name": "mongodb-enterprise-operator"
        },
        {
          "digest": "sha256:71e35d3972e5e49f31ca74f111e8ff6cf804d09d9a21303f6ad4ac43b0628e75",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:71e35d3972e5e49f31ca74f111e8ff6cf804d09d9a21303f6ad4ac43b0628e75",
          "name": "ops_manager_image_repository_5_0_15"
        },
        {
          "digest": "sha256:dc9ae18097d195f3849f981410a1c3d6d761528a15c31b954f0523144800305a",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:dc9ae18097d195f3849f981410a1c3d6d761528a15c31b954f0523144800305a",
          "name": "mongodb_image_4_2_11_ent"
        },
        {
          "digest": "sha256:9a8416762e874607278f9ae64af1b01d014031d91fc5aec3bb025d846cbe7218",
          "image": "quay.io/mongodb/mongodb-enterprise-init-appdb-ubi@sha256:9a8416762e874607278f9ae64af1b01d014031d91fc5aec3bb025d846cbe7218",
          "name": "init_appdb_image_repository_1_0_12"
        },
        {
          "digest": "sha256:af7dd4b4496ee7714d64596fa6d2e4d7ccc0084c8b7f4efade1ffa344756729c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:af7dd4b4496ee7714d64596fa6d2e4d7ccc0084c8b7f4efade1ffa344756729c",
          "name": "ops_manager_image_repository_5_0_2"
        },
        {
          "digest": "sha256:c7c3856813c5fb231d8118f3848b3f30974ea0b675a3ce395db0b75cfc348d12",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:c7c3856813c5fb231d8118f3848b3f30974ea0b675a3ce395db0b75cfc348d12",
          "name": "ops_manager_image_repository_5_0_13"
        },
        {
          "digest": "sha256:e0530f7856b5038a6081532d2e04ca638de89404976be697620db484364a2461",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e0530f7856b5038a6081532d2e04ca638de89404976be697620db484364a2461",
          "name": "ops_manager_image_repository_6_0_3"
        },
        {
          "digest": "sha256:14362d2593085a56eb092ebfbed7edf78c8e2d654e6b195dd67dccacee3f8464",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:14362d2593085a56eb092ebfbed7edf78c8e2d654e6b195dd67dccacee3f8464",
          "name": "mongodb_image_5_0_5_ent"
        },
        {
          "digest": "sha256:c171d694178daeac720c69da0ab8ac5d1311ac719ef07ea4fa095f07ef9772b0",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:c171d694178daeac720c69da0ab8ac5d1311ac719ef07ea4fa095f07ef9772b0",
          "name": "ops-manager-image-repository-5-0-11"
        },
        {
          "digest": "sha256:b41059bfd5bc1ced5a1b6c405842473bf2cac091b6bc51b04d55d02b17dd6d7c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:b41059bfd5bc1ced5a1b6c405842473bf2cac091b6bc51b04d55d02b17dd6d7c",
          "name": "ops_manager_image_repository_5_0_9"
        },
        {
          "digest": "sha256:ee2c2914fb6c9719888ee7a13b42577206f2a634d4a82eacfefc8ff6a325fba8",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:ee2c2914fb6c9719888ee7a13b42577206f2a634d4a82eacfefc8ff6a325fba8",
          "name": "ops_manager_image_repository_5_0_10"
        },
        {
          "digest": "sha256:ed8a16becb323b2e4a79b4335ece0208fe24526a2e59b3cb487017f9a517fda9",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:ed8a16becb323b2e4a79b4335ece0208fe24526a2e59b3cb487017f9a517fda9",
          "name": "mongodb_image_4_2_8_ent"
        },
        {
          "digest": "sha256:ee2c2914fb6c9719888ee7a13b42577206f2a634d4a82eacfefc8ff6a325fba8",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:ee2c2914fb6c9719888ee7a13b42577206f2a634d4a82eacfefc8ff6a325fba8",
          "name": "ops-manager-image-repository-5-0-10"
        },
        {
          "digest": "sha256:7b9a286124784a646a952a8d3a3cd47481fee838a649f49506c08d5dc3ce487d",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:7b9a286124784a646a952a8d3a3cd47481fee838a649f49506c08d5dc3ce487d",
          "name": "ops_manager_image_repository_5_0_3"
        },
        {
          "digest": "sha256:7b9a286124784a646a952a8d3a3cd47481fee838a649f49506c08d5dc3ce487d",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:7b9a286124784a646a952a8d3a3cd47481fee838a649f49506c08d5dc3ce487d",
          "name": "ops-manager-image-repository-5-0-3"
        },
        {
          "digest": "sha256:1f0d83b1730ca3afbff504ca1439b1c66b1f344b32aed6e337a36c912a631469",
          "image": "quay.io/mongodb/mongodb-enterprise-init-database-ubi@sha256:1f0d83b1730ca3afbff504ca1439b1c66b1f344b32aed6e337a36c912a631469",
          "name": "init_database_image_repository_1_0_12"
        },
        {
          "digest": "sha256:4b3c346acbc1743e70e02f5346ace810ec8b133ae3c920f7266aee360e6fca87",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:4b3c346acbc1743e70e02f5346ace810ec8b133ae3c920f7266aee360e6fca87",
          "name": "mongodb_image_5_0_1_ent"
        },
        {
          "digest": "sha256:bbe8b314b8ddc1f534e57ecc05d4c36b2c00c6fb1736a48be1b3aee216a54fce",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:bbe8b314b8ddc1f534e57ecc05d4c36b2c00c6fb1736a48be1b3aee216a54fce",
          "name": "agent-image-11-0-5-6963-1"
        },
        {
          "digest": "sha256:c171d694178daeac720c69da0ab8ac5d1311ac719ef07ea4fa095f07ef9772b0",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:c171d694178daeac720c69da0ab8ac5d1311ac719ef07ea4fa095f07ef9772b0",
          "name": "ops_manager_image_repository_5_0_11"
        },
        {
          "digest": "sha256:8eff2e05a9abb07dc75cf90450317bc45011b0718f25afaa990e896be96f97a8",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:8eff2e05a9abb07dc75cf90450317bc45011b0718f25afaa990e896be96f97a8",
          "name": "mongodb-image-4-2-2-ent"
        },
        {
          "digest": "sha256:bbe8b314b8ddc1f534e57ecc05d4c36b2c00c6fb1736a48be1b3aee216a54fce",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:bbe8b314b8ddc1f534e57ecc05d4c36b2c00c6fb1736a48be1b3aee216a54fce",
          "name": "agent_image_11_0_5_6963_1"
        },
        {
          "digest": "sha256:322bdd4be1278cd393765332a2acc8e2610f248999be3b064695b41e0ad7fa31",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:322bdd4be1278cd393765332a2acc8e2610f248999be3b064695b41e0ad7fa31",
          "name": "ops_manager_image_repository_5_0_1"
        },
        {
          "digest": "sha256:8eff2e05a9abb07dc75cf90450317bc45011b0718f25afaa990e896be96f97a8",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:8eff2e05a9abb07dc75cf90450317bc45011b0718f25afaa990e896be96f97a8",
          "name": "mongodb_image_4_2_2_ent"
        },
        {
          "digest": "sha256:1f0d83b1730ca3afbff504ca1439b1c66b1f344b32aed6e337a36c912a631469",
          "image": "quay.io/mongodb/mongodb-enterprise-init-database-ubi@sha256:1f0d83b1730ca3afbff504ca1439b1c66b1f344b32aed6e337a36c912a631469",
          "name": "init-database-image-repository-1-0-12"
        },
        {
          "digest": "sha256:0bffc1901c56d00afe853911ddeb5ffef22f006d428f14fdd2428289c87f4eda",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:0bffc1901c56d00afe853911ddeb5ffef22f006d428f14fdd2428289c87f4eda",
          "name": "ops-manager-image-repository-5-0-7"
        },
        {
          "digest": "sha256:4409ff1c1e0fc9bb09238051f099c955878bdf476cc9419ee2c947f20dd97ff4",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:4409ff1c1e0fc9bb09238051f099c955878bdf476cc9419ee2c947f20dd97ff4",
          "name": "mongodb-image-4-4-11-ent"
        },
        {
          "digest": "sha256:eab363d30db05c6af7bde539b4c550e60c54bdab7403288a8b00a246089d3108",
          "image": "quay.io/mongodb/mongodb-enterprise-database-ubi@sha256:eab363d30db05c6af7bde539b4c550e60c54bdab7403288a8b00a246089d3108",
          "name": "mongodb_enterprise_database_image_2_0_2"
        },
        {
          "digest": "sha256:0bffc1901c56d00afe853911ddeb5ffef22f006d428f14fdd2428289c87f4eda",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:0bffc1901c56d00afe853911ddeb5ffef22f006d428f14fdd2428289c87f4eda",
          "name": "ops_manager_image_repository_5_0_7"
        },
        {
          "digest": "sha256:4409ff1c1e0fc9bb09238051f099c955878bdf476cc9419ee2c947f20dd97ff4",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:4409ff1c1e0fc9bb09238051f099c955878bdf476cc9419ee2c947f20dd97ff4",
          "name": "mongodb_image_4_4_11_ent"
        },
        {
          "digest": "sha256:f8977591e64c942e513f3672f6841a03bc1fc6c39a9a0f47785058c3aae4c360",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:f8977591e64c942e513f3672f6841a03bc1fc6c39a9a0f47785058c3aae4c360",
          "name": "ops-manager-image-repository-5-0-0"
        },
        {
          "digest": "sha256:485ae0a64d9648a4085b52d1cd5b9b3bb51df9337e30a1c3d7cc29d2eea1f1d9",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:485ae0a64d9648a4085b52d1cd5b9b3bb51df9337e30a1c3d7cc29d2eea1f1d9",
          "name": "ops-manager-image-repository-5-0-4"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "1.17.1",
      "version_original": "1.17.1"
    },
    {
      "_id": "634072ccbf62483057c9d8d2",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:3abb3fdfe9370f55bc24a185d9c1b2f32d72c6bfacc4fbf148521164c6f3d47b",
      "bundle_path_digest": "sha256:3abb3fdfe9370f55bc24a185d9c1b2f32d72c6bfacc4fbf148521164c6f3d47b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.16",
      "creation_date": "2022-10-07T18:41:16.621000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.16.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:46:19.029000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "name": "cloud-native-postgresql-13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f-annotation"
        },
        {
          "digest": "sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.16.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.16.3",
      "version_original": "1.16.3"
    },
    {
      "_id": "634073353be061d37b280c01",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:3abb3fdfe9370f55bc24a185d9c1b2f32d72c6bfacc4fbf148521164c6f3d47b",
      "bundle_path_digest": "sha256:3abb3fdfe9370f55bc24a185d9c1b2f32d72c6bfacc4fbf148521164c6f3d47b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.16",
      "creation_date": "2022-10-07T18:43:01.721000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.16.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:32:15.449000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "name": "cloud-native-postgresql-13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f-annotation"
        },
        {
          "digest": "sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:13e910843d9420ca3cccd528fbed1190dbf29cfed36973a0163eaa1d1a76933f",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.16.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.16.3",
      "version_original": "1.16.3"
    },
    {
      "_id": "634073bdeba32fffe39b7dbc",
      "alm_examples": [
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "my-replica-set"
          },
          "spec": {
            "credentials": "my-credentials",
            "members": 3,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "sample-sharded-cluster"
          },
          "spec": {
            "configServerCount": 3,
            "credentials": "my-credentials",
            "mongodsPerShardCount": 3,
            "mongosCount": 2,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "shardCount": 1,
            "type": "ShardedCluster",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBMulti",
          "metadata": {
            "name": "multi-replica-set"
          },
          "spec": {
            "clusterSpecList": {
              "clusterSpecs": [
                {
                  "clusterName": "e2e.cluster1.mongokubernetes.com",
                  "members": 2
                },
                {
                  "clusterName": "e2e.cluster2.mongokubernetes.com",
                  "members": 1
                },
                {
                  "clusterName": "e2e.cluster3.mongokubernetes.com",
                  "members": 2
                }
              ]
            },
            "credentials": "my-credentials",
            "duplicateServiceObjects": false,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": false,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBOpsManager",
          "metadata": {
            "name": "ops-manager"
          },
          "spec": {
            "adminCredentials": "ops-manager-admin",
            "applicationDatabase": {
              "members": 3,
              "podSpec": {
                "cpu": 1
              }
            },
            "configuration": {
              "mms.fromEmailAddr": "admin@thecompany.com"
            },
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "version": "6.0.3"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBUser",
          "metadata": {
            "name": "my-replica-set-x509-user"
          },
          "spec": {
            "db": "$external",
            "mongodbResourceRef": {
              "name": "my-replica-set"
            },
            "roles": [
              {
                "db": "admin",
                "name": "dbOwner"
              }
            ],
            "username": "CN=my-replica-set-x509-user,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:f744047cce1c83d76d7ed47e0034ba666188117ec92ddd417a296f3b41a63f08",
      "bundle_path_digest": "sha256:f744047cce1c83d76d7ed47e0034ba666188117ec92ddd417a296f3b41a63f08",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-07T18:45:17.785000+00:00",
      "csv_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\n## Before You Start\n\nTo start using the operator you''ll need an account in MongoDB Cloud Manager or\na MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-operator-credentials/#procedure)\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-project-using-configmap/)\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `opsManager` or `cloudManager` - Enter the name of the ConfigMap containing project information\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n* `type` - Enter MongoDB Deployment Types (\"Standalone\", \"ReplicaSet\", \"ShardedCluster\"\n\n## Supported MongoDB Deployment Types ##\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Requirements for deploying MongoDB OpsManager\n\n* In order to deploy resources of type MongoDB OpsManager, you will need to\ncreate a secret containing the [credentials](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/plan-om-resource/#om-rsrc-prereqs)\nfor the Global Owner user\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you\nshould create your certificates.  or you can leave the operator to create all\nthe certificates for you. The operator ability to create certs is been\ndeprecated due to Kubernetes API changes.\n\nFor more information, please read the official MongoDB\nKubernetes Operator  [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
      "csv_display_name": "MongoDB Enterprise Operator",
      "csv_metadata_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
      "csv_name": "mongodb-enterprise.v1.17.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:58:16.946000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDB",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBMulti",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBOpsManager",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBUser",
          "version": "v1"
        }
      ],
      "provider": "MongoDB, Inc",
      "related_images": [
        {
          "digest": "sha256:943185414fb86b643c5b5f2c85fa890d509e0f352bb9de492ed927a493a5332e",
          "image": "quay.io/mongodb/mongodb-enterprise-init-ops-manager-ubi@sha256:943185414fb86b643c5b5f2c85fa890d509e0f352bb9de492ed927a493a5332e",
          "name": "init_ops_manager_image_repository_1_0_9"
        },
        {
          "digest": "sha256:a4cadf209ab87eb7d121ccd8b1503fa5d88be8866b5c3cb7897d14c36869abf6",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:a4cadf209ab87eb7d121ccd8b1503fa5d88be8866b5c3cb7897d14c36869abf6",
          "name": "agent_image_11_12_0_7388_1"
        },
        {
          "digest": "sha256:5cd3ed1053dae64c2cc7e13718cb93f899deffec7116ee7115cf92fa8f42f2e5",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:5cd3ed1053dae64c2cc7e13718cb93f899deffec7116ee7115cf92fa8f42f2e5",
          "name": "mongodb_image_4_2_6_ent"
        },
        {
          "digest": "sha256:0b0b86ae1650100278491f9eb7f8626cd8914f9c9570d0ed3946c775236e8e0d",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:0b0b86ae1650100278491f9eb7f8626cd8914f9c9570d0ed3946c775236e8e0d",
          "name": "mongodb_image_4_4_0_ent"
        },
        {
          "digest": "sha256:322bdd4be1278cd393765332a2acc8e2610f248999be3b064695b41e0ad7fa31",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:322bdd4be1278cd393765332a2acc8e2610f248999be3b064695b41e0ad7fa31",
          "name": "ops-manager-image-repository-5-0-1"
        },
        {
          "digest": "sha256:1c9c085196cafcfec47b7fe0d37c77e32914605d6fadda2e2138030e6646e422",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:1c9c085196cafcfec47b7fe0d37c77e32914605d6fadda2e2138030e6646e422",
          "name": "ops-manager-image-repository-5-0-8"
        },
        {
          "digest": "sha256:2c2e98c4c87faece21154178cab15de8fe9e422f7eb575ddf7fed2b5ba3b1870",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:2c2e98c4c87faece21154178cab15de8fe9e422f7eb575ddf7fed2b5ba3b1870",
          "name": "mongodb_image_4_4_4_ent"
        },
        {
          "digest": "sha256:a10baf02012eb4ce9b5c1bf8a7eac2e219c64a645d20aefc01241c6da332a18c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:a10baf02012eb4ce9b5c1bf8a7eac2e219c64a645d20aefc01241c6da332a18c",
          "name": "ops-manager-image-repository-5-0-6"
        },
        {
          "digest": "sha256:485ae0a64d9648a4085b52d1cd5b9b3bb51df9337e30a1c3d7cc29d2eea1f1d9",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:485ae0a64d9648a4085b52d1cd5b9b3bb51df9337e30a1c3d7cc29d2eea1f1d9",
          "name": "ops_manager_image_repository_5_0_4"
        },
        {
          "digest": "sha256:dc9ae18097d195f3849f981410a1c3d6d761528a15c31b954f0523144800305a",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:dc9ae18097d195f3849f981410a1c3d6d761528a15c31b954f0523144800305a",
          "name": "mongodb-image-4-2-11-ent"
        },
        {
          "digest": "sha256:4b3c346acbc1743e70e02f5346ace810ec8b133ae3c920f7266aee360e6fca87",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:4b3c346acbc1743e70e02f5346ace810ec8b133ae3c920f7266aee360e6fca87",
          "name": "mongodb-image-5-0-1-ent"
        },
        {
          "digest": "sha256:f8977591e64c942e513f3672f6841a03bc1fc6c39a9a0f47785058c3aae4c360",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:f8977591e64c942e513f3672f6841a03bc1fc6c39a9a0f47785058c3aae4c360",
          "name": "ops_manager_image_repository_5_0_0"
        },
        {
          "digest": "sha256:79441d3bddb5d2f6c6be64bcabf7092d154aa3407e057c7f159de0877ae987a0",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:79441d3bddb5d2f6c6be64bcabf7092d154aa3407e057c7f159de0877ae987a0",
          "name": "ops_manager_image_repository_5_0_5"
        },
        {
          "digest": "sha256:554ae3aab672aed1f307f3472d074df901c20461ed89899f6dc30706ec93d400",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:554ae3aab672aed1f307f3472d074df901c20461ed89899f6dc30706ec93d400",
          "name": "ops_manager_image_repository_5_0_12"
        },
        {
          "digest": "sha256:eab363d30db05c6af7bde539b4c550e60c54bdab7403288a8b00a246089d3108",
          "image": "quay.io/mongodb/mongodb-enterprise-database-ubi@sha256:eab363d30db05c6af7bde539b4c550e60c54bdab7403288a8b00a246089d3108",
          "name": "mongodb-enterprise-database-image-2-0-2"
        },
        {
          "digest": "sha256:554ae3aab672aed1f307f3472d074df901c20461ed89899f6dc30706ec93d400",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:554ae3aab672aed1f307f3472d074df901c20461ed89899f6dc30706ec93d400",
          "name": "ops-manager-image-repository-5-0-12"
        },
        {
          "digest": "sha256:7ffc31038b498ff3b884d59c8640d916b1d038c7e08e62167521287c698e1549",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:7ffc31038b498ff3b884d59c8640d916b1d038c7e08e62167521287c698e1549",
          "name": "ops-manager-image-repository-5-0-14"
        },
        {
          "digest": "sha256:71e35d3972e5e49f31ca74f111e8ff6cf804d09d9a21303f6ad4ac43b0628e75",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:71e35d3972e5e49f31ca74f111e8ff6cf804d09d9a21303f6ad4ac43b0628e75",
          "name": "ops-manager-image-repository-5-0-15"
        },
        {
          "digest": "sha256:a10baf02012eb4ce9b5c1bf8a7eac2e219c64a645d20aefc01241c6da332a18c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:a10baf02012eb4ce9b5c1bf8a7eac2e219c64a645d20aefc01241c6da332a18c",
          "name": "ops_manager_image_repository_5_0_6"
        },
        {
          "digest": "sha256:943185414fb86b643c5b5f2c85fa890d509e0f352bb9de492ed927a493a5332e",
          "image": "quay.io/mongodb/mongodb-enterprise-init-ops-manager-ubi@sha256:943185414fb86b643c5b5f2c85fa890d509e0f352bb9de492ed927a493a5332e",
          "name": "init-ops-manager-image-repository-1-0-9"
        },
        {
          "digest": "sha256:584ff388983f963eba8033d439e7f9efbcfa0ed3c84b5843db6bf32d107f0b65",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:584ff388983f963eba8033d439e7f9efbcfa0ed3c84b5843db6bf32d107f0b65",
          "name": "agent-image-12-0-4-7554-1"
        },
        {
          "digest": "sha256:b41059bfd5bc1ced5a1b6c405842473bf2cac091b6bc51b04d55d02b17dd6d7c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:b41059bfd5bc1ced5a1b6c405842473bf2cac091b6bc51b04d55d02b17dd6d7c",
          "name": "ops-manager-image-repository-5-0-9"
        },
        {
          "digest": "sha256:e0530f7856b5038a6081532d2e04ca638de89404976be697620db484364a2461",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e0530f7856b5038a6081532d2e04ca638de89404976be697620db484364a2461",
          "name": "ops-manager-image-repository-6-0-3"
        },
        {
          "digest": "sha256:7ffc31038b498ff3b884d59c8640d916b1d038c7e08e62167521287c698e1549",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:7ffc31038b498ff3b884d59c8640d916b1d038c7e08e62167521287c698e1549",
          "name": "ops_manager_image_repository_5_0_14"
        },
        {
          "digest": "sha256:236e60a18f90f72ef26d20471c28265f244560e22b09779a726f809f12d55ff2",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:236e60a18f90f72ef26d20471c28265f244560e22b09779a726f809f12d55ff2",
          "name": "ops_manager_image_repository_6_0_2"
        },
        {
          "digest": "sha256:9a8416762e874607278f9ae64af1b01d014031d91fc5aec3bb025d846cbe7218",
          "image": "quay.io/mongodb/mongodb-enterprise-init-appdb-ubi@sha256:9a8416762e874607278f9ae64af1b01d014031d91fc5aec3bb025d846cbe7218",
          "name": "init-appdb-image-repository-1-0-12"
        },
        {
          "digest": "sha256:af7dd4b4496ee7714d64596fa6d2e4d7ccc0084c8b7f4efade1ffa344756729c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:af7dd4b4496ee7714d64596fa6d2e4d7ccc0084c8b7f4efade1ffa344756729c",
          "name": "ops-manager-image-repository-5-0-2"
        },
        {
          "digest": "sha256:0b0b86ae1650100278491f9eb7f8626cd8914f9c9570d0ed3946c775236e8e0d",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:0b0b86ae1650100278491f9eb7f8626cd8914f9c9570d0ed3946c775236e8e0d",
          "name": "mongodb-image-4-4-0-ent"
        },
        {
          "digest": "sha256:14362d2593085a56eb092ebfbed7edf78c8e2d654e6b195dd67dccacee3f8464",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:14362d2593085a56eb092ebfbed7edf78c8e2d654e6b195dd67dccacee3f8464",
          "name": "mongodb-image-5-0-5-ent"
        },
        {
          "digest": "sha256:e87a59f4f597b1bed408bd1fe0f0816e1037656fae3efd522c497fff4bc8212f",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e87a59f4f597b1bed408bd1fe0f0816e1037656fae3efd522c497fff4bc8212f",
          "name": "ops_manager_image_repository_6_0_0"
        },
        {
          "digest": "sha256:79441d3bddb5d2f6c6be64bcabf7092d154aa3407e057c7f159de0877ae987a0",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:79441d3bddb5d2f6c6be64bcabf7092d154aa3407e057c7f159de0877ae987a0",
          "name": "ops-manager-image-repository-5-0-5"
        },
        {
          "digest": "sha256:c7c3856813c5fb231d8118f3848b3f30974ea0b675a3ce395db0b75cfc348d12",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:c7c3856813c5fb231d8118f3848b3f30974ea0b675a3ce395db0b75cfc348d12",
          "name": "ops-manager-image-repository-5-0-13"
        },
        {
          "digest": "sha256:ed8a16becb323b2e4a79b4335ece0208fe24526a2e59b3cb487017f9a517fda9",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:ed8a16becb323b2e4a79b4335ece0208fe24526a2e59b3cb487017f9a517fda9",
          "name": "mongodb-image-4-2-8-ent"
        },
        {
          "digest": "sha256:1c9c085196cafcfec47b7fe0d37c77e32914605d6fadda2e2138030e6646e422",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:1c9c085196cafcfec47b7fe0d37c77e32914605d6fadda2e2138030e6646e422",
          "name": "ops_manager_image_repository_5_0_8"
        },
        {
          "digest": "sha256:e69c9e8791b9b78937cb3205ff41e77472ef51b6e6752f3ee3c48c532a765fb7",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e69c9e8791b9b78937cb3205ff41e77472ef51b6e6752f3ee3c48c532a765fb7",
          "name": "ops_manager_image_repository_6_0_1"
        },
        {
          "digest": "sha256:e87a59f4f597b1bed408bd1fe0f0816e1037656fae3efd522c497fff4bc8212f",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e87a59f4f597b1bed408bd1fe0f0816e1037656fae3efd522c497fff4bc8212f",
          "name": "ops-manager-image-repository-6-0-0"
        },
        {
          "digest": "sha256:5cd3ed1053dae64c2cc7e13718cb93f899deffec7116ee7115cf92fa8f42f2e5",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:5cd3ed1053dae64c2cc7e13718cb93f899deffec7116ee7115cf92fa8f42f2e5",
          "name": "mongodb-image-4-2-6-ent"
        },
        {
          "digest": "sha256:236e60a18f90f72ef26d20471c28265f244560e22b09779a726f809f12d55ff2",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:236e60a18f90f72ef26d20471c28265f244560e22b09779a726f809f12d55ff2",
          "name": "ops-manager-image-repository-6-0-2"
        },
        {
          "digest": "sha256:2c2e98c4c87faece21154178cab15de8fe9e422f7eb575ddf7fed2b5ba3b1870",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:2c2e98c4c87faece21154178cab15de8fe9e422f7eb575ddf7fed2b5ba3b1870",
          "name": "mongodb-image-4-4-4-ent"
        },
        {
          "digest": "sha256:584ff388983f963eba8033d439e7f9efbcfa0ed3c84b5843db6bf32d107f0b65",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:584ff388983f963eba8033d439e7f9efbcfa0ed3c84b5843db6bf32d107f0b65",
          "name": "agent_image_12_0_4_7554_1"
        },
        {
          "digest": "sha256:a4cadf209ab87eb7d121ccd8b1503fa5d88be8866b5c3cb7897d14c36869abf6",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:a4cadf209ab87eb7d121ccd8b1503fa5d88be8866b5c3cb7897d14c36869abf6",
          "name": "agent-image-11-12-0-7388-1"
        },
        {
          "digest": "sha256:e69c9e8791b9b78937cb3205ff41e77472ef51b6e6752f3ee3c48c532a765fb7",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e69c9e8791b9b78937cb3205ff41e77472ef51b6e6752f3ee3c48c532a765fb7",
          "name": "ops-manager-image-repository-6-0-1"
        },
        {
          "digest": "sha256:208da2e5c879da7578a9c04dad342a2e1d0282cf9d3c79effa4f1ae036b6873a",
          "image": "quay.io/mongodb/mongodb-enterprise-operator-ubi@sha256:208da2e5c879da7578a9c04dad342a2e1d0282cf9d3c79effa4f1ae036b6873a",
          "name": "mongodb-enterprise-operator"
        },
        {
          "digest": "sha256:71e35d3972e5e49f31ca74f111e8ff6cf804d09d9a21303f6ad4ac43b0628e75",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:71e35d3972e5e49f31ca74f111e8ff6cf804d09d9a21303f6ad4ac43b0628e75",
          "name": "ops_manager_image_repository_5_0_15"
        },
        {
          "digest": "sha256:dc9ae18097d195f3849f981410a1c3d6d761528a15c31b954f0523144800305a",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:dc9ae18097d195f3849f981410a1c3d6d761528a15c31b954f0523144800305a",
          "name": "mongodb_image_4_2_11_ent"
        },
        {
          "digest": "sha256:9a8416762e874607278f9ae64af1b01d014031d91fc5aec3bb025d846cbe7218",
          "image": "quay.io/mongodb/mongodb-enterprise-init-appdb-ubi@sha256:9a8416762e874607278f9ae64af1b01d014031d91fc5aec3bb025d846cbe7218",
          "name": "init_appdb_image_repository_1_0_12"
        },
        {
          "digest": "sha256:af7dd4b4496ee7714d64596fa6d2e4d7ccc0084c8b7f4efade1ffa344756729c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:af7dd4b4496ee7714d64596fa6d2e4d7ccc0084c8b7f4efade1ffa344756729c",
          "name": "ops_manager_image_repository_5_0_2"
        },
        {
          "digest": "sha256:c7c3856813c5fb231d8118f3848b3f30974ea0b675a3ce395db0b75cfc348d12",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:c7c3856813c5fb231d8118f3848b3f30974ea0b675a3ce395db0b75cfc348d12",
          "name": "ops_manager_image_repository_5_0_13"
        },
        {
          "digest": "sha256:e0530f7856b5038a6081532d2e04ca638de89404976be697620db484364a2461",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e0530f7856b5038a6081532d2e04ca638de89404976be697620db484364a2461",
          "name": "ops_manager_image_repository_6_0_3"
        },
        {
          "digest": "sha256:14362d2593085a56eb092ebfbed7edf78c8e2d654e6b195dd67dccacee3f8464",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:14362d2593085a56eb092ebfbed7edf78c8e2d654e6b195dd67dccacee3f8464",
          "name": "mongodb_image_5_0_5_ent"
        },
        {
          "digest": "sha256:c171d694178daeac720c69da0ab8ac5d1311ac719ef07ea4fa095f07ef9772b0",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:c171d694178daeac720c69da0ab8ac5d1311ac719ef07ea4fa095f07ef9772b0",
          "name": "ops-manager-image-repository-5-0-11"
        },
        {
          "digest": "sha256:b41059bfd5bc1ced5a1b6c405842473bf2cac091b6bc51b04d55d02b17dd6d7c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:b41059bfd5bc1ced5a1b6c405842473bf2cac091b6bc51b04d55d02b17dd6d7c",
          "name": "ops_manager_image_repository_5_0_9"
        },
        {
          "digest": "sha256:ee2c2914fb6c9719888ee7a13b42577206f2a634d4a82eacfefc8ff6a325fba8",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:ee2c2914fb6c9719888ee7a13b42577206f2a634d4a82eacfefc8ff6a325fba8",
          "name": "ops_manager_image_repository_5_0_10"
        },
        {
          "digest": "sha256:ed8a16becb323b2e4a79b4335ece0208fe24526a2e59b3cb487017f9a517fda9",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:ed8a16becb323b2e4a79b4335ece0208fe24526a2e59b3cb487017f9a517fda9",
          "name": "mongodb_image_4_2_8_ent"
        },
        {
          "digest": "sha256:ee2c2914fb6c9719888ee7a13b42577206f2a634d4a82eacfefc8ff6a325fba8",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:ee2c2914fb6c9719888ee7a13b42577206f2a634d4a82eacfefc8ff6a325fba8",
          "name": "ops-manager-image-repository-5-0-10"
        },
        {
          "digest": "sha256:7b9a286124784a646a952a8d3a3cd47481fee838a649f49506c08d5dc3ce487d",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:7b9a286124784a646a952a8d3a3cd47481fee838a649f49506c08d5dc3ce487d",
          "name": "ops_manager_image_repository_5_0_3"
        },
        {
          "digest": "sha256:7b9a286124784a646a952a8d3a3cd47481fee838a649f49506c08d5dc3ce487d",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:7b9a286124784a646a952a8d3a3cd47481fee838a649f49506c08d5dc3ce487d",
          "name": "ops-manager-image-repository-5-0-3"
        },
        {
          "digest": "sha256:1f0d83b1730ca3afbff504ca1439b1c66b1f344b32aed6e337a36c912a631469",
          "image": "quay.io/mongodb/mongodb-enterprise-init-database-ubi@sha256:1f0d83b1730ca3afbff504ca1439b1c66b1f344b32aed6e337a36c912a631469",
          "name": "init_database_image_repository_1_0_12"
        },
        {
          "digest": "sha256:4b3c346acbc1743e70e02f5346ace810ec8b133ae3c920f7266aee360e6fca87",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:4b3c346acbc1743e70e02f5346ace810ec8b133ae3c920f7266aee360e6fca87",
          "name": "mongodb_image_5_0_1_ent"
        },
        {
          "digest": "sha256:bbe8b314b8ddc1f534e57ecc05d4c36b2c00c6fb1736a48be1b3aee216a54fce",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:bbe8b314b8ddc1f534e57ecc05d4c36b2c00c6fb1736a48be1b3aee216a54fce",
          "name": "agent-image-11-0-5-6963-1"
        },
        {
          "digest": "sha256:c171d694178daeac720c69da0ab8ac5d1311ac719ef07ea4fa095f07ef9772b0",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:c171d694178daeac720c69da0ab8ac5d1311ac719ef07ea4fa095f07ef9772b0",
          "name": "ops_manager_image_repository_5_0_11"
        },
        {
          "digest": "sha256:8eff2e05a9abb07dc75cf90450317bc45011b0718f25afaa990e896be96f97a8",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:8eff2e05a9abb07dc75cf90450317bc45011b0718f25afaa990e896be96f97a8",
          "name": "mongodb-image-4-2-2-ent"
        },
        {
          "digest": "sha256:bbe8b314b8ddc1f534e57ecc05d4c36b2c00c6fb1736a48be1b3aee216a54fce",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:bbe8b314b8ddc1f534e57ecc05d4c36b2c00c6fb1736a48be1b3aee216a54fce",
          "name": "agent_image_11_0_5_6963_1"
        },
        {
          "digest": "sha256:322bdd4be1278cd393765332a2acc8e2610f248999be3b064695b41e0ad7fa31",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:322bdd4be1278cd393765332a2acc8e2610f248999be3b064695b41e0ad7fa31",
          "name": "ops_manager_image_repository_5_0_1"
        },
        {
          "digest": "sha256:8eff2e05a9abb07dc75cf90450317bc45011b0718f25afaa990e896be96f97a8",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:8eff2e05a9abb07dc75cf90450317bc45011b0718f25afaa990e896be96f97a8",
          "name": "mongodb_image_4_2_2_ent"
        },
        {
          "digest": "sha256:1f0d83b1730ca3afbff504ca1439b1c66b1f344b32aed6e337a36c912a631469",
          "image": "quay.io/mongodb/mongodb-enterprise-init-database-ubi@sha256:1f0d83b1730ca3afbff504ca1439b1c66b1f344b32aed6e337a36c912a631469",
          "name": "init-database-image-repository-1-0-12"
        },
        {
          "digest": "sha256:0bffc1901c56d00afe853911ddeb5ffef22f006d428f14fdd2428289c87f4eda",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:0bffc1901c56d00afe853911ddeb5ffef22f006d428f14fdd2428289c87f4eda",
          "name": "ops-manager-image-repository-5-0-7"
        },
        {
          "digest": "sha256:4409ff1c1e0fc9bb09238051f099c955878bdf476cc9419ee2c947f20dd97ff4",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:4409ff1c1e0fc9bb09238051f099c955878bdf476cc9419ee2c947f20dd97ff4",
          "name": "mongodb-image-4-4-11-ent"
        },
        {
          "digest": "sha256:eab363d30db05c6af7bde539b4c550e60c54bdab7403288a8b00a246089d3108",
          "image": "quay.io/mongodb/mongodb-enterprise-database-ubi@sha256:eab363d30db05c6af7bde539b4c550e60c54bdab7403288a8b00a246089d3108",
          "name": "mongodb_enterprise_database_image_2_0_2"
        },
        {
          "digest": "sha256:0bffc1901c56d00afe853911ddeb5ffef22f006d428f14fdd2428289c87f4eda",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:0bffc1901c56d00afe853911ddeb5ffef22f006d428f14fdd2428289c87f4eda",
          "name": "ops_manager_image_repository_5_0_7"
        },
        {
          "digest": "sha256:4409ff1c1e0fc9bb09238051f099c955878bdf476cc9419ee2c947f20dd97ff4",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:4409ff1c1e0fc9bb09238051f099c955878bdf476cc9419ee2c947f20dd97ff4",
          "name": "mongodb_image_4_4_11_ent"
        },
        {
          "digest": "sha256:f8977591e64c942e513f3672f6841a03bc1fc6c39a9a0f47785058c3aae4c360",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:f8977591e64c942e513f3672f6841a03bc1fc6c39a9a0f47785058c3aae4c360",
          "name": "ops-manager-image-repository-5-0-0"
        },
        {
          "digest": "sha256:485ae0a64d9648a4085b52d1cd5b9b3bb51df9337e30a1c3d7cc29d2eea1f1d9",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:485ae0a64d9648a4085b52d1cd5b9b3bb51df9337e30a1c3d7cc29d2eea1f1d9",
          "name": "ops-manager-image-repository-5-0-4"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.17.1",
      "version_original": "1.17.1"
    },
    {
      "_id": "63407581bf62483057c9d9ef",
      "alm_examples": [
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "my-replica-set"
          },
          "spec": {
            "credentials": "my-credentials",
            "members": 3,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "sample-sharded-cluster"
          },
          "spec": {
            "configServerCount": 3,
            "credentials": "my-credentials",
            "mongodsPerShardCount": 3,
            "mongosCount": 2,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "shardCount": 1,
            "type": "ShardedCluster",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBMulti",
          "metadata": {
            "name": "multi-replica-set"
          },
          "spec": {
            "clusterSpecList": {
              "clusterSpecs": [
                {
                  "clusterName": "e2e.cluster1.mongokubernetes.com",
                  "members": 2
                },
                {
                  "clusterName": "e2e.cluster2.mongokubernetes.com",
                  "members": 1
                },
                {
                  "clusterName": "e2e.cluster3.mongokubernetes.com",
                  "members": 2
                }
              ]
            },
            "credentials": "my-credentials",
            "duplicateServiceObjects": false,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": false,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBOpsManager",
          "metadata": {
            "name": "ops-manager"
          },
          "spec": {
            "adminCredentials": "ops-manager-admin",
            "applicationDatabase": {
              "members": 3,
              "podSpec": {
                "cpu": 1
              }
            },
            "configuration": {
              "mms.fromEmailAddr": "admin@thecompany.com"
            },
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "version": "6.0.3"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBUser",
          "metadata": {
            "name": "my-replica-set-x509-user"
          },
          "spec": {
            "db": "$external",
            "mongodbResourceRef": {
              "name": "my-replica-set"
            },
            "roles": [
              {
                "db": "admin",
                "name": "dbOwner"
              }
            ],
            "username": "CN=my-replica-set-x509-user,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:f744047cce1c83d76d7ed47e0034ba666188117ec92ddd417a296f3b41a63f08",
      "bundle_path_digest": "sha256:f744047cce1c83d76d7ed47e0034ba666188117ec92ddd417a296f3b41a63f08",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-07T18:52:49.039000+00:00",
      "csv_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\n## Before You Start\n\nTo start using the operator you''ll need an account in MongoDB Cloud Manager or\na MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-operator-credentials/#procedure)\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-project-using-configmap/)\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `opsManager` or `cloudManager` - Enter the name of the ConfigMap containing project information\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n* `type` - Enter MongoDB Deployment Types (\"Standalone\", \"ReplicaSet\", \"ShardedCluster\"\n\n## Supported MongoDB Deployment Types ##\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Requirements for deploying MongoDB OpsManager\n\n* In order to deploy resources of type MongoDB OpsManager, you will need to\ncreate a secret containing the [credentials](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/plan-om-resource/#om-rsrc-prereqs)\nfor the Global Owner user\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you\nshould create your certificates.  or you can leave the operator to create all\nthe certificates for you. The operator ability to create certs is been\ndeprecated due to Kubernetes API changes.\n\nFor more information, please read the official MongoDB\nKubernetes Operator  [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
      "csv_display_name": "MongoDB Enterprise Operator",
      "csv_metadata_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
      "csv_name": "mongodb-enterprise.v1.17.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:20:10.615000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDBOpsManager",
          "plural": "opsmanagers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDB",
          "plural": "mongodb",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBMulti",
          "plural": "mongodbmulti",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBUser",
          "plural": "mongodbusers",
          "version": "v1"
        }
      ],
      "provider": "MongoDB, Inc",
      "related_images": [
        {
          "digest": "sha256:943185414fb86b643c5b5f2c85fa890d509e0f352bb9de492ed927a493a5332e",
          "image": "quay.io/mongodb/mongodb-enterprise-init-ops-manager-ubi@sha256:943185414fb86b643c5b5f2c85fa890d509e0f352bb9de492ed927a493a5332e",
          "name": "init_ops_manager_image_repository_1_0_9"
        },
        {
          "digest": "sha256:a4cadf209ab87eb7d121ccd8b1503fa5d88be8866b5c3cb7897d14c36869abf6",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:a4cadf209ab87eb7d121ccd8b1503fa5d88be8866b5c3cb7897d14c36869abf6",
          "name": "agent_image_11_12_0_7388_1"
        },
        {
          "digest": "sha256:5cd3ed1053dae64c2cc7e13718cb93f899deffec7116ee7115cf92fa8f42f2e5",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:5cd3ed1053dae64c2cc7e13718cb93f899deffec7116ee7115cf92fa8f42f2e5",
          "name": "mongodb_image_4_2_6_ent"
        },
        {
          "digest": "sha256:0b0b86ae1650100278491f9eb7f8626cd8914f9c9570d0ed3946c775236e8e0d",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:0b0b86ae1650100278491f9eb7f8626cd8914f9c9570d0ed3946c775236e8e0d",
          "name": "mongodb_image_4_4_0_ent"
        },
        {
          "digest": "sha256:322bdd4be1278cd393765332a2acc8e2610f248999be3b064695b41e0ad7fa31",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:322bdd4be1278cd393765332a2acc8e2610f248999be3b064695b41e0ad7fa31",
          "name": "ops-manager-image-repository-5-0-1"
        },
        {
          "digest": "sha256:1c9c085196cafcfec47b7fe0d37c77e32914605d6fadda2e2138030e6646e422",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:1c9c085196cafcfec47b7fe0d37c77e32914605d6fadda2e2138030e6646e422",
          "name": "ops-manager-image-repository-5-0-8"
        },
        {
          "digest": "sha256:2c2e98c4c87faece21154178cab15de8fe9e422f7eb575ddf7fed2b5ba3b1870",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:2c2e98c4c87faece21154178cab15de8fe9e422f7eb575ddf7fed2b5ba3b1870",
          "name": "mongodb_image_4_4_4_ent"
        },
        {
          "digest": "sha256:a10baf02012eb4ce9b5c1bf8a7eac2e219c64a645d20aefc01241c6da332a18c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:a10baf02012eb4ce9b5c1bf8a7eac2e219c64a645d20aefc01241c6da332a18c",
          "name": "ops-manager-image-repository-5-0-6"
        },
        {
          "digest": "sha256:485ae0a64d9648a4085b52d1cd5b9b3bb51df9337e30a1c3d7cc29d2eea1f1d9",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:485ae0a64d9648a4085b52d1cd5b9b3bb51df9337e30a1c3d7cc29d2eea1f1d9",
          "name": "ops_manager_image_repository_5_0_4"
        },
        {
          "digest": "sha256:dc9ae18097d195f3849f981410a1c3d6d761528a15c31b954f0523144800305a",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:dc9ae18097d195f3849f981410a1c3d6d761528a15c31b954f0523144800305a",
          "name": "mongodb-image-4-2-11-ent"
        },
        {
          "digest": "sha256:4b3c346acbc1743e70e02f5346ace810ec8b133ae3c920f7266aee360e6fca87",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:4b3c346acbc1743e70e02f5346ace810ec8b133ae3c920f7266aee360e6fca87",
          "name": "mongodb-image-5-0-1-ent"
        },
        {
          "digest": "sha256:f8977591e64c942e513f3672f6841a03bc1fc6c39a9a0f47785058c3aae4c360",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:f8977591e64c942e513f3672f6841a03bc1fc6c39a9a0f47785058c3aae4c360",
          "name": "ops_manager_image_repository_5_0_0"
        },
        {
          "digest": "sha256:79441d3bddb5d2f6c6be64bcabf7092d154aa3407e057c7f159de0877ae987a0",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:79441d3bddb5d2f6c6be64bcabf7092d154aa3407e057c7f159de0877ae987a0",
          "name": "ops_manager_image_repository_5_0_5"
        },
        {
          "digest": "sha256:554ae3aab672aed1f307f3472d074df901c20461ed89899f6dc30706ec93d400",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:554ae3aab672aed1f307f3472d074df901c20461ed89899f6dc30706ec93d400",
          "name": "ops_manager_image_repository_5_0_12"
        },
        {
          "digest": "sha256:eab363d30db05c6af7bde539b4c550e60c54bdab7403288a8b00a246089d3108",
          "image": "quay.io/mongodb/mongodb-enterprise-database-ubi@sha256:eab363d30db05c6af7bde539b4c550e60c54bdab7403288a8b00a246089d3108",
          "name": "mongodb-enterprise-database-image-2-0-2"
        },
        {
          "digest": "sha256:554ae3aab672aed1f307f3472d074df901c20461ed89899f6dc30706ec93d400",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:554ae3aab672aed1f307f3472d074df901c20461ed89899f6dc30706ec93d400",
          "name": "ops-manager-image-repository-5-0-12"
        },
        {
          "digest": "sha256:7ffc31038b498ff3b884d59c8640d916b1d038c7e08e62167521287c698e1549",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:7ffc31038b498ff3b884d59c8640d916b1d038c7e08e62167521287c698e1549",
          "name": "ops-manager-image-repository-5-0-14"
        },
        {
          "digest": "sha256:71e35d3972e5e49f31ca74f111e8ff6cf804d09d9a21303f6ad4ac43b0628e75",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:71e35d3972e5e49f31ca74f111e8ff6cf804d09d9a21303f6ad4ac43b0628e75",
          "name": "ops-manager-image-repository-5-0-15"
        },
        {
          "digest": "sha256:a10baf02012eb4ce9b5c1bf8a7eac2e219c64a645d20aefc01241c6da332a18c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:a10baf02012eb4ce9b5c1bf8a7eac2e219c64a645d20aefc01241c6da332a18c",
          "name": "ops_manager_image_repository_5_0_6"
        },
        {
          "digest": "sha256:943185414fb86b643c5b5f2c85fa890d509e0f352bb9de492ed927a493a5332e",
          "image": "quay.io/mongodb/mongodb-enterprise-init-ops-manager-ubi@sha256:943185414fb86b643c5b5f2c85fa890d509e0f352bb9de492ed927a493a5332e",
          "name": "init-ops-manager-image-repository-1-0-9"
        },
        {
          "digest": "sha256:584ff388983f963eba8033d439e7f9efbcfa0ed3c84b5843db6bf32d107f0b65",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:584ff388983f963eba8033d439e7f9efbcfa0ed3c84b5843db6bf32d107f0b65",
          "name": "agent-image-12-0-4-7554-1"
        },
        {
          "digest": "sha256:b41059bfd5bc1ced5a1b6c405842473bf2cac091b6bc51b04d55d02b17dd6d7c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:b41059bfd5bc1ced5a1b6c405842473bf2cac091b6bc51b04d55d02b17dd6d7c",
          "name": "ops-manager-image-repository-5-0-9"
        },
        {
          "digest": "sha256:e0530f7856b5038a6081532d2e04ca638de89404976be697620db484364a2461",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e0530f7856b5038a6081532d2e04ca638de89404976be697620db484364a2461",
          "name": "ops-manager-image-repository-6-0-3"
        },
        {
          "digest": "sha256:7ffc31038b498ff3b884d59c8640d916b1d038c7e08e62167521287c698e1549",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:7ffc31038b498ff3b884d59c8640d916b1d038c7e08e62167521287c698e1549",
          "name": "ops_manager_image_repository_5_0_14"
        },
        {
          "digest": "sha256:236e60a18f90f72ef26d20471c28265f244560e22b09779a726f809f12d55ff2",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:236e60a18f90f72ef26d20471c28265f244560e22b09779a726f809f12d55ff2",
          "name": "ops_manager_image_repository_6_0_2"
        },
        {
          "digest": "sha256:9a8416762e874607278f9ae64af1b01d014031d91fc5aec3bb025d846cbe7218",
          "image": "quay.io/mongodb/mongodb-enterprise-init-appdb-ubi@sha256:9a8416762e874607278f9ae64af1b01d014031d91fc5aec3bb025d846cbe7218",
          "name": "init-appdb-image-repository-1-0-12"
        },
        {
          "digest": "sha256:af7dd4b4496ee7714d64596fa6d2e4d7ccc0084c8b7f4efade1ffa344756729c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:af7dd4b4496ee7714d64596fa6d2e4d7ccc0084c8b7f4efade1ffa344756729c",
          "name": "ops-manager-image-repository-5-0-2"
        },
        {
          "digest": "sha256:0b0b86ae1650100278491f9eb7f8626cd8914f9c9570d0ed3946c775236e8e0d",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:0b0b86ae1650100278491f9eb7f8626cd8914f9c9570d0ed3946c775236e8e0d",
          "name": "mongodb-image-4-4-0-ent"
        },
        {
          "digest": "sha256:14362d2593085a56eb092ebfbed7edf78c8e2d654e6b195dd67dccacee3f8464",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:14362d2593085a56eb092ebfbed7edf78c8e2d654e6b195dd67dccacee3f8464",
          "name": "mongodb-image-5-0-5-ent"
        },
        {
          "digest": "sha256:e87a59f4f597b1bed408bd1fe0f0816e1037656fae3efd522c497fff4bc8212f",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e87a59f4f597b1bed408bd1fe0f0816e1037656fae3efd522c497fff4bc8212f",
          "name": "ops_manager_image_repository_6_0_0"
        },
        {
          "digest": "sha256:79441d3bddb5d2f6c6be64bcabf7092d154aa3407e057c7f159de0877ae987a0",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:79441d3bddb5d2f6c6be64bcabf7092d154aa3407e057c7f159de0877ae987a0",
          "name": "ops-manager-image-repository-5-0-5"
        },
        {
          "digest": "sha256:c7c3856813c5fb231d8118f3848b3f30974ea0b675a3ce395db0b75cfc348d12",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:c7c3856813c5fb231d8118f3848b3f30974ea0b675a3ce395db0b75cfc348d12",
          "name": "ops-manager-image-repository-5-0-13"
        },
        {
          "digest": "sha256:ed8a16becb323b2e4a79b4335ece0208fe24526a2e59b3cb487017f9a517fda9",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:ed8a16becb323b2e4a79b4335ece0208fe24526a2e59b3cb487017f9a517fda9",
          "name": "mongodb-image-4-2-8-ent"
        },
        {
          "digest": "sha256:1c9c085196cafcfec47b7fe0d37c77e32914605d6fadda2e2138030e6646e422",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:1c9c085196cafcfec47b7fe0d37c77e32914605d6fadda2e2138030e6646e422",
          "name": "ops_manager_image_repository_5_0_8"
        },
        {
          "digest": "sha256:e69c9e8791b9b78937cb3205ff41e77472ef51b6e6752f3ee3c48c532a765fb7",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e69c9e8791b9b78937cb3205ff41e77472ef51b6e6752f3ee3c48c532a765fb7",
          "name": "ops_manager_image_repository_6_0_1"
        },
        {
          "digest": "sha256:e87a59f4f597b1bed408bd1fe0f0816e1037656fae3efd522c497fff4bc8212f",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e87a59f4f597b1bed408bd1fe0f0816e1037656fae3efd522c497fff4bc8212f",
          "name": "ops-manager-image-repository-6-0-0"
        },
        {
          "digest": "sha256:5cd3ed1053dae64c2cc7e13718cb93f899deffec7116ee7115cf92fa8f42f2e5",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:5cd3ed1053dae64c2cc7e13718cb93f899deffec7116ee7115cf92fa8f42f2e5",
          "name": "mongodb-image-4-2-6-ent"
        },
        {
          "digest": "sha256:236e60a18f90f72ef26d20471c28265f244560e22b09779a726f809f12d55ff2",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:236e60a18f90f72ef26d20471c28265f244560e22b09779a726f809f12d55ff2",
          "name": "ops-manager-image-repository-6-0-2"
        },
        {
          "digest": "sha256:2c2e98c4c87faece21154178cab15de8fe9e422f7eb575ddf7fed2b5ba3b1870",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:2c2e98c4c87faece21154178cab15de8fe9e422f7eb575ddf7fed2b5ba3b1870",
          "name": "mongodb-image-4-4-4-ent"
        },
        {
          "digest": "sha256:584ff388983f963eba8033d439e7f9efbcfa0ed3c84b5843db6bf32d107f0b65",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:584ff388983f963eba8033d439e7f9efbcfa0ed3c84b5843db6bf32d107f0b65",
          "name": "agent_image_12_0_4_7554_1"
        },
        {
          "digest": "sha256:a4cadf209ab87eb7d121ccd8b1503fa5d88be8866b5c3cb7897d14c36869abf6",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:a4cadf209ab87eb7d121ccd8b1503fa5d88be8866b5c3cb7897d14c36869abf6",
          "name": "agent-image-11-12-0-7388-1"
        },
        {
          "digest": "sha256:e69c9e8791b9b78937cb3205ff41e77472ef51b6e6752f3ee3c48c532a765fb7",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e69c9e8791b9b78937cb3205ff41e77472ef51b6e6752f3ee3c48c532a765fb7",
          "name": "ops-manager-image-repository-6-0-1"
        },
        {
          "digest": "sha256:208da2e5c879da7578a9c04dad342a2e1d0282cf9d3c79effa4f1ae036b6873a",
          "image": "quay.io/mongodb/mongodb-enterprise-operator-ubi@sha256:208da2e5c879da7578a9c04dad342a2e1d0282cf9d3c79effa4f1ae036b6873a",
          "name": "mongodb-enterprise-operator"
        },
        {
          "digest": "sha256:71e35d3972e5e49f31ca74f111e8ff6cf804d09d9a21303f6ad4ac43b0628e75",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:71e35d3972e5e49f31ca74f111e8ff6cf804d09d9a21303f6ad4ac43b0628e75",
          "name": "ops_manager_image_repository_5_0_15"
        },
        {
          "digest": "sha256:dc9ae18097d195f3849f981410a1c3d6d761528a15c31b954f0523144800305a",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:dc9ae18097d195f3849f981410a1c3d6d761528a15c31b954f0523144800305a",
          "name": "mongodb_image_4_2_11_ent"
        },
        {
          "digest": "sha256:9a8416762e874607278f9ae64af1b01d014031d91fc5aec3bb025d846cbe7218",
          "image": "quay.io/mongodb/mongodb-enterprise-init-appdb-ubi@sha256:9a8416762e874607278f9ae64af1b01d014031d91fc5aec3bb025d846cbe7218",
          "name": "init_appdb_image_repository_1_0_12"
        },
        {
          "digest": "sha256:af7dd4b4496ee7714d64596fa6d2e4d7ccc0084c8b7f4efade1ffa344756729c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:af7dd4b4496ee7714d64596fa6d2e4d7ccc0084c8b7f4efade1ffa344756729c",
          "name": "ops_manager_image_repository_5_0_2"
        },
        {
          "digest": "sha256:c7c3856813c5fb231d8118f3848b3f30974ea0b675a3ce395db0b75cfc348d12",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:c7c3856813c5fb231d8118f3848b3f30974ea0b675a3ce395db0b75cfc348d12",
          "name": "ops_manager_image_repository_5_0_13"
        },
        {
          "digest": "sha256:e0530f7856b5038a6081532d2e04ca638de89404976be697620db484364a2461",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e0530f7856b5038a6081532d2e04ca638de89404976be697620db484364a2461",
          "name": "ops_manager_image_repository_6_0_3"
        },
        {
          "digest": "sha256:14362d2593085a56eb092ebfbed7edf78c8e2d654e6b195dd67dccacee3f8464",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:14362d2593085a56eb092ebfbed7edf78c8e2d654e6b195dd67dccacee3f8464",
          "name": "mongodb_image_5_0_5_ent"
        },
        {
          "digest": "sha256:c171d694178daeac720c69da0ab8ac5d1311ac719ef07ea4fa095f07ef9772b0",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:c171d694178daeac720c69da0ab8ac5d1311ac719ef07ea4fa095f07ef9772b0",
          "name": "ops-manager-image-repository-5-0-11"
        },
        {
          "digest": "sha256:b41059bfd5bc1ced5a1b6c405842473bf2cac091b6bc51b04d55d02b17dd6d7c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:b41059bfd5bc1ced5a1b6c405842473bf2cac091b6bc51b04d55d02b17dd6d7c",
          "name": "ops_manager_image_repository_5_0_9"
        },
        {
          "digest": "sha256:ee2c2914fb6c9719888ee7a13b42577206f2a634d4a82eacfefc8ff6a325fba8",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:ee2c2914fb6c9719888ee7a13b42577206f2a634d4a82eacfefc8ff6a325fba8",
          "name": "ops_manager_image_repository_5_0_10"
        },
        {
          "digest": "sha256:ed8a16becb323b2e4a79b4335ece0208fe24526a2e59b3cb487017f9a517fda9",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:ed8a16becb323b2e4a79b4335ece0208fe24526a2e59b3cb487017f9a517fda9",
          "name": "mongodb_image_4_2_8_ent"
        },
        {
          "digest": "sha256:ee2c2914fb6c9719888ee7a13b42577206f2a634d4a82eacfefc8ff6a325fba8",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:ee2c2914fb6c9719888ee7a13b42577206f2a634d4a82eacfefc8ff6a325fba8",
          "name": "ops-manager-image-repository-5-0-10"
        },
        {
          "digest": "sha256:7b9a286124784a646a952a8d3a3cd47481fee838a649f49506c08d5dc3ce487d",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:7b9a286124784a646a952a8d3a3cd47481fee838a649f49506c08d5dc3ce487d",
          "name": "ops_manager_image_repository_5_0_3"
        },
        {
          "digest": "sha256:7b9a286124784a646a952a8d3a3cd47481fee838a649f49506c08d5dc3ce487d",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:7b9a286124784a646a952a8d3a3cd47481fee838a649f49506c08d5dc3ce487d",
          "name": "ops-manager-image-repository-5-0-3"
        },
        {
          "digest": "sha256:1f0d83b1730ca3afbff504ca1439b1c66b1f344b32aed6e337a36c912a631469",
          "image": "quay.io/mongodb/mongodb-enterprise-init-database-ubi@sha256:1f0d83b1730ca3afbff504ca1439b1c66b1f344b32aed6e337a36c912a631469",
          "name": "init_database_image_repository_1_0_12"
        },
        {
          "digest": "sha256:4b3c346acbc1743e70e02f5346ace810ec8b133ae3c920f7266aee360e6fca87",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:4b3c346acbc1743e70e02f5346ace810ec8b133ae3c920f7266aee360e6fca87",
          "name": "mongodb_image_5_0_1_ent"
        },
        {
          "digest": "sha256:bbe8b314b8ddc1f534e57ecc05d4c36b2c00c6fb1736a48be1b3aee216a54fce",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:bbe8b314b8ddc1f534e57ecc05d4c36b2c00c6fb1736a48be1b3aee216a54fce",
          "name": "agent-image-11-0-5-6963-1"
        },
        {
          "digest": "sha256:c171d694178daeac720c69da0ab8ac5d1311ac719ef07ea4fa095f07ef9772b0",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:c171d694178daeac720c69da0ab8ac5d1311ac719ef07ea4fa095f07ef9772b0",
          "name": "ops_manager_image_repository_5_0_11"
        },
        {
          "digest": "sha256:8eff2e05a9abb07dc75cf90450317bc45011b0718f25afaa990e896be96f97a8",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:8eff2e05a9abb07dc75cf90450317bc45011b0718f25afaa990e896be96f97a8",
          "name": "mongodb-image-4-2-2-ent"
        },
        {
          "digest": "sha256:bbe8b314b8ddc1f534e57ecc05d4c36b2c00c6fb1736a48be1b3aee216a54fce",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:bbe8b314b8ddc1f534e57ecc05d4c36b2c00c6fb1736a48be1b3aee216a54fce",
          "name": "agent_image_11_0_5_6963_1"
        },
        {
          "digest": "sha256:322bdd4be1278cd393765332a2acc8e2610f248999be3b064695b41e0ad7fa31",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:322bdd4be1278cd393765332a2acc8e2610f248999be3b064695b41e0ad7fa31",
          "name": "ops_manager_image_repository_5_0_1"
        },
        {
          "digest": "sha256:8eff2e05a9abb07dc75cf90450317bc45011b0718f25afaa990e896be96f97a8",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:8eff2e05a9abb07dc75cf90450317bc45011b0718f25afaa990e896be96f97a8",
          "name": "mongodb_image_4_2_2_ent"
        },
        {
          "digest": "sha256:1f0d83b1730ca3afbff504ca1439b1c66b1f344b32aed6e337a36c912a631469",
          "image": "quay.io/mongodb/mongodb-enterprise-init-database-ubi@sha256:1f0d83b1730ca3afbff504ca1439b1c66b1f344b32aed6e337a36c912a631469",
          "name": "init-database-image-repository-1-0-12"
        },
        {
          "digest": "sha256:0bffc1901c56d00afe853911ddeb5ffef22f006d428f14fdd2428289c87f4eda",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:0bffc1901c56d00afe853911ddeb5ffef22f006d428f14fdd2428289c87f4eda",
          "name": "ops-manager-image-repository-5-0-7"
        },
        {
          "digest": "sha256:4409ff1c1e0fc9bb09238051f099c955878bdf476cc9419ee2c947f20dd97ff4",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:4409ff1c1e0fc9bb09238051f099c955878bdf476cc9419ee2c947f20dd97ff4",
          "name": "mongodb-image-4-4-11-ent"
        },
        {
          "digest": "sha256:eab363d30db05c6af7bde539b4c550e60c54bdab7403288a8b00a246089d3108",
          "image": "quay.io/mongodb/mongodb-enterprise-database-ubi@sha256:eab363d30db05c6af7bde539b4c550e60c54bdab7403288a8b00a246089d3108",
          "name": "mongodb_enterprise_database_image_2_0_2"
        },
        {
          "digest": "sha256:0bffc1901c56d00afe853911ddeb5ffef22f006d428f14fdd2428289c87f4eda",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:0bffc1901c56d00afe853911ddeb5ffef22f006d428f14fdd2428289c87f4eda",
          "name": "ops_manager_image_repository_5_0_7"
        },
        {
          "digest": "sha256:4409ff1c1e0fc9bb09238051f099c955878bdf476cc9419ee2c947f20dd97ff4",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:4409ff1c1e0fc9bb09238051f099c955878bdf476cc9419ee2c947f20dd97ff4",
          "name": "mongodb_image_4_4_11_ent"
        },
        {
          "digest": "sha256:f8977591e64c942e513f3672f6841a03bc1fc6c39a9a0f47785058c3aae4c360",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:f8977591e64c942e513f3672f6841a03bc1fc6c39a9a0f47785058c3aae4c360",
          "name": "ops-manager-image-repository-5-0-0"
        },
        {
          "digest": "sha256:485ae0a64d9648a4085b52d1cd5b9b3bb51df9337e30a1c3d7cc29d2eea1f1d9",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:485ae0a64d9648a4085b52d1cd5b9b3bb51df9337e30a1c3d7cc29d2eea1f1d9",
          "name": "ops-manager-image-repository-5-0-4"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.17.1",
      "version_original": "1.17.1"
    },
    {
      "_id": "634079c96804229d44d56415",
      "alm_examples": [
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "my-replica-set"
          },
          "spec": {
            "credentials": "my-credentials",
            "members": 3,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "sample-sharded-cluster"
          },
          "spec": {
            "configServerCount": 3,
            "credentials": "my-credentials",
            "mongodsPerShardCount": 3,
            "mongosCount": 2,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "shardCount": 1,
            "type": "ShardedCluster",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBMulti",
          "metadata": {
            "name": "multi-replica-set"
          },
          "spec": {
            "clusterSpecList": {
              "clusterSpecs": [
                {
                  "clusterName": "e2e.cluster1.mongokubernetes.com",
                  "members": 2
                },
                {
                  "clusterName": "e2e.cluster2.mongokubernetes.com",
                  "members": 1
                },
                {
                  "clusterName": "e2e.cluster3.mongokubernetes.com",
                  "members": 2
                }
              ]
            },
            "credentials": "my-credentials",
            "duplicateServiceObjects": false,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": false,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBOpsManager",
          "metadata": {
            "name": "ops-manager"
          },
          "spec": {
            "adminCredentials": "ops-manager-admin",
            "applicationDatabase": {
              "members": 3,
              "podSpec": {
                "cpu": 1
              }
            },
            "configuration": {
              "mms.fromEmailAddr": "admin@thecompany.com"
            },
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "version": "6.0.3"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBUser",
          "metadata": {
            "name": "my-replica-set-x509-user"
          },
          "spec": {
            "db": "$external",
            "mongodbResourceRef": {
              "name": "my-replica-set"
            },
            "roles": [
              {
                "db": "admin",
                "name": "dbOwner"
              }
            ],
            "username": "CN=my-replica-set-x509-user,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:f744047cce1c83d76d7ed47e0034ba666188117ec92ddd417a296f3b41a63f08",
      "bundle_path_digest": "sha256:f744047cce1c83d76d7ed47e0034ba666188117ec92ddd417a296f3b41a63f08",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-07T19:11:05.201000+00:00",
      "csv_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\n## Before You Start\n\nTo start using the operator you''ll need an account in MongoDB Cloud Manager or\na MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-operator-credentials/#procedure)\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-project-using-configmap/)\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `opsManager` or `cloudManager` - Enter the name of the ConfigMap containing project information\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n* `type` - Enter MongoDB Deployment Types (\"Standalone\", \"ReplicaSet\", \"ShardedCluster\"\n\n## Supported MongoDB Deployment Types ##\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Requirements for deploying MongoDB OpsManager\n\n* In order to deploy resources of type MongoDB OpsManager, you will need to\ncreate a secret containing the [credentials](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/plan-om-resource/#om-rsrc-prereqs)\nfor the Global Owner user\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you\nshould create your certificates.  or you can leave the operator to create all\nthe certificates for you. The operator ability to create certs is been\ndeprecated due to Kubernetes API changes.\n\nFor more information, please read the official MongoDB\nKubernetes Operator  [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
      "csv_display_name": "MongoDB Enterprise Operator",
      "csv_metadata_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
      "csv_name": "mongodb-enterprise.v1.17.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:18:11.018000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDBUser",
          "plural": "mongodbusers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBOpsManager",
          "plural": "opsmanagers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDB",
          "plural": "mongodb",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBMulti",
          "plural": "mongodbmulti",
          "version": "v1"
        }
      ],
      "provider": "MongoDB, Inc",
      "related_images": [
        {
          "digest": "sha256:943185414fb86b643c5b5f2c85fa890d509e0f352bb9de492ed927a493a5332e",
          "image": "quay.io/mongodb/mongodb-enterprise-init-ops-manager-ubi@sha256:943185414fb86b643c5b5f2c85fa890d509e0f352bb9de492ed927a493a5332e",
          "name": "init_ops_manager_image_repository_1_0_9"
        },
        {
          "digest": "sha256:a4cadf209ab87eb7d121ccd8b1503fa5d88be8866b5c3cb7897d14c36869abf6",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:a4cadf209ab87eb7d121ccd8b1503fa5d88be8866b5c3cb7897d14c36869abf6",
          "name": "agent_image_11_12_0_7388_1"
        },
        {
          "digest": "sha256:5cd3ed1053dae64c2cc7e13718cb93f899deffec7116ee7115cf92fa8f42f2e5",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:5cd3ed1053dae64c2cc7e13718cb93f899deffec7116ee7115cf92fa8f42f2e5",
          "name": "mongodb_image_4_2_6_ent"
        },
        {
          "digest": "sha256:0b0b86ae1650100278491f9eb7f8626cd8914f9c9570d0ed3946c775236e8e0d",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:0b0b86ae1650100278491f9eb7f8626cd8914f9c9570d0ed3946c775236e8e0d",
          "name": "mongodb_image_4_4_0_ent"
        },
        {
          "digest": "sha256:322bdd4be1278cd393765332a2acc8e2610f248999be3b064695b41e0ad7fa31",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:322bdd4be1278cd393765332a2acc8e2610f248999be3b064695b41e0ad7fa31",
          "name": "ops-manager-image-repository-5-0-1"
        },
        {
          "digest": "sha256:1c9c085196cafcfec47b7fe0d37c77e32914605d6fadda2e2138030e6646e422",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:1c9c085196cafcfec47b7fe0d37c77e32914605d6fadda2e2138030e6646e422",
          "name": "ops-manager-image-repository-5-0-8"
        },
        {
          "digest": "sha256:2c2e98c4c87faece21154178cab15de8fe9e422f7eb575ddf7fed2b5ba3b1870",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:2c2e98c4c87faece21154178cab15de8fe9e422f7eb575ddf7fed2b5ba3b1870",
          "name": "mongodb_image_4_4_4_ent"
        },
        {
          "digest": "sha256:a10baf02012eb4ce9b5c1bf8a7eac2e219c64a645d20aefc01241c6da332a18c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:a10baf02012eb4ce9b5c1bf8a7eac2e219c64a645d20aefc01241c6da332a18c",
          "name": "ops-manager-image-repository-5-0-6"
        },
        {
          "digest": "sha256:485ae0a64d9648a4085b52d1cd5b9b3bb51df9337e30a1c3d7cc29d2eea1f1d9",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:485ae0a64d9648a4085b52d1cd5b9b3bb51df9337e30a1c3d7cc29d2eea1f1d9",
          "name": "ops_manager_image_repository_5_0_4"
        },
        {
          "digest": "sha256:dc9ae18097d195f3849f981410a1c3d6d761528a15c31b954f0523144800305a",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:dc9ae18097d195f3849f981410a1c3d6d761528a15c31b954f0523144800305a",
          "name": "mongodb-image-4-2-11-ent"
        },
        {
          "digest": "sha256:4b3c346acbc1743e70e02f5346ace810ec8b133ae3c920f7266aee360e6fca87",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:4b3c346acbc1743e70e02f5346ace810ec8b133ae3c920f7266aee360e6fca87",
          "name": "mongodb-image-5-0-1-ent"
        },
        {
          "digest": "sha256:f8977591e64c942e513f3672f6841a03bc1fc6c39a9a0f47785058c3aae4c360",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:f8977591e64c942e513f3672f6841a03bc1fc6c39a9a0f47785058c3aae4c360",
          "name": "ops_manager_image_repository_5_0_0"
        },
        {
          "digest": "sha256:79441d3bddb5d2f6c6be64bcabf7092d154aa3407e057c7f159de0877ae987a0",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:79441d3bddb5d2f6c6be64bcabf7092d154aa3407e057c7f159de0877ae987a0",
          "name": "ops_manager_image_repository_5_0_5"
        },
        {
          "digest": "sha256:554ae3aab672aed1f307f3472d074df901c20461ed89899f6dc30706ec93d400",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:554ae3aab672aed1f307f3472d074df901c20461ed89899f6dc30706ec93d400",
          "name": "ops_manager_image_repository_5_0_12"
        },
        {
          "digest": "sha256:eab363d30db05c6af7bde539b4c550e60c54bdab7403288a8b00a246089d3108",
          "image": "quay.io/mongodb/mongodb-enterprise-database-ubi@sha256:eab363d30db05c6af7bde539b4c550e60c54bdab7403288a8b00a246089d3108",
          "name": "mongodb-enterprise-database-image-2-0-2"
        },
        {
          "digest": "sha256:554ae3aab672aed1f307f3472d074df901c20461ed89899f6dc30706ec93d400",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:554ae3aab672aed1f307f3472d074df901c20461ed89899f6dc30706ec93d400",
          "name": "ops-manager-image-repository-5-0-12"
        },
        {
          "digest": "sha256:7ffc31038b498ff3b884d59c8640d916b1d038c7e08e62167521287c698e1549",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:7ffc31038b498ff3b884d59c8640d916b1d038c7e08e62167521287c698e1549",
          "name": "ops-manager-image-repository-5-0-14"
        },
        {
          "digest": "sha256:71e35d3972e5e49f31ca74f111e8ff6cf804d09d9a21303f6ad4ac43b0628e75",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:71e35d3972e5e49f31ca74f111e8ff6cf804d09d9a21303f6ad4ac43b0628e75",
          "name": "ops-manager-image-repository-5-0-15"
        },
        {
          "digest": "sha256:a10baf02012eb4ce9b5c1bf8a7eac2e219c64a645d20aefc01241c6da332a18c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:a10baf02012eb4ce9b5c1bf8a7eac2e219c64a645d20aefc01241c6da332a18c",
          "name": "ops_manager_image_repository_5_0_6"
        },
        {
          "digest": "sha256:943185414fb86b643c5b5f2c85fa890d509e0f352bb9de492ed927a493a5332e",
          "image": "quay.io/mongodb/mongodb-enterprise-init-ops-manager-ubi@sha256:943185414fb86b643c5b5f2c85fa890d509e0f352bb9de492ed927a493a5332e",
          "name": "init-ops-manager-image-repository-1-0-9"
        },
        {
          "digest": "sha256:584ff388983f963eba8033d439e7f9efbcfa0ed3c84b5843db6bf32d107f0b65",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:584ff388983f963eba8033d439e7f9efbcfa0ed3c84b5843db6bf32d107f0b65",
          "name": "agent-image-12-0-4-7554-1"
        },
        {
          "digest": "sha256:b41059bfd5bc1ced5a1b6c405842473bf2cac091b6bc51b04d55d02b17dd6d7c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:b41059bfd5bc1ced5a1b6c405842473bf2cac091b6bc51b04d55d02b17dd6d7c",
          "name": "ops-manager-image-repository-5-0-9"
        },
        {
          "digest": "sha256:e0530f7856b5038a6081532d2e04ca638de89404976be697620db484364a2461",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e0530f7856b5038a6081532d2e04ca638de89404976be697620db484364a2461",
          "name": "ops-manager-image-repository-6-0-3"
        },
        {
          "digest": "sha256:7ffc31038b498ff3b884d59c8640d916b1d038c7e08e62167521287c698e1549",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:7ffc31038b498ff3b884d59c8640d916b1d038c7e08e62167521287c698e1549",
          "name": "ops_manager_image_repository_5_0_14"
        },
        {
          "digest": "sha256:236e60a18f90f72ef26d20471c28265f244560e22b09779a726f809f12d55ff2",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:236e60a18f90f72ef26d20471c28265f244560e22b09779a726f809f12d55ff2",
          "name": "ops_manager_image_repository_6_0_2"
        },
        {
          "digest": "sha256:9a8416762e874607278f9ae64af1b01d014031d91fc5aec3bb025d846cbe7218",
          "image": "quay.io/mongodb/mongodb-enterprise-init-appdb-ubi@sha256:9a8416762e874607278f9ae64af1b01d014031d91fc5aec3bb025d846cbe7218",
          "name": "init-appdb-image-repository-1-0-12"
        },
        {
          "digest": "sha256:af7dd4b4496ee7714d64596fa6d2e4d7ccc0084c8b7f4efade1ffa344756729c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:af7dd4b4496ee7714d64596fa6d2e4d7ccc0084c8b7f4efade1ffa344756729c",
          "name": "ops-manager-image-repository-5-0-2"
        },
        {
          "digest": "sha256:0b0b86ae1650100278491f9eb7f8626cd8914f9c9570d0ed3946c775236e8e0d",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:0b0b86ae1650100278491f9eb7f8626cd8914f9c9570d0ed3946c775236e8e0d",
          "name": "mongodb-image-4-4-0-ent"
        },
        {
          "digest": "sha256:14362d2593085a56eb092ebfbed7edf78c8e2d654e6b195dd67dccacee3f8464",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:14362d2593085a56eb092ebfbed7edf78c8e2d654e6b195dd67dccacee3f8464",
          "name": "mongodb-image-5-0-5-ent"
        },
        {
          "digest": "sha256:e87a59f4f597b1bed408bd1fe0f0816e1037656fae3efd522c497fff4bc8212f",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e87a59f4f597b1bed408bd1fe0f0816e1037656fae3efd522c497fff4bc8212f",
          "name": "ops_manager_image_repository_6_0_0"
        },
        {
          "digest": "sha256:79441d3bddb5d2f6c6be64bcabf7092d154aa3407e057c7f159de0877ae987a0",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:79441d3bddb5d2f6c6be64bcabf7092d154aa3407e057c7f159de0877ae987a0",
          "name": "ops-manager-image-repository-5-0-5"
        },
        {
          "digest": "sha256:c7c3856813c5fb231d8118f3848b3f30974ea0b675a3ce395db0b75cfc348d12",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:c7c3856813c5fb231d8118f3848b3f30974ea0b675a3ce395db0b75cfc348d12",
          "name": "ops-manager-image-repository-5-0-13"
        },
        {
          "digest": "sha256:ed8a16becb323b2e4a79b4335ece0208fe24526a2e59b3cb487017f9a517fda9",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:ed8a16becb323b2e4a79b4335ece0208fe24526a2e59b3cb487017f9a517fda9",
          "name": "mongodb-image-4-2-8-ent"
        },
        {
          "digest": "sha256:1c9c085196cafcfec47b7fe0d37c77e32914605d6fadda2e2138030e6646e422",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:1c9c085196cafcfec47b7fe0d37c77e32914605d6fadda2e2138030e6646e422",
          "name": "ops_manager_image_repository_5_0_8"
        },
        {
          "digest": "sha256:e69c9e8791b9b78937cb3205ff41e77472ef51b6e6752f3ee3c48c532a765fb7",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e69c9e8791b9b78937cb3205ff41e77472ef51b6e6752f3ee3c48c532a765fb7",
          "name": "ops_manager_image_repository_6_0_1"
        },
        {
          "digest": "sha256:e87a59f4f597b1bed408bd1fe0f0816e1037656fae3efd522c497fff4bc8212f",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e87a59f4f597b1bed408bd1fe0f0816e1037656fae3efd522c497fff4bc8212f",
          "name": "ops-manager-image-repository-6-0-0"
        },
        {
          "digest": "sha256:5cd3ed1053dae64c2cc7e13718cb93f899deffec7116ee7115cf92fa8f42f2e5",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:5cd3ed1053dae64c2cc7e13718cb93f899deffec7116ee7115cf92fa8f42f2e5",
          "name": "mongodb-image-4-2-6-ent"
        },
        {
          "digest": "sha256:236e60a18f90f72ef26d20471c28265f244560e22b09779a726f809f12d55ff2",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:236e60a18f90f72ef26d20471c28265f244560e22b09779a726f809f12d55ff2",
          "name": "ops-manager-image-repository-6-0-2"
        },
        {
          "digest": "sha256:2c2e98c4c87faece21154178cab15de8fe9e422f7eb575ddf7fed2b5ba3b1870",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:2c2e98c4c87faece21154178cab15de8fe9e422f7eb575ddf7fed2b5ba3b1870",
          "name": "mongodb-image-4-4-4-ent"
        },
        {
          "digest": "sha256:584ff388983f963eba8033d439e7f9efbcfa0ed3c84b5843db6bf32d107f0b65",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:584ff388983f963eba8033d439e7f9efbcfa0ed3c84b5843db6bf32d107f0b65",
          "name": "agent_image_12_0_4_7554_1"
        },
        {
          "digest": "sha256:a4cadf209ab87eb7d121ccd8b1503fa5d88be8866b5c3cb7897d14c36869abf6",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:a4cadf209ab87eb7d121ccd8b1503fa5d88be8866b5c3cb7897d14c36869abf6",
          "name": "agent-image-11-12-0-7388-1"
        },
        {
          "digest": "sha256:e69c9e8791b9b78937cb3205ff41e77472ef51b6e6752f3ee3c48c532a765fb7",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e69c9e8791b9b78937cb3205ff41e77472ef51b6e6752f3ee3c48c532a765fb7",
          "name": "ops-manager-image-repository-6-0-1"
        },
        {
          "digest": "sha256:208da2e5c879da7578a9c04dad342a2e1d0282cf9d3c79effa4f1ae036b6873a",
          "image": "quay.io/mongodb/mongodb-enterprise-operator-ubi@sha256:208da2e5c879da7578a9c04dad342a2e1d0282cf9d3c79effa4f1ae036b6873a",
          "name": "mongodb-enterprise-operator"
        },
        {
          "digest": "sha256:71e35d3972e5e49f31ca74f111e8ff6cf804d09d9a21303f6ad4ac43b0628e75",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:71e35d3972e5e49f31ca74f111e8ff6cf804d09d9a21303f6ad4ac43b0628e75",
          "name": "ops_manager_image_repository_5_0_15"
        },
        {
          "digest": "sha256:dc9ae18097d195f3849f981410a1c3d6d761528a15c31b954f0523144800305a",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:dc9ae18097d195f3849f981410a1c3d6d761528a15c31b954f0523144800305a",
          "name": "mongodb_image_4_2_11_ent"
        },
        {
          "digest": "sha256:9a8416762e874607278f9ae64af1b01d014031d91fc5aec3bb025d846cbe7218",
          "image": "quay.io/mongodb/mongodb-enterprise-init-appdb-ubi@sha256:9a8416762e874607278f9ae64af1b01d014031d91fc5aec3bb025d846cbe7218",
          "name": "init_appdb_image_repository_1_0_12"
        },
        {
          "digest": "sha256:af7dd4b4496ee7714d64596fa6d2e4d7ccc0084c8b7f4efade1ffa344756729c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:af7dd4b4496ee7714d64596fa6d2e4d7ccc0084c8b7f4efade1ffa344756729c",
          "name": "ops_manager_image_repository_5_0_2"
        },
        {
          "digest": "sha256:c7c3856813c5fb231d8118f3848b3f30974ea0b675a3ce395db0b75cfc348d12",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:c7c3856813c5fb231d8118f3848b3f30974ea0b675a3ce395db0b75cfc348d12",
          "name": "ops_manager_image_repository_5_0_13"
        },
        {
          "digest": "sha256:e0530f7856b5038a6081532d2e04ca638de89404976be697620db484364a2461",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:e0530f7856b5038a6081532d2e04ca638de89404976be697620db484364a2461",
          "name": "ops_manager_image_repository_6_0_3"
        },
        {
          "digest": "sha256:14362d2593085a56eb092ebfbed7edf78c8e2d654e6b195dd67dccacee3f8464",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:14362d2593085a56eb092ebfbed7edf78c8e2d654e6b195dd67dccacee3f8464",
          "name": "mongodb_image_5_0_5_ent"
        },
        {
          "digest": "sha256:c171d694178daeac720c69da0ab8ac5d1311ac719ef07ea4fa095f07ef9772b0",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:c171d694178daeac720c69da0ab8ac5d1311ac719ef07ea4fa095f07ef9772b0",
          "name": "ops-manager-image-repository-5-0-11"
        },
        {
          "digest": "sha256:b41059bfd5bc1ced5a1b6c405842473bf2cac091b6bc51b04d55d02b17dd6d7c",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:b41059bfd5bc1ced5a1b6c405842473bf2cac091b6bc51b04d55d02b17dd6d7c",
          "name": "ops_manager_image_repository_5_0_9"
        },
        {
          "digest": "sha256:ee2c2914fb6c9719888ee7a13b42577206f2a634d4a82eacfefc8ff6a325fba8",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:ee2c2914fb6c9719888ee7a13b42577206f2a634d4a82eacfefc8ff6a325fba8",
          "name": "ops_manager_image_repository_5_0_10"
        },
        {
          "digest": "sha256:ed8a16becb323b2e4a79b4335ece0208fe24526a2e59b3cb487017f9a517fda9",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:ed8a16becb323b2e4a79b4335ece0208fe24526a2e59b3cb487017f9a517fda9",
          "name": "mongodb_image_4_2_8_ent"
        },
        {
          "digest": "sha256:ee2c2914fb6c9719888ee7a13b42577206f2a634d4a82eacfefc8ff6a325fba8",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:ee2c2914fb6c9719888ee7a13b42577206f2a634d4a82eacfefc8ff6a325fba8",
          "name": "ops-manager-image-repository-5-0-10"
        },
        {
          "digest": "sha256:7b9a286124784a646a952a8d3a3cd47481fee838a649f49506c08d5dc3ce487d",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:7b9a286124784a646a952a8d3a3cd47481fee838a649f49506c08d5dc3ce487d",
          "name": "ops_manager_image_repository_5_0_3"
        },
        {
          "digest": "sha256:7b9a286124784a646a952a8d3a3cd47481fee838a649f49506c08d5dc3ce487d",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:7b9a286124784a646a952a8d3a3cd47481fee838a649f49506c08d5dc3ce487d",
          "name": "ops-manager-image-repository-5-0-3"
        },
        {
          "digest": "sha256:1f0d83b1730ca3afbff504ca1439b1c66b1f344b32aed6e337a36c912a631469",
          "image": "quay.io/mongodb/mongodb-enterprise-init-database-ubi@sha256:1f0d83b1730ca3afbff504ca1439b1c66b1f344b32aed6e337a36c912a631469",
          "name": "init_database_image_repository_1_0_12"
        },
        {
          "digest": "sha256:4b3c346acbc1743e70e02f5346ace810ec8b133ae3c920f7266aee360e6fca87",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:4b3c346acbc1743e70e02f5346ace810ec8b133ae3c920f7266aee360e6fca87",
          "name": "mongodb_image_5_0_1_ent"
        },
        {
          "digest": "sha256:bbe8b314b8ddc1f534e57ecc05d4c36b2c00c6fb1736a48be1b3aee216a54fce",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:bbe8b314b8ddc1f534e57ecc05d4c36b2c00c6fb1736a48be1b3aee216a54fce",
          "name": "agent-image-11-0-5-6963-1"
        },
        {
          "digest": "sha256:c171d694178daeac720c69da0ab8ac5d1311ac719ef07ea4fa095f07ef9772b0",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:c171d694178daeac720c69da0ab8ac5d1311ac719ef07ea4fa095f07ef9772b0",
          "name": "ops_manager_image_repository_5_0_11"
        },
        {
          "digest": "sha256:8eff2e05a9abb07dc75cf90450317bc45011b0718f25afaa990e896be96f97a8",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:8eff2e05a9abb07dc75cf90450317bc45011b0718f25afaa990e896be96f97a8",
          "name": "mongodb-image-4-2-2-ent"
        },
        {
          "digest": "sha256:bbe8b314b8ddc1f534e57ecc05d4c36b2c00c6fb1736a48be1b3aee216a54fce",
          "image": "quay.io/mongodb/mongodb-agent-ubi@sha256:bbe8b314b8ddc1f534e57ecc05d4c36b2c00c6fb1736a48be1b3aee216a54fce",
          "name": "agent_image_11_0_5_6963_1"
        },
        {
          "digest": "sha256:322bdd4be1278cd393765332a2acc8e2610f248999be3b064695b41e0ad7fa31",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:322bdd4be1278cd393765332a2acc8e2610f248999be3b064695b41e0ad7fa31",
          "name": "ops_manager_image_repository_5_0_1"
        },
        {
          "digest": "sha256:8eff2e05a9abb07dc75cf90450317bc45011b0718f25afaa990e896be96f97a8",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:8eff2e05a9abb07dc75cf90450317bc45011b0718f25afaa990e896be96f97a8",
          "name": "mongodb_image_4_2_2_ent"
        },
        {
          "digest": "sha256:1f0d83b1730ca3afbff504ca1439b1c66b1f344b32aed6e337a36c912a631469",
          "image": "quay.io/mongodb/mongodb-enterprise-init-database-ubi@sha256:1f0d83b1730ca3afbff504ca1439b1c66b1f344b32aed6e337a36c912a631469",
          "name": "init-database-image-repository-1-0-12"
        },
        {
          "digest": "sha256:0bffc1901c56d00afe853911ddeb5ffef22f006d428f14fdd2428289c87f4eda",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:0bffc1901c56d00afe853911ddeb5ffef22f006d428f14fdd2428289c87f4eda",
          "name": "ops-manager-image-repository-5-0-7"
        },
        {
          "digest": "sha256:4409ff1c1e0fc9bb09238051f099c955878bdf476cc9419ee2c947f20dd97ff4",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:4409ff1c1e0fc9bb09238051f099c955878bdf476cc9419ee2c947f20dd97ff4",
          "name": "mongodb-image-4-4-11-ent"
        },
        {
          "digest": "sha256:eab363d30db05c6af7bde539b4c550e60c54bdab7403288a8b00a246089d3108",
          "image": "quay.io/mongodb/mongodb-enterprise-database-ubi@sha256:eab363d30db05c6af7bde539b4c550e60c54bdab7403288a8b00a246089d3108",
          "name": "mongodb_enterprise_database_image_2_0_2"
        },
        {
          "digest": "sha256:0bffc1901c56d00afe853911ddeb5ffef22f006d428f14fdd2428289c87f4eda",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:0bffc1901c56d00afe853911ddeb5ffef22f006d428f14fdd2428289c87f4eda",
          "name": "ops_manager_image_repository_5_0_7"
        },
        {
          "digest": "sha256:4409ff1c1e0fc9bb09238051f099c955878bdf476cc9419ee2c947f20dd97ff4",
          "image": "quay.io/mongodb/mongodb-enterprise-appdb-database-ubi@sha256:4409ff1c1e0fc9bb09238051f099c955878bdf476cc9419ee2c947f20dd97ff4",
          "name": "mongodb_image_4_4_11_ent"
        },
        {
          "digest": "sha256:f8977591e64c942e513f3672f6841a03bc1fc6c39a9a0f47785058c3aae4c360",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:f8977591e64c942e513f3672f6841a03bc1fc6c39a9a0f47785058c3aae4c360",
          "name": "ops-manager-image-repository-5-0-0"
        },
        {
          "digest": "sha256:485ae0a64d9648a4085b52d1cd5b9b3bb51df9337e30a1c3d7cc29d2eea1f1d9",
          "image": "quay.io/mongodb/mongodb-enterprise-ops-manager-ubi@sha256:485ae0a64d9648a4085b52d1cd5b9b3bb51df9337e30a1c3d7cc29d2eea1f1d9",
          "name": "ops-manager-image-repository-5-0-4"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.17.1",
      "version_original": "1.17.1"
    }
  ]
}

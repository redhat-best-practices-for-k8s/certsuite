{
  "data": [
    {
      "_id": "62e9fd65fa788ab421563066",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.5"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:cf711d4f5842b8618b74396f93ae5dac9ddb34d0d8f38fc4ebc130f4dc20bd98",
      "bundle_path_digest": "sha256:cf711d4f5842b8618b74396f93ae5dac9ddb34d0d8f38fc4ebc130f4dc20bd98",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.5",
      "creation_date": "2022-08-03T04:45:25.344000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.5.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.5.22188",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:45:25.344000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "name": "aquasec-310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533-annotation"
        },
        {
          "digest": "sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:eb8afdbe8773d986fe9f8103a505025d66d91469abe56d8c2c0bef31357372cd",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:eb8afdbe8773d986fe9f8103a505025d66d91469abe56d8c2c0bef31357372cd",
          "name": "gateway"
        },
        {
          "digest": "sha256:2c0a0575663dcc04dc0d3aab51172e29d578282758c8feb5878c7523677b1e69",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:2c0a0575663dcc04dc0d3aab51172e29d578282758c8feb5878c7523677b1e69",
          "name": "server"
        },
        {
          "digest": "sha256:1101003dacfbe0cd0dd6c344bef5750485d5518c80e7fcf4c964bc9a9f3583d5",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:1101003dacfbe0cd0dd6c344bef5750485d5518c80e7fcf4c964bc9a9f3583d5",
          "name": "scanner"
        },
        {
          "digest": "sha256:1e3700c6ca0a02b361542d15ecea95ebf70f4213afaf571ef1f79b24e0ab3ced",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:1e3700c6ca0a02b361542d15ecea95ebf70f4213afaf571ef1f79b24e0ab3ced",
          "name": "enforcer"
        },
        {
          "digest": "sha256:8f557be28c3d09482b236850a9d115b3f62b7e17226e4b647e8c8dc941fc86fd",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:8f557be28c3d09482b236850a9d115b3f62b7e17226e4b647e8c8dc941fc86fd",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.5.22188",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.5.22188",
      "version_original": "6.5.22188"
    },
    {
      "_id": "62e9ff87ab98585d16af84a8",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-08-03T04:54:31.164000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:54:31.164000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "62e9ffddced786fb0e4ba057",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-53.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "bundle_path_digest": "sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-08-03T04:55:57.946000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:55:57.946000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator-5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59-annotation"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.8-11",
      "version_original": "6.2.8-11"
    },
    {
      "_id": "62e9ffe1926c4db0ae4de5f7",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            },
            "route": true,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            },
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway.aqua:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.0"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:26b6039d957e1dd8de17b1f46bde410c797159c581a217d5e396b39ccfd304cf",
      "bundle_path_digest": "sha256:26b6039d957e1dd8de17b1f46bde410c797159c581a217d5e396b39ccfd304cf",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.0",
      "creation_date": "2022-08-03T04:56:01.226000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n* Automatically scale the number of Aqua scanners based on the number of images in the scan queue\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/6.0.0/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.0.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.0.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.0.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:56:01.226000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.0.8",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.8",
      "version_original": "6.0.8"
    },
    {
      "_id": "62ea002d075733edba6a91c3",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2022-08-03T04:57:17.841000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:57:17.841000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "62ea0060ab98585d16af8562",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-08-03T04:58:08.281000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:58:08.281000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "62ea007ffa788ab421563350",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-08-03T04:58:39.534000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:58:39.534000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "62ea0082fa788ab421563354",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-90.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:95644b2ccc560118c16350bcd4380db7c08d97258bf1034387e96a9b1814fef5",
      "bundle_path_digest": "sha256:95644b2ccc560118c16350bcd4380db7c08d97258bf1034387e96a9b1814fef5",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-08-03T04:58:42.655000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:58:42.655000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "redis-enterprise-operator-97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31-annotation"
        },
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.10-4",
      "version_original": "6.2.10-4"
    },
    {
      "_id": "62ea011bab98585d16af861b",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.12-57.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "bundle_path_digest": "sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-08-03T05:01:15.695000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.12-5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T05:01:15.695000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator-b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f-annotation"
        },
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.12-5",
      "version_original": "6.0.12-5"
    },
    {
      "_id": "62ea0141926c4db0ae4de737",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-08-03T05:01:53.928000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T05:01:53.928000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "62ea01b7ab98585d16af86a6",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-69.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:6eba0d4cdc724698aa1d42dd74ae6b19e9446f601f337d5752531a14f10e41ef",
      "bundle_path_digest": "sha256:6eba0d4cdc724698aa1d42dd74ae6b19e9446f601f337d5752531a14f10e41ef",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-08-03T05:03:51.390000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T05:03:51.390000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "name": "redis-enterprise-operator-3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f-annotation"
        },
        {
          "digest": "sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.20-4",
      "version_original": "6.0.20-4"
    },
    {
      "_id": "62ea023eced786fb0e4ba284",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-08-03T05:06:06.937000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T05:06:06.937000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "62ea02654a2b9e2714abadfd",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-08-03T05:06:45.208000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T05:06:45.208000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "62ea0299926c4db0ae4de853",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-08-03T05:07:37.611000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T05:07:37.611000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "62ebd5f88c2137a6fb66c735",
      "alm_examples": [
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "my-replica-set"
          },
          "spec": {
            "credentials": "my-credentials",
            "members": 3,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "sample-sharded-cluster"
          },
          "spec": {
            "configServerCount": 3,
            "credentials": "my-credentials",
            "mongodsPerShardCount": 3,
            "mongosCount": 2,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "shardCount": 1,
            "type": "ShardedCluster",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBMulti",
          "metadata": {
            "name": "multi-replica-set"
          },
          "spec": {
            "clusterSpecList": {
              "clusterSpecs": [
                {
                  "clusterName": "e2e.cluster1.mongokubernetes.com",
                  "members": 2
                },
                {
                  "clusterName": "e2e.cluster2.mongokubernetes.com",
                  "members": 1
                },
                {
                  "clusterName": "e2e.cluster3.mongokubernetes.com",
                  "members": 2
                }
              ]
            },
            "credentials": "my-credentials",
            "duplicateServiceObjects": false,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": false,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBOpsManager",
          "metadata": {
            "name": "ops-manager"
          },
          "spec": {
            "adminCredentials": "ops-manager-admin",
            "applicationDatabase": {
              "members": 3,
              "podSpec": {
                "cpu": 1
              }
            },
            "configuration": {
              "mms.fromEmailAddr": "admin@thecompany.com"
            },
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "version": "4.4.1"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBUser",
          "metadata": {
            "name": "my-replica-set-x509-user"
          },
          "spec": {
            "db": "$external",
            "mongodbResourceRef": {
              "name": "my-replica-set"
            },
            "roles": [
              {
                "db": "admin",
                "name": "dbOwner"
              }
            ],
            "username": "CN=my-replica-set-x509-user,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:991eaeb592d64c906163802faf62ae50d1472fd0a5cd52258d54011ea10c5912",
      "bundle_path_digest": "sha256:991eaeb592d64c906163802faf62ae50d1472fd0a5cd52258d54011ea10c5912",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-04T14:21:44.778000+00:00",
      "csv_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\n## Before You Start\n\nTo start using the operator you''ll need an account in MongoDB Cloud Manager or\na MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-operator-credentials/#procedure)\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-project-using-configmap/)\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `opsManager` or `cloudManager` - Enter the name of the ConfigMap containing project information\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n* `type` - Enter MongoDB Deployment Types (\"Standalone\", \"ReplicaSet\", \"ShardedCluster\"\n\n## Supported MongoDB Deployment Types ##\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Requirements for deploying MongoDB OpsManager\n\n* In order to deploy resources of type MongoDB OpsManager, you will need to\ncreate a secret containing the [credentials](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/plan-om-resource/#om-rsrc-prereqs)\nfor the Global Onwer user\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you\nshould create your certificates.  or you can leave the operator to create all\nthe certificates for you. The operator ability to create certs is been\ndepricted due to Kuberentes API changes.\n\nFor more information, please read the official MongoDB\nKubernetes Operator  [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
      "csv_display_name": "MongoDB Enterprise Operator",
      "csv_metadata_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
      "csv_name": "mongodb-enterprise.v1.16.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:05:00.930000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDB",
          "plural": "mongodb",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBMulti",
          "plural": "mongodbmulti",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBUser",
          "plural": "mongodbusers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBOpsManager",
          "plural": "opsmanagers",
          "version": "v1"
        }
      ],
      "provider": "MongoDB, Inc",
      "related_images": [
        {
          "digest": "sha256:f30f5f272e73e9227437437dfe75bc3623c45a0fccaf7c03026a62b670c33297",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:f30f5f272e73e9227437437dfe75bc3623c45a0fccaf7c03026a62b670c33297",
          "name": "mongodb-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.16.4",
      "version_original": "1.16.4"
    },
    {
      "_id": "62ebd64396f50062ffb669fd",
      "alm_examples": [
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "my-replica-set"
          },
          "spec": {
            "credentials": "my-credentials",
            "members": 3,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "sample-sharded-cluster"
          },
          "spec": {
            "configServerCount": 3,
            "credentials": "my-credentials",
            "mongodsPerShardCount": 3,
            "mongosCount": 2,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "shardCount": 1,
            "type": "ShardedCluster",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBMulti",
          "metadata": {
            "name": "multi-replica-set"
          },
          "spec": {
            "clusterSpecList": {
              "clusterSpecs": [
                {
                  "clusterName": "e2e.cluster1.mongokubernetes.com",
                  "members": 2
                },
                {
                  "clusterName": "e2e.cluster2.mongokubernetes.com",
                  "members": 1
                },
                {
                  "clusterName": "e2e.cluster3.mongokubernetes.com",
                  "members": 2
                }
              ]
            },
            "credentials": "my-credentials",
            "duplicateServiceObjects": false,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": false,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBOpsManager",
          "metadata": {
            "name": "ops-manager"
          },
          "spec": {
            "adminCredentials": "ops-manager-admin",
            "applicationDatabase": {
              "members": 3,
              "podSpec": {
                "cpu": 1
              }
            },
            "configuration": {
              "mms.fromEmailAddr": "admin@thecompany.com"
            },
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "version": "4.4.1"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBUser",
          "metadata": {
            "name": "my-replica-set-x509-user"
          },
          "spec": {
            "db": "$external",
            "mongodbResourceRef": {
              "name": "my-replica-set"
            },
            "roles": [
              {
                "db": "admin",
                "name": "dbOwner"
              }
            ],
            "username": "CN=my-replica-set-x509-user,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:991eaeb592d64c906163802faf62ae50d1472fd0a5cd52258d54011ea10c5912",
      "bundle_path_digest": "sha256:991eaeb592d64c906163802faf62ae50d1472fd0a5cd52258d54011ea10c5912",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-04T14:22:59.629000+00:00",
      "csv_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\n## Before You Start\n\nTo start using the operator you''ll need an account in MongoDB Cloud Manager or\na MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-operator-credentials/#procedure)\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-project-using-configmap/)\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `opsManager` or `cloudManager` - Enter the name of the ConfigMap containing project information\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n* `type` - Enter MongoDB Deployment Types (\"Standalone\", \"ReplicaSet\", \"ShardedCluster\"\n\n## Supported MongoDB Deployment Types ##\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Requirements for deploying MongoDB OpsManager\n\n* In order to deploy resources of type MongoDB OpsManager, you will need to\ncreate a secret containing the [credentials](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/plan-om-resource/#om-rsrc-prereqs)\nfor the Global Onwer user\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you\nshould create your certificates.  or you can leave the operator to create all\nthe certificates for you. The operator ability to create certs is been\ndepricted due to Kuberentes API changes.\n\nFor more information, please read the official MongoDB\nKubernetes Operator  [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
      "csv_display_name": "MongoDB Enterprise Operator",
      "csv_metadata_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
      "csv_name": "mongodb-enterprise.v1.16.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:19:55.863000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDB",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBMulti",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBOpsManager",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBUser",
          "version": "v1"
        }
      ],
      "provider": "MongoDB, Inc",
      "related_images": [
        {
          "digest": "sha256:f30f5f272e73e9227437437dfe75bc3623c45a0fccaf7c03026a62b670c33297",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:f30f5f272e73e9227437437dfe75bc3623c45a0fccaf7c03026a62b670c33297",
          "name": "mongodb-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.16.4",
      "version_original": "1.16.4"
    },
    {
      "_id": "62ebd66496f50062ffb66a01",
      "alm_examples": [
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "my-replica-set"
          },
          "spec": {
            "credentials": "my-credentials",
            "members": 3,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "sample-sharded-cluster"
          },
          "spec": {
            "configServerCount": 3,
            "credentials": "my-credentials",
            "mongodsPerShardCount": 3,
            "mongosCount": 2,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "shardCount": 1,
            "type": "ShardedCluster",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBMulti",
          "metadata": {
            "name": "multi-replica-set"
          },
          "spec": {
            "clusterSpecList": {
              "clusterSpecs": [
                {
                  "clusterName": "e2e.cluster1.mongokubernetes.com",
                  "members": 2
                },
                {
                  "clusterName": "e2e.cluster2.mongokubernetes.com",
                  "members": 1
                },
                {
                  "clusterName": "e2e.cluster3.mongokubernetes.com",
                  "members": 2
                }
              ]
            },
            "credentials": "my-credentials",
            "duplicateServiceObjects": false,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": false,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBOpsManager",
          "metadata": {
            "name": "ops-manager"
          },
          "spec": {
            "adminCredentials": "ops-manager-admin",
            "applicationDatabase": {
              "members": 3,
              "podSpec": {
                "cpu": 1
              }
            },
            "configuration": {
              "mms.fromEmailAddr": "admin@thecompany.com"
            },
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "version": "4.4.1"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBUser",
          "metadata": {
            "name": "my-replica-set-x509-user"
          },
          "spec": {
            "db": "$external",
            "mongodbResourceRef": {
              "name": "my-replica-set"
            },
            "roles": [
              {
                "db": "admin",
                "name": "dbOwner"
              }
            ],
            "username": "CN=my-replica-set-x509-user,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:991eaeb592d64c906163802faf62ae50d1472fd0a5cd52258d54011ea10c5912",
      "bundle_path_digest": "sha256:991eaeb592d64c906163802faf62ae50d1472fd0a5cd52258d54011ea10c5912",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-04T14:23:32.333000+00:00",
      "csv_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\n## Before You Start\n\nTo start using the operator you''ll need an account in MongoDB Cloud Manager or\na MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-operator-credentials/#procedure)\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-project-using-configmap/)\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `opsManager` or `cloudManager` - Enter the name of the ConfigMap containing project information\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n* `type` - Enter MongoDB Deployment Types (\"Standalone\", \"ReplicaSet\", \"ShardedCluster\"\n\n## Supported MongoDB Deployment Types ##\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Requirements for deploying MongoDB OpsManager\n\n* In order to deploy resources of type MongoDB OpsManager, you will need to\ncreate a secret containing the [credentials](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/plan-om-resource/#om-rsrc-prereqs)\nfor the Global Onwer user\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you\nshould create your certificates.  or you can leave the operator to create all\nthe certificates for you. The operator ability to create certs is been\ndepricted due to Kuberentes API changes.\n\nFor more information, please read the official MongoDB\nKubernetes Operator  [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
      "csv_display_name": "MongoDB Enterprise Operator",
      "csv_metadata_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
      "csv_name": "mongodb-enterprise.v1.16.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:03:28.555000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDBOpsManager",
          "plural": "opsmanagers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDB",
          "plural": "mongodb",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBMulti",
          "plural": "mongodbmulti",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBUser",
          "plural": "mongodbusers",
          "version": "v1"
        }
      ],
      "provider": "MongoDB, Inc",
      "related_images": [
        {
          "digest": "sha256:f30f5f272e73e9227437437dfe75bc3623c45a0fccaf7c03026a62b670c33297",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:f30f5f272e73e9227437437dfe75bc3623c45a0fccaf7c03026a62b670c33297",
          "name": "mongodb-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.16.4",
      "version_original": "1.16.4"
    },
    {
      "_id": "62ebd687e81a17217612b91b",
      "alm_examples": [
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "my-replica-set"
          },
          "spec": {
            "credentials": "my-credentials",
            "members": 3,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "sample-sharded-cluster"
          },
          "spec": {
            "configServerCount": 3,
            "credentials": "my-credentials",
            "mongodsPerShardCount": 3,
            "mongosCount": 2,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "shardCount": 1,
            "type": "ShardedCluster",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBMulti",
          "metadata": {
            "name": "multi-replica-set"
          },
          "spec": {
            "clusterSpecList": {
              "clusterSpecs": [
                {
                  "clusterName": "e2e.cluster1.mongokubernetes.com",
                  "members": 2
                },
                {
                  "clusterName": "e2e.cluster2.mongokubernetes.com",
                  "members": 1
                },
                {
                  "clusterName": "e2e.cluster3.mongokubernetes.com",
                  "members": 2
                }
              ]
            },
            "credentials": "my-credentials",
            "duplicateServiceObjects": false,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": false,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBOpsManager",
          "metadata": {
            "name": "ops-manager"
          },
          "spec": {
            "adminCredentials": "ops-manager-admin",
            "applicationDatabase": {
              "members": 3,
              "podSpec": {
                "cpu": 1
              }
            },
            "configuration": {
              "mms.fromEmailAddr": "admin@thecompany.com"
            },
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "version": "4.4.1"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBUser",
          "metadata": {
            "name": "my-replica-set-x509-user"
          },
          "spec": {
            "db": "$external",
            "mongodbResourceRef": {
              "name": "my-replica-set"
            },
            "roles": [
              {
                "db": "admin",
                "name": "dbOwner"
              }
            ],
            "username": "CN=my-replica-set-x509-user,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:991eaeb592d64c906163802faf62ae50d1472fd0a5cd52258d54011ea10c5912",
      "bundle_path_digest": "sha256:991eaeb592d64c906163802faf62ae50d1472fd0a5cd52258d54011ea10c5912",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-04T14:24:07.756000+00:00",
      "csv_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\n## Before You Start\n\nTo start using the operator you''ll need an account in MongoDB Cloud Manager or\na MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-operator-credentials/#procedure)\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-project-using-configmap/)\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `opsManager` or `cloudManager` - Enter the name of the ConfigMap containing project information\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n* `type` - Enter MongoDB Deployment Types (\"Standalone\", \"ReplicaSet\", \"ShardedCluster\"\n\n## Supported MongoDB Deployment Types ##\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Requirements for deploying MongoDB OpsManager\n\n* In order to deploy resources of type MongoDB OpsManager, you will need to\ncreate a secret containing the [credentials](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/plan-om-resource/#om-rsrc-prereqs)\nfor the Global Onwer user\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you\nshould create your certificates.  or you can leave the operator to create all\nthe certificates for you. The operator ability to create certs is been\ndepricted due to Kuberentes API changes.\n\nFor more information, please read the official MongoDB\nKubernetes Operator  [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
      "csv_display_name": "MongoDB Enterprise Operator",
      "csv_metadata_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
      "csv_name": "mongodb-enterprise.v1.16.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:41:52.927000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDBOpsManager",
          "plural": "opsmanagers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDB",
          "plural": "mongodb",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBMulti",
          "plural": "mongodbmulti",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBUser",
          "plural": "mongodbusers",
          "version": "v1"
        }
      ],
      "provider": "MongoDB, Inc",
      "related_images": [
        {
          "digest": "sha256:f30f5f272e73e9227437437dfe75bc3623c45a0fccaf7c03026a62b670c33297",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:f30f5f272e73e9227437437dfe75bc3623c45a0fccaf7c03026a62b670c33297",
          "name": "mongodb-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.16.4",
      "version_original": "1.16.4"
    },
    {
      "_id": "62ebd6cec7996e54ea088633",
      "alm_examples": [
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "my-replica-set"
          },
          "spec": {
            "credentials": "my-credentials",
            "members": 3,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "sample-sharded-cluster"
          },
          "spec": {
            "configServerCount": 3,
            "credentials": "my-credentials",
            "mongodsPerShardCount": 3,
            "mongosCount": 2,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "shardCount": 1,
            "type": "ShardedCluster",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBMulti",
          "metadata": {
            "name": "multi-replica-set"
          },
          "spec": {
            "clusterSpecList": {
              "clusterSpecs": [
                {
                  "clusterName": "e2e.cluster1.mongokubernetes.com",
                  "members": 2
                },
                {
                  "clusterName": "e2e.cluster2.mongokubernetes.com",
                  "members": 1
                },
                {
                  "clusterName": "e2e.cluster3.mongokubernetes.com",
                  "members": 2
                }
              ]
            },
            "credentials": "my-credentials",
            "duplicateServiceObjects": false,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": false,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBOpsManager",
          "metadata": {
            "name": "ops-manager"
          },
          "spec": {
            "adminCredentials": "ops-manager-admin",
            "applicationDatabase": {
              "members": 3,
              "podSpec": {
                "cpu": 1
              }
            },
            "configuration": {
              "mms.fromEmailAddr": "admin@thecompany.com"
            },
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "version": "4.4.1"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBUser",
          "metadata": {
            "name": "my-replica-set-x509-user"
          },
          "spec": {
            "db": "$external",
            "mongodbResourceRef": {
              "name": "my-replica-set"
            },
            "roles": [
              {
                "db": "admin",
                "name": "dbOwner"
              }
            ],
            "username": "CN=my-replica-set-x509-user,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:991eaeb592d64c906163802faf62ae50d1472fd0a5cd52258d54011ea10c5912",
      "bundle_path_digest": "sha256:991eaeb592d64c906163802faf62ae50d1472fd0a5cd52258d54011ea10c5912",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-04T14:25:18.582000+00:00",
      "csv_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\n## Before You Start\n\nTo start using the operator you''ll need an account in MongoDB Cloud Manager or\na MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-operator-credentials/#procedure)\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-project-using-configmap/)\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `opsManager` or `cloudManager` - Enter the name of the ConfigMap containing project information\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n* `type` - Enter MongoDB Deployment Types (\"Standalone\", \"ReplicaSet\", \"ShardedCluster\"\n\n## Supported MongoDB Deployment Types ##\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Requirements for deploying MongoDB OpsManager\n\n* In order to deploy resources of type MongoDB OpsManager, you will need to\ncreate a secret containing the [credentials](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/plan-om-resource/#om-rsrc-prereqs)\nfor the Global Onwer user\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you\nshould create your certificates.  or you can leave the operator to create all\nthe certificates for you. The operator ability to create certs is been\ndepricted due to Kuberentes API changes.\n\nFor more information, please read the official MongoDB\nKubernetes Operator  [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
      "csv_display_name": "MongoDB Enterprise Operator",
      "csv_metadata_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
      "csv_name": "mongodb-enterprise.v1.16.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:00:03.492000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDBUser",
          "plural": "mongodbusers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBOpsManager",
          "plural": "opsmanagers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDB",
          "plural": "mongodb",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBMulti",
          "plural": "mongodbmulti",
          "version": "v1"
        }
      ],
      "provider": "MongoDB, Inc",
      "related_images": [
        {
          "digest": "sha256:f30f5f272e73e9227437437dfe75bc3623c45a0fccaf7c03026a62b670c33297",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:f30f5f272e73e9227437437dfe75bc3623c45a0fccaf7c03026a62b670c33297",
          "name": "mongodb-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.16.4",
      "version_original": "1.16.4"
    },
    {
      "_id": "62ebda768c2137a6fb66c830",
      "alm_examples": [
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "my-replica-set"
          },
          "spec": {
            "credentials": "my-credentials",
            "members": 3,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "sample-sharded-cluster"
          },
          "spec": {
            "configServerCount": 3,
            "credentials": "my-credentials",
            "mongodsPerShardCount": 3,
            "mongosCount": 2,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "shardCount": 1,
            "type": "ShardedCluster",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBMulti",
          "metadata": {
            "name": "multi-replica-set"
          },
          "spec": {
            "clusterSpecList": {
              "clusterSpecs": [
                {
                  "clusterName": "e2e.cluster1.mongokubernetes.com",
                  "members": 2
                },
                {
                  "clusterName": "e2e.cluster2.mongokubernetes.com",
                  "members": 1
                },
                {
                  "clusterName": "e2e.cluster3.mongokubernetes.com",
                  "members": 2
                }
              ]
            },
            "credentials": "my-credentials",
            "duplicateServiceObjects": false,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": false,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBOpsManager",
          "metadata": {
            "name": "ops-manager"
          },
          "spec": {
            "adminCredentials": "ops-manager-admin",
            "applicationDatabase": {
              "members": 3,
              "podSpec": {
                "cpu": 1
              }
            },
            "configuration": {
              "mms.fromEmailAddr": "admin@thecompany.com"
            },
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "version": "4.4.1"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBUser",
          "metadata": {
            "name": "my-replica-set-x509-user"
          },
          "spec": {
            "db": "$external",
            "mongodbResourceRef": {
              "name": "my-replica-set"
            },
            "roles": [
              {
                "db": "admin",
                "name": "dbOwner"
              }
            ],
            "username": "CN=my-replica-set-x509-user,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:991eaeb592d64c906163802faf62ae50d1472fd0a5cd52258d54011ea10c5912",
      "bundle_path_digest": "sha256:991eaeb592d64c906163802faf62ae50d1472fd0a5cd52258d54011ea10c5912",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-04T14:40:54.431000+00:00",
      "csv_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\n## Before You Start\n\nTo start using the operator you''ll need an account in MongoDB Cloud Manager or\na MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-operator-credentials/#procedure)\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-project-using-configmap/)\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `opsManager` or `cloudManager` - Enter the name of the ConfigMap containing project information\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n* `type` - Enter MongoDB Deployment Types (\"Standalone\", \"ReplicaSet\", \"ShardedCluster\"\n\n## Supported MongoDB Deployment Types ##\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Requirements for deploying MongoDB OpsManager\n\n* In order to deploy resources of type MongoDB OpsManager, you will need to\ncreate a secret containing the [credentials](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/plan-om-resource/#om-rsrc-prereqs)\nfor the Global Onwer user\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you\nshould create your certificates.  or you can leave the operator to create all\nthe certificates for you. The operator ability to create certs is been\ndepricted due to Kuberentes API changes.\n\nFor more information, please read the official MongoDB\nKubernetes Operator  [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
      "csv_display_name": "MongoDB Enterprise Operator",
      "csv_metadata_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
      "csv_name": "mongodb-enterprise.v1.16.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:46:42.124000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDB",
          "plural": "mongodb",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBMulti",
          "plural": "mongodbmulti",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBUser",
          "plural": "mongodbusers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBOpsManager",
          "plural": "opsmanagers",
          "version": "v1"
        }
      ],
      "provider": "MongoDB, Inc",
      "related_images": [
        {
          "digest": "sha256:f30f5f272e73e9227437437dfe75bc3623c45a0fccaf7c03026a62b670c33297",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:f30f5f272e73e9227437437dfe75bc3623c45a0fccaf7c03026a62b670c33297",
          "name": "mongodb-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.16.4",
      "version_original": "1.16.4"
    },
    {
      "_id": "62ec5a2becdd7d25b4347c1b",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {
              "config": {
                "default": "",
                "name": ""
              }
            },
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "rollingUpdate": {
                "maxUnavailable": "1"
              },
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "initContainer": {},
              "use_ocp_driver_toolkit": true
            },
            "sandboxDevicePlugin": {
              "enabled": true
            },
            "sandboxWorkloads": {
              "defaultWorkload": "container",
              "enabled": false
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            },
            "vfioManager": {
              "enabled": true
            },
            "vgpuDeviceManager": {
              "config": {
                "default": "default",
                "name": "vgpu-devices-config"
              },
              "enabled": true
            },
            "vgpuManager": {
              "enabled": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64"
      ],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:3128cd81b56975643c1c88c6ceff6d72e918a67ec2d6a5a606b6e04753c5b0ce",
      "bundle_path_digest": "sha256:3128cd81b56975643c1c88c6ceff6d72e918a67ec2d6a5a606b6e04753c5b0ce",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-04T23:45:47.819000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://cloud.redhat.com/blog/introducing-the-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.11.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:59:34.129000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "image": "nvcr.io/nvidia/driver@sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "name": "driver-image"
        },
        {
          "digest": "sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "image": "nvcr.io/nvidia/driver@sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "name": "driver-image-510"
        },
        {
          "digest": "sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "image": "nvcr.io/nvidia/driver@sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "name": "driver-image-470"
        },
        {
          "digest": "sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "image": "nvcr.io/nvidia/driver@sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "name": "driver-image-450"
        },
        {
          "digest": "sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:10d825ccbfcf87f8c74f841fa89ae345f2d381fb47a5b2b31f61b72ebbbb0915",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:10d825ccbfcf87f8c74f841fa89ae345f2d381fb47a5b2b31f61b72ebbbb0915",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:e88e610d09f1a7528ab32cb54259aee340eba2b2bf66b92a28157626daadc82d",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:e88e610d09f1a7528ab32cb54259aee340eba2b2bf66b92a28157626daadc82d",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "vfio-manager-image"
        },
        {
          "digest": "sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "image": "nvcr.io/nvidia/kubevirt-gpu-device-plugin@sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "name": "sandbox-device-plugin-image"
        },
        {
          "digest": "sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "image": "nvcr.io/nvidia/cloud-native/vgpu-device-manager@sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "name": "vgpu-device-manager-image"
        },
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator-53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d-annotation"
        },
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v1.11.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.11.1",
      "version_original": "1.11.1"
    },
    {
      "_id": "62ec5a2ce81a17217612d074",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {
              "config": {
                "default": "",
                "name": ""
              }
            },
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "rollingUpdate": {
                "maxUnavailable": "1"
              },
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "initContainer": {},
              "use_ocp_driver_toolkit": true
            },
            "sandboxDevicePlugin": {
              "enabled": true
            },
            "sandboxWorkloads": {
              "defaultWorkload": "container",
              "enabled": false
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            },
            "vfioManager": {
              "enabled": true
            },
            "vgpuDeviceManager": {
              "config": {
                "default": "default",
                "name": "vgpu-devices-config"
              },
              "enabled": true
            },
            "vgpuManager": {
              "enabled": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64"
      ],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:3128cd81b56975643c1c88c6ceff6d72e918a67ec2d6a5a606b6e04753c5b0ce",
      "bundle_path_digest": "sha256:3128cd81b56975643c1c88c6ceff6d72e918a67ec2d6a5a606b6e04753c5b0ce",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.11",
      "creation_date": "2022-08-04T23:45:48.471000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://cloud.redhat.com/blog/introducing-the-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.11.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:59:38.913000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "image": "nvcr.io/nvidia/driver@sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "name": "driver-image"
        },
        {
          "digest": "sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "image": "nvcr.io/nvidia/driver@sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "name": "driver-image-510"
        },
        {
          "digest": "sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "image": "nvcr.io/nvidia/driver@sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "name": "driver-image-470"
        },
        {
          "digest": "sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "image": "nvcr.io/nvidia/driver@sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "name": "driver-image-450"
        },
        {
          "digest": "sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:10d825ccbfcf87f8c74f841fa89ae345f2d381fb47a5b2b31f61b72ebbbb0915",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:10d825ccbfcf87f8c74f841fa89ae345f2d381fb47a5b2b31f61b72ebbbb0915",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:e88e610d09f1a7528ab32cb54259aee340eba2b2bf66b92a28157626daadc82d",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:e88e610d09f1a7528ab32cb54259aee340eba2b2bf66b92a28157626daadc82d",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "vfio-manager-image"
        },
        {
          "digest": "sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "image": "nvcr.io/nvidia/kubevirt-gpu-device-plugin@sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "name": "sandbox-device-plugin-image"
        },
        {
          "digest": "sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "image": "nvcr.io/nvidia/cloud-native/vgpu-device-manager@sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "name": "vgpu-device-manager-image"
        },
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator-53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d-annotation"
        },
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v1.11.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.11.1",
      "version_original": "1.11.1"
    },
    {
      "_id": "62ec5a338c2137a6fb66dee9",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {
              "config": {
                "default": "",
                "name": ""
              }
            },
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "rollingUpdate": {
                "maxUnavailable": "1"
              },
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "initContainer": {},
              "use_ocp_driver_toolkit": true
            },
            "sandboxDevicePlugin": {
              "enabled": true
            },
            "sandboxWorkloads": {
              "defaultWorkload": "container",
              "enabled": false
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            },
            "vfioManager": {
              "enabled": true
            },
            "vgpuDeviceManager": {
              "config": {
                "default": "default",
                "name": "vgpu-devices-config"
              },
              "enabled": true
            },
            "vgpuManager": {
              "enabled": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64"
      ],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:3128cd81b56975643c1c88c6ceff6d72e918a67ec2d6a5a606b6e04753c5b0ce",
      "bundle_path_digest": "sha256:3128cd81b56975643c1c88c6ceff6d72e918a67ec2d6a5a606b6e04753c5b0ce",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-04T23:45:55.117000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://cloud.redhat.com/blog/introducing-the-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.11.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:30:14.530000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "image": "nvcr.io/nvidia/driver@sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "name": "driver-image"
        },
        {
          "digest": "sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "image": "nvcr.io/nvidia/driver@sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "name": "driver-image-510"
        },
        {
          "digest": "sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "image": "nvcr.io/nvidia/driver@sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "name": "driver-image-470"
        },
        {
          "digest": "sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "image": "nvcr.io/nvidia/driver@sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "name": "driver-image-450"
        },
        {
          "digest": "sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:10d825ccbfcf87f8c74f841fa89ae345f2d381fb47a5b2b31f61b72ebbbb0915",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:10d825ccbfcf87f8c74f841fa89ae345f2d381fb47a5b2b31f61b72ebbbb0915",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:e88e610d09f1a7528ab32cb54259aee340eba2b2bf66b92a28157626daadc82d",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:e88e610d09f1a7528ab32cb54259aee340eba2b2bf66b92a28157626daadc82d",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "vfio-manager-image"
        },
        {
          "digest": "sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "image": "nvcr.io/nvidia/kubevirt-gpu-device-plugin@sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "name": "sandbox-device-plugin-image"
        },
        {
          "digest": "sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "image": "nvcr.io/nvidia/cloud-native/vgpu-device-manager@sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "name": "vgpu-device-manager-image"
        },
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator-53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d-annotation"
        },
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v1.11.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.11.1",
      "version_original": "1.11.1"
    },
    {
      "_id": "62ec5a33c7996e54ea089de5",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {
              "config": {
                "default": "",
                "name": ""
              }
            },
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "rollingUpdate": {
                "maxUnavailable": "1"
              },
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "initContainer": {},
              "use_ocp_driver_toolkit": true
            },
            "sandboxDevicePlugin": {
              "enabled": true
            },
            "sandboxWorkloads": {
              "defaultWorkload": "container",
              "enabled": false
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            },
            "vfioManager": {
              "enabled": true
            },
            "vgpuDeviceManager": {
              "config": {
                "default": "default",
                "name": "vgpu-devices-config"
              },
              "enabled": true
            },
            "vgpuManager": {
              "enabled": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64"
      ],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:3128cd81b56975643c1c88c6ceff6d72e918a67ec2d6a5a606b6e04753c5b0ce",
      "bundle_path_digest": "sha256:3128cd81b56975643c1c88c6ceff6d72e918a67ec2d6a5a606b6e04753c5b0ce",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.11",
      "creation_date": "2022-08-04T23:45:55.674000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://cloud.redhat.com/blog/introducing-the-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.11.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:30:46.486000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "image": "nvcr.io/nvidia/driver@sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "name": "driver-image"
        },
        {
          "digest": "sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "image": "nvcr.io/nvidia/driver@sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "name": "driver-image-510"
        },
        {
          "digest": "sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "image": "nvcr.io/nvidia/driver@sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "name": "driver-image-470"
        },
        {
          "digest": "sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "image": "nvcr.io/nvidia/driver@sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "name": "driver-image-450"
        },
        {
          "digest": "sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:10d825ccbfcf87f8c74f841fa89ae345f2d381fb47a5b2b31f61b72ebbbb0915",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:10d825ccbfcf87f8c74f841fa89ae345f2d381fb47a5b2b31f61b72ebbbb0915",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:e88e610d09f1a7528ab32cb54259aee340eba2b2bf66b92a28157626daadc82d",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:e88e610d09f1a7528ab32cb54259aee340eba2b2bf66b92a28157626daadc82d",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "vfio-manager-image"
        },
        {
          "digest": "sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "image": "nvcr.io/nvidia/kubevirt-gpu-device-plugin@sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "name": "sandbox-device-plugin-image"
        },
        {
          "digest": "sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "image": "nvcr.io/nvidia/cloud-native/vgpu-device-manager@sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "name": "vgpu-device-manager-image"
        },
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator-53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d-annotation"
        },
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v1.11.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.11.1",
      "version_original": "1.11.1"
    },
    {
      "_id": "62ec5a4ee81a17217612d076",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {
              "config": {
                "default": "",
                "name": ""
              }
            },
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "rollingUpdate": {
                "maxUnavailable": "1"
              },
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "initContainer": {},
              "use_ocp_driver_toolkit": true
            },
            "sandboxDevicePlugin": {
              "enabled": true
            },
            "sandboxWorkloads": {
              "defaultWorkload": "container",
              "enabled": false
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            },
            "vfioManager": {
              "enabled": true
            },
            "vgpuDeviceManager": {
              "config": {
                "default": "default",
                "name": "vgpu-devices-config"
              },
              "enabled": true
            },
            "vgpuManager": {
              "enabled": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64"
      ],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:3128cd81b56975643c1c88c6ceff6d72e918a67ec2d6a5a606b6e04753c5b0ce",
      "bundle_path_digest": "sha256:3128cd81b56975643c1c88c6ceff6d72e918a67ec2d6a5a606b6e04753c5b0ce",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-04T23:46:22.783000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://cloud.redhat.com/blog/introducing-the-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.11.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:56:46.216000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "image": "nvcr.io/nvidia/driver@sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "name": "driver-image"
        },
        {
          "digest": "sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "image": "nvcr.io/nvidia/driver@sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "name": "driver-image-510"
        },
        {
          "digest": "sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "image": "nvcr.io/nvidia/driver@sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "name": "driver-image-470"
        },
        {
          "digest": "sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "image": "nvcr.io/nvidia/driver@sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "name": "driver-image-450"
        },
        {
          "digest": "sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:10d825ccbfcf87f8c74f841fa89ae345f2d381fb47a5b2b31f61b72ebbbb0915",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:10d825ccbfcf87f8c74f841fa89ae345f2d381fb47a5b2b31f61b72ebbbb0915",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:e88e610d09f1a7528ab32cb54259aee340eba2b2bf66b92a28157626daadc82d",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:e88e610d09f1a7528ab32cb54259aee340eba2b2bf66b92a28157626daadc82d",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "vfio-manager-image"
        },
        {
          "digest": "sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "image": "nvcr.io/nvidia/kubevirt-gpu-device-plugin@sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "name": "sandbox-device-plugin-image"
        },
        {
          "digest": "sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "image": "nvcr.io/nvidia/cloud-native/vgpu-device-manager@sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "name": "vgpu-device-manager-image"
        },
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator-53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d-annotation"
        },
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v1.11.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.11.1",
      "version_original": "1.11.1"
    },
    {
      "_id": "62ec5a4f8c2137a6fb66deed",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {
              "config": {
                "default": "",
                "name": ""
              }
            },
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "rollingUpdate": {
                "maxUnavailable": "1"
              },
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "initContainer": {},
              "use_ocp_driver_toolkit": true
            },
            "sandboxDevicePlugin": {
              "enabled": true
            },
            "sandboxWorkloads": {
              "defaultWorkload": "container",
              "enabled": false
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            },
            "vfioManager": {
              "enabled": true
            },
            "vgpuDeviceManager": {
              "config": {
                "default": "default",
                "name": "vgpu-devices-config"
              },
              "enabled": true
            },
            "vgpuManager": {
              "enabled": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "arm64"
      ],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:3128cd81b56975643c1c88c6ceff6d72e918a67ec2d6a5a606b6e04753c5b0ce",
      "bundle_path_digest": "sha256:3128cd81b56975643c1c88c6ceff6d72e918a67ec2d6a5a606b6e04753c5b0ce",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.11",
      "creation_date": "2022-08-04T23:46:23.179000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://cloud.redhat.com/blog/introducing-the-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.11.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:56:56.475000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:b90a519e9f30fbc013e1806bc081268724e9e80b4035c67c167ab3b43a37704a",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:8490d555131a57a11311561667ea9ec8cf554a399d2492a6f9e6677c01ec4b9a",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:2d6e86db0e2b0db64c00566938e1851e25d4bb1019b1e7b696e2b199cba33397",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "image": "nvcr.io/nvidia/driver@sha256:8c9fabc1cd773e9526eb7e8526084f065f6cca9d0fd8dc2a672a0bb717f1cc60",
          "name": "driver-image"
        },
        {
          "digest": "sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "image": "nvcr.io/nvidia/driver@sha256:6e2902d73c54cf57bec94edf166d206cfeb0b948b5aab70800ccbe025064b3a1",
          "name": "driver-image-510"
        },
        {
          "digest": "sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "image": "nvcr.io/nvidia/driver@sha256:cf8ce04907d0e8decf90a8dccfa6134af9c39509d2f8a21c355ed71223acacdb",
          "name": "driver-image-470"
        },
        {
          "digest": "sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "image": "nvcr.io/nvidia/driver@sha256:b8799e7397fae5a27446737443091eed05b918816f53c400a48be71125ee22e8",
          "name": "driver-image-450"
        },
        {
          "digest": "sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:7a0ccbcbe8d379bfc441e06504eb45d0d433a37e2a9e6dde83d13347296ebe81",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:39127d04c9faff3f22068dcf463ed48d02be684cd18e3f14db843bddbdd783a7",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:3804e2b03c44d25dd410e3882b7fb6d1fde41f55110d7702af47136b042a63ff",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:10d825ccbfcf87f8c74f841fa89ae345f2d381fb47a5b2b31f61b72ebbbb0915",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:10d825ccbfcf87f8c74f841fa89ae345f2d381fb47a5b2b31f61b72ebbbb0915",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:e88e610d09f1a7528ab32cb54259aee340eba2b2bf66b92a28157626daadc82d",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:e88e610d09f1a7528ab32cb54259aee340eba2b2bf66b92a28157626daadc82d",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "image": "nvcr.io/nvidia/cuda@sha256:4400b56f81095b24fc9dde93ad7ad7d0ca6a7e9736c4c7f1d4e2bcbf0afbe45c",
          "name": "vfio-manager-image"
        },
        {
          "digest": "sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "image": "nvcr.io/nvidia/kubevirt-gpu-device-plugin@sha256:f48e8b430248a9cadf716a9211bb0050d4a663d1f1386ea107e72917f82e5b5f",
          "name": "sandbox-device-plugin-image"
        },
        {
          "digest": "sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "image": "nvcr.io/nvidia/cloud-native/vgpu-device-manager@sha256:16ee5b1a8d9217f761c40a06c7ae598cbc893fbc35d99ff9b84fa886ea6b9b37",
          "name": "vgpu-device-manager-image"
        },
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator-53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d-annotation"
        },
        {
          "digest": "sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:53180f81fb7e1e4bcd49a556bc6285c2262abbab8083b29d2688b02d4200dd2d",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v1.11.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.11.1",
      "version_original": "1.11.1"
    },
    {
      "_id": "62ed7b6796f50062ffb6bbaa",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCollectionGroup",
          "metadata": {
            "name": "my-collection-group"
          },
          "spec": {
            "maxTTL": "",
            "names": [
              "my-collection"
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCollection",
          "metadata": {
            "name": "my-collection"
          },
          "spec": {
            "maxTTL": "",
            "name": "my-collection"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseScopeGroup",
          "metadata": {
            "name": "my-scope-group"
          },
          "spec": {
            "collections": {},
            "names": [
              "my-scope"
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseScope",
          "metadata": {
            "name": "my-scope"
          },
          "spec": {
            "collections": {},
            "name": "my-scope"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMigrationReplication",
          "metadata": {
            "name": "default-migration"
          },
          "spec": {
            "bucket": "default",
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:84ea69b8c4a4b823597ccd4e4260947de0f0520c2330c19fd8b24f53e508b680",
      "bundle_path_digest": "sha256:84ea69b8c4a4b823597ccd4e4260947de0f0520c2330c19fd8b24f53e508b680",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "2.3.1",
      "creation_date": "2022-08-05T20:19:51.351000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.3.1-2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-05T20:19:51.351000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMigrationReplication",
          "plural": "couchbasemigrationreplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseScopeGroup",
          "plural": "couchbasescopegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseScope",
          "plural": "couchbasescopes",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCollectionGroup",
          "plural": "couchbasecollectiongroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCollection",
          "plural": "couchbasecollections",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9ff13f4d8d8efc15f8c21f3ea2ddf6cd103731f02c1f26a1dd173dbf17d2afd0",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:9ff13f4d8d8efc15f8c21f3ea2ddf6cd103731f02c1f26a1dd173dbf17d2afd0",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "name": "couchbase-server"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "couchbase-backup"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "couchbase-metrics"
        },
        {
          "digest": "sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "exporter-fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6-annotation"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "operator-backup-e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935-annotation"
        },
        {
          "digest": "sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "name": "server-05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.3.1-2",
      "version_original": "2.3.1-2"
    },
    {
      "_id": "62ed7ba496f50062ffb6bbbd",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCollectionGroup",
          "metadata": {
            "name": "my-collection-group"
          },
          "spec": {
            "maxTTL": "",
            "names": [
              "my-collection"
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCollection",
          "metadata": {
            "name": "my-collection"
          },
          "spec": {
            "maxTTL": "",
            "name": "my-collection"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseScopeGroup",
          "metadata": {
            "name": "my-scope-group"
          },
          "spec": {
            "collections": {},
            "names": [
              "my-scope"
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseScope",
          "metadata": {
            "name": "my-scope"
          },
          "spec": {
            "collections": {},
            "name": "my-scope"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMigrationReplication",
          "metadata": {
            "name": "default-migration"
          },
          "spec": {
            "bucket": "default",
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:84ea69b8c4a4b823597ccd4e4260947de0f0520c2330c19fd8b24f53e508b680",
      "bundle_path_digest": "sha256:84ea69b8c4a4b823597ccd4e4260947de0f0520c2330c19fd8b24f53e508b680",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "2.3.1",
      "creation_date": "2022-08-05T20:20:52.365000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.3.1-2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-05T20:20:52.365000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCollection",
          "plural": "couchbasecollections",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCollectionGroup",
          "plural": "couchbasecollectiongroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseScope",
          "plural": "couchbasescopes",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMigrationReplication",
          "plural": "couchbasemigrationreplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseScopeGroup",
          "plural": "couchbasescopegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9ff13f4d8d8efc15f8c21f3ea2ddf6cd103731f02c1f26a1dd173dbf17d2afd0",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:9ff13f4d8d8efc15f8c21f3ea2ddf6cd103731f02c1f26a1dd173dbf17d2afd0",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "name": "couchbase-server"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "couchbase-backup"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "couchbase-metrics"
        },
        {
          "digest": "sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "exporter-fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6-annotation"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "operator-backup-e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935-annotation"
        },
        {
          "digest": "sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "name": "server-05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.3.1-2",
      "version_original": "2.3.1-2"
    },
    {
      "_id": "62ed7bcc96f50062ffb6bbca",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCollectionGroup",
          "metadata": {
            "name": "my-collection-group"
          },
          "spec": {
            "maxTTL": "",
            "names": [
              "my-collection"
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCollection",
          "metadata": {
            "name": "my-collection"
          },
          "spec": {
            "maxTTL": "",
            "name": "my-collection"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseScopeGroup",
          "metadata": {
            "name": "my-scope-group"
          },
          "spec": {
            "collections": {},
            "names": [
              "my-scope"
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseScope",
          "metadata": {
            "name": "my-scope"
          },
          "spec": {
            "collections": {},
            "name": "my-scope"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMigrationReplication",
          "metadata": {
            "name": "default-migration"
          },
          "spec": {
            "bucket": "default",
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:84ea69b8c4a4b823597ccd4e4260947de0f0520c2330c19fd8b24f53e508b680",
      "bundle_path_digest": "sha256:84ea69b8c4a4b823597ccd4e4260947de0f0520c2330c19fd8b24f53e508b680",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "2.3.1",
      "creation_date": "2022-08-05T20:21:32.852000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.3.1-2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-05T20:21:32.852000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMigrationReplication",
          "plural": "couchbasemigrationreplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCollection",
          "plural": "couchbasecollections",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseScopeGroup",
          "plural": "couchbasescopegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseScope",
          "plural": "couchbasescopes",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCollectionGroup",
          "plural": "couchbasecollectiongroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9ff13f4d8d8efc15f8c21f3ea2ddf6cd103731f02c1f26a1dd173dbf17d2afd0",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:9ff13f4d8d8efc15f8c21f3ea2ddf6cd103731f02c1f26a1dd173dbf17d2afd0",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "name": "couchbase-server"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "couchbase-backup"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "couchbase-metrics"
        },
        {
          "digest": "sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "exporter-fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6-annotation"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "operator-backup-e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935-annotation"
        },
        {
          "digest": "sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "name": "server-05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.3.1-2",
      "version_original": "2.3.1-2"
    },
    {
      "_id": "62ed8d0296f50062ffb6be8e",
      "alm_examples": [
        {
          "api_version": "hxcsi.cisco.com/v2",
          "kind": "HXCSIDriver",
          "metadata": {
            "name": "cisco-hyperflex-csi-driver"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {},
            "fullnameOverride": "",
            "hx": {
              "clientId": "INPUT_VALUE_HERE",
              "dockerRegistryName": "INPUT_VALUE_HERE",
              "iscsiUrl": "INPUT_VALUE_HERE",
              "token": "INPUT_VALUE_HERE",
              "url": "INPUT_VALUE_HERE"
            },
            "image": {
              "attacher": "hxcsi-csi-attacher:3.2.1-cisco1",
              "hxcsi": "hxcsi-ubi8:hxcsi-1.2.5-latest",
              "provisioner": "hxcsi-csi-provisioner:2.2.1-cisco1",
              "pullPolicy": "Always",
              "registrar": "hxcsi-csi-node-driver-registrar:2.2.0-cisco1",
              "resizer": "hxcsi-csi-resizer:1.2.0-cisco1",
              "tag": ""
            },
            "ingress": {},
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 2,
            "resources": {},
            "securityContext": {},
            "service": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "storageClass": {
              "isDefault": "false",
              "name": "hyperflex"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hxcsiadmin/hxcsi-helm-bundle@sha256:2d2ca902ab19033a83ab70c5a71f54d3956010b9b0e17f13f5e0f206ba87a1ec",
      "bundle_path_digest": "sha256:2d2ca902ab19033a83ab70c5a71f54d3956010b9b0e17f13f5e0f206ba87a1ec",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-05T21:34:58.047000+00:00",
      "csv_description": "\nCisco HyperFlex Data Platform (HX Data Platform) is a hyperconverged software appliance that transforms Cisco servers into a single pool of compute and storage resources. It eliminates the need for network storage and enables seamless interoperability between computing and storage in virtual environments. The Cisco HX Data Platform provides a highly fault-tolerant distributed storage system that preserves data integrity and optimizes performance for virtual machine (VM) storage workloads. In addition, native compression and deduplication reduce storage space occupied by the VMs and VM workloads.\n### HyperFlex CSI Driver\nThe Cisco HyperFlex Kubernetes CSI Integration allows Cisco HyperFlex to dynamically provide persistent storage to stateful Kubernetes workloads running on Cisco HyperFlex. The integration enables orchestration of the entire Persistent Volume object lifecycle to be offloaded and managed by Cisco HyperFlex, while being driven (initiated) by developers and users through standard Kubernetes Persistent Volume Claim objects. Developers and users get the benefit of leveraging Cisco HyperFlex for their Kubernetes persistent storage needs with zero additional administration overhead from their perspective.\n### Features Support\n- Support for CSI Spec 1.2 APIs\n- Kubernetes 1.18, 1.19, 1.20, 1.21 support\n- Kubernetes Cluster multi tenancy target masking using dedicated initiator group\n- Dynamic creation and deletion of volumes\n- Dynamic volume attach and detach\n- Block access support\n- CHAP support for iSCSI sessions\n- Clone volume (when source volume is from the same Datastore)\n- PV support with different filesystems (Ext4, Ext3, XFS)\n- Volume space statistics reporting per CSI specs\n- Multi-writer support (ReadWriteMany) for Block Mode only\n- Volume resize support for block mode volumes and ext3, ext4 filesystem volumes (expansion)\n- The HXCSI driver version 1.2.5 has been validated on HyperFlex Data Platform (HXDP) version 5.0.1a.\n",
      "csv_display_name": "Cisco Hyperflex CSI Operator",
      "csv_metadata_description": "Cisco HXCSI Plugin for RedHat OpenShift Platform",
      "csv_name": "cisco-hxcsi-operator.v1.2.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:18:08.521000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "cisco-hxcsi-operator",
      "provided_apis": [
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "version": "v1"
        },
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "version": "v2"
        }
      ],
      "provider": "Cisco Systems Inc",
      "related_images": [
        {
          "digest": "sha256:6b8b96848a92b987e5802b00ee4d476c9393ae3249bfa3066ae8000a07adec03",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-bundle@sha256:6b8b96848a92b987e5802b00ee4d476c9393ae3249bfa3066ae8000a07adec03",
          "name": "hxcsi-helm-bundle-6b8b96848a92b987e5802b00ee4d476c9393ae3249bfa3066ae8000a07adec03-annotation"
        },
        {
          "digest": "sha256:3f73fcb9671cd6d41dab04876008dd9316dafa01fb8d9869af92f658cfceec0d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3f73fcb9671cd6d41dab04876008dd9316dafa01fb8d9869af92f658cfceec0d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:332bf5b0fd0556124d1819917504a859ebcefd4ce59d7d8be9f63b4d9c18a6c4",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-operator@sha256:332bf5b0fd0556124d1819917504a859ebcefd4ce59d7d8be9f63b4d9c18a6c4",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.2.5",
      "version_original": "1.2.5"
    },
    {
      "_id": "62ed91298c2137a6fb671c36",
      "alm_examples": [
        {
          "api_version": "hxcsi.cisco.com/v2",
          "kind": "HXCSIDriver",
          "metadata": {
            "name": "cisco-hyperflex-csi-driver"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {},
            "fullnameOverride": "",
            "hx": {
              "clientId": "INPUT_VALUE_HERE",
              "dockerRegistryName": "INPUT_VALUE_HERE",
              "iscsiUrl": "INPUT_VALUE_HERE",
              "token": "INPUT_VALUE_HERE",
              "url": "INPUT_VALUE_HERE"
            },
            "image": {
              "attacher": "hxcsi-csi-attacher:3.2.1-cisco1",
              "hxcsi": "hxcsi-ubi8:hxcsi-1.2.5-latest",
              "provisioner": "hxcsi-csi-provisioner:2.2.1-cisco1",
              "pullPolicy": "Always",
              "registrar": "hxcsi-csi-node-driver-registrar:2.2.0-cisco1",
              "resizer": "hxcsi-csi-resizer:1.2.0-cisco1",
              "tag": ""
            },
            "ingress": {},
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 2,
            "resources": {},
            "securityContext": {},
            "service": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "storageClass": {
              "isDefault": "false",
              "name": "hyperflex"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hxcsiadmin/hxcsi-helm-bundle@sha256:2d2ca902ab19033a83ab70c5a71f54d3956010b9b0e17f13f5e0f206ba87a1ec",
      "bundle_path_digest": "sha256:2d2ca902ab19033a83ab70c5a71f54d3956010b9b0e17f13f5e0f206ba87a1ec",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-05T21:52:41.369000+00:00",
      "csv_description": "\nCisco HyperFlex Data Platform (HX Data Platform) is a hyperconverged software appliance that transforms Cisco servers into a single pool of compute and storage resources. It eliminates the need for network storage and enables seamless interoperability between computing and storage in virtual environments. The Cisco HX Data Platform provides a highly fault-tolerant distributed storage system that preserves data integrity and optimizes performance for virtual machine (VM) storage workloads. In addition, native compression and deduplication reduce storage space occupied by the VMs and VM workloads.\n### HyperFlex CSI Driver\nThe Cisco HyperFlex Kubernetes CSI Integration allows Cisco HyperFlex to dynamically provide persistent storage to stateful Kubernetes workloads running on Cisco HyperFlex. The integration enables orchestration of the entire Persistent Volume object lifecycle to be offloaded and managed by Cisco HyperFlex, while being driven (initiated) by developers and users through standard Kubernetes Persistent Volume Claim objects. Developers and users get the benefit of leveraging Cisco HyperFlex for their Kubernetes persistent storage needs with zero additional administration overhead from their perspective.\n### Features Support\n- Support for CSI Spec 1.2 APIs\n- Kubernetes 1.18, 1.19, 1.20, 1.21 support\n- Kubernetes Cluster multi tenancy target masking using dedicated initiator group\n- Dynamic creation and deletion of volumes\n- Dynamic volume attach and detach\n- Block access support\n- CHAP support for iSCSI sessions\n- Clone volume (when source volume is from the same Datastore)\n- PV support with different filesystems (Ext4, Ext3, XFS)\n- Volume space statistics reporting per CSI specs\n- Multi-writer support (ReadWriteMany) for Block Mode only\n- Volume resize support for block mode volumes and ext3, ext4 filesystem volumes (expansion)\n- The HXCSI driver version 1.2.5 has been validated on HyperFlex Data Platform (HXDP) version 5.0.1a.\n",
      "csv_display_name": "Cisco Hyperflex CSI Operator",
      "csv_metadata_description": "Cisco HXCSI Plugin for RedHat OpenShift Platform",
      "csv_name": "cisco-hxcsi-operator.v1.2.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:00:35.541000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cisco-hxcsi-operator",
      "provided_apis": [
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v1"
        },
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v2"
        }
      ],
      "provider": "Cisco Systems Inc",
      "related_images": [
        {
          "digest": "sha256:6b8b96848a92b987e5802b00ee4d476c9393ae3249bfa3066ae8000a07adec03",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-bundle@sha256:6b8b96848a92b987e5802b00ee4d476c9393ae3249bfa3066ae8000a07adec03",
          "name": "hxcsi-helm-bundle-6b8b96848a92b987e5802b00ee4d476c9393ae3249bfa3066ae8000a07adec03-annotation"
        },
        {
          "digest": "sha256:3f73fcb9671cd6d41dab04876008dd9316dafa01fb8d9869af92f658cfceec0d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3f73fcb9671cd6d41dab04876008dd9316dafa01fb8d9869af92f658cfceec0d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:332bf5b0fd0556124d1819917504a859ebcefd4ce59d7d8be9f63b4d9c18a6c4",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-operator@sha256:332bf5b0fd0556124d1819917504a859ebcefd4ce59d7d8be9f63b4d9c18a6c4",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.2.5",
      "version_original": "1.2.5"
    },
    {
      "_id": "62ed915696f50062ffb6beeb",
      "alm_examples": [
        {
          "api_version": "hxcsi.cisco.com/v2",
          "kind": "HXCSIDriver",
          "metadata": {
            "name": "cisco-hyperflex-csi-driver"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {},
            "fullnameOverride": "",
            "hx": {
              "clientId": "INPUT_VALUE_HERE",
              "dockerRegistryName": "INPUT_VALUE_HERE",
              "iscsiUrl": "INPUT_VALUE_HERE",
              "token": "INPUT_VALUE_HERE",
              "url": "INPUT_VALUE_HERE"
            },
            "image": {
              "attacher": "hxcsi-csi-attacher:3.2.1-cisco1",
              "hxcsi": "hxcsi-ubi8:hxcsi-1.2.5-latest",
              "provisioner": "hxcsi-csi-provisioner:2.2.1-cisco1",
              "pullPolicy": "Always",
              "registrar": "hxcsi-csi-node-driver-registrar:2.2.0-cisco1",
              "resizer": "hxcsi-csi-resizer:1.2.0-cisco1",
              "tag": ""
            },
            "ingress": {},
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 2,
            "resources": {},
            "securityContext": {},
            "service": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "storageClass": {
              "isDefault": "false",
              "name": "hyperflex"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hxcsiadmin/hxcsi-helm-bundle@sha256:2d2ca902ab19033a83ab70c5a71f54d3956010b9b0e17f13f5e0f206ba87a1ec",
      "bundle_path_digest": "sha256:2d2ca902ab19033a83ab70c5a71f54d3956010b9b0e17f13f5e0f206ba87a1ec",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-05T21:53:26.657000+00:00",
      "csv_description": "\nCisco HyperFlex Data Platform (HX Data Platform) is a hyperconverged software appliance that transforms Cisco servers into a single pool of compute and storage resources. It eliminates the need for network storage and enables seamless interoperability between computing and storage in virtual environments. The Cisco HX Data Platform provides a highly fault-tolerant distributed storage system that preserves data integrity and optimizes performance for virtual machine (VM) storage workloads. In addition, native compression and deduplication reduce storage space occupied by the VMs and VM workloads.\n### HyperFlex CSI Driver\nThe Cisco HyperFlex Kubernetes CSI Integration allows Cisco HyperFlex to dynamically provide persistent storage to stateful Kubernetes workloads running on Cisco HyperFlex. The integration enables orchestration of the entire Persistent Volume object lifecycle to be offloaded and managed by Cisco HyperFlex, while being driven (initiated) by developers and users through standard Kubernetes Persistent Volume Claim objects. Developers and users get the benefit of leveraging Cisco HyperFlex for their Kubernetes persistent storage needs with zero additional administration overhead from their perspective.\n### Features Support\n- Support for CSI Spec 1.2 APIs\n- Kubernetes 1.18, 1.19, 1.20, 1.21 support\n- Kubernetes Cluster multi tenancy target masking using dedicated initiator group\n- Dynamic creation and deletion of volumes\n- Dynamic volume attach and detach\n- Block access support\n- CHAP support for iSCSI sessions\n- Clone volume (when source volume is from the same Datastore)\n- PV support with different filesystems (Ext4, Ext3, XFS)\n- Volume space statistics reporting per CSI specs\n- Multi-writer support (ReadWriteMany) for Block Mode only\n- Volume resize support for block mode volumes and ext3, ext4 filesystem volumes (expansion)\n- The HXCSI driver version 1.2.5 has been validated on HyperFlex Data Platform (HXDP) version 5.0.1a.\n",
      "csv_display_name": "Cisco Hyperflex CSI Operator",
      "csv_metadata_description": "Cisco HXCSI Plugin for RedHat OpenShift Platform",
      "csv_name": "cisco-hxcsi-operator.v1.2.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:51:34.605000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cisco-hxcsi-operator",
      "provided_apis": [
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v1"
        },
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v2"
        }
      ],
      "provider": "Cisco Systems Inc",
      "related_images": [
        {
          "digest": "sha256:6b8b96848a92b987e5802b00ee4d476c9393ae3249bfa3066ae8000a07adec03",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-bundle@sha256:6b8b96848a92b987e5802b00ee4d476c9393ae3249bfa3066ae8000a07adec03",
          "name": "hxcsi-helm-bundle-6b8b96848a92b987e5802b00ee4d476c9393ae3249bfa3066ae8000a07adec03-annotation"
        },
        {
          "digest": "sha256:3f73fcb9671cd6d41dab04876008dd9316dafa01fb8d9869af92f658cfceec0d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3f73fcb9671cd6d41dab04876008dd9316dafa01fb8d9869af92f658cfceec0d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:332bf5b0fd0556124d1819917504a859ebcefd4ce59d7d8be9f63b4d9c18a6c4",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-operator@sha256:332bf5b0fd0556124d1819917504a859ebcefd4ce59d7d8be9f63b4d9c18a6c4",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.2.5",
      "version_original": "1.2.5"
    },
    {
      "_id": "62ed91f6c7996e54ea08db45",
      "alm_examples": [
        {
          "api_version": "hxcsi.cisco.com/v2",
          "kind": "HXCSIDriver",
          "metadata": {
            "name": "cisco-hyperflex-csi-driver"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {},
            "fullnameOverride": "",
            "hx": {
              "clientId": "INPUT_VALUE_HERE",
              "dockerRegistryName": "INPUT_VALUE_HERE",
              "iscsiUrl": "INPUT_VALUE_HERE",
              "token": "INPUT_VALUE_HERE",
              "url": "INPUT_VALUE_HERE"
            },
            "image": {
              "attacher": "hxcsi-csi-attacher:3.2.1-cisco1",
              "hxcsi": "hxcsi-ubi8:hxcsi-1.2.5-latest",
              "provisioner": "hxcsi-csi-provisioner:2.2.1-cisco1",
              "pullPolicy": "Always",
              "registrar": "hxcsi-csi-node-driver-registrar:2.2.0-cisco1",
              "resizer": "hxcsi-csi-resizer:1.2.0-cisco1",
              "tag": ""
            },
            "ingress": {},
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 2,
            "resources": {},
            "securityContext": {},
            "service": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "storageClass": {
              "isDefault": "false",
              "name": "hyperflex"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hxcsiadmin/hxcsi-helm-bundle@sha256:2d2ca902ab19033a83ab70c5a71f54d3956010b9b0e17f13f5e0f206ba87a1ec",
      "bundle_path_digest": "sha256:2d2ca902ab19033a83ab70c5a71f54d3956010b9b0e17f13f5e0f206ba87a1ec",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-05T21:56:06.012000+00:00",
      "csv_description": "\nCisco HyperFlex Data Platform (HX Data Platform) is a hyperconverged software appliance that transforms Cisco servers into a single pool of compute and storage resources. It eliminates the need for network storage and enables seamless interoperability between computing and storage in virtual environments. The Cisco HX Data Platform provides a highly fault-tolerant distributed storage system that preserves data integrity and optimizes performance for virtual machine (VM) storage workloads. In addition, native compression and deduplication reduce storage space occupied by the VMs and VM workloads.\n### HyperFlex CSI Driver\nThe Cisco HyperFlex Kubernetes CSI Integration allows Cisco HyperFlex to dynamically provide persistent storage to stateful Kubernetes workloads running on Cisco HyperFlex. The integration enables orchestration of the entire Persistent Volume object lifecycle to be offloaded and managed by Cisco HyperFlex, while being driven (initiated) by developers and users through standard Kubernetes Persistent Volume Claim objects. Developers and users get the benefit of leveraging Cisco HyperFlex for their Kubernetes persistent storage needs with zero additional administration overhead from their perspective.\n### Features Support\n- Support for CSI Spec 1.2 APIs\n- Kubernetes 1.18, 1.19, 1.20, 1.21 support\n- Kubernetes Cluster multi tenancy target masking using dedicated initiator group\n- Dynamic creation and deletion of volumes\n- Dynamic volume attach and detach\n- Block access support\n- CHAP support for iSCSI sessions\n- Clone volume (when source volume is from the same Datastore)\n- PV support with different filesystems (Ext4, Ext3, XFS)\n- Volume space statistics reporting per CSI specs\n- Multi-writer support (ReadWriteMany) for Block Mode only\n- Volume resize support for block mode volumes and ext3, ext4 filesystem volumes (expansion)\n- The HXCSI driver version 1.2.5 has been validated on HyperFlex Data Platform (HXDP) version 5.0.1a.\n",
      "csv_display_name": "Cisco Hyperflex CSI Operator",
      "csv_metadata_description": "Cisco HXCSI Plugin for RedHat OpenShift Platform",
      "csv_name": "cisco-hxcsi-operator.v1.2.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:55:16.318000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cisco-hxcsi-operator",
      "provided_apis": [
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v1"
        },
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v2"
        }
      ],
      "provider": "Cisco Systems Inc",
      "related_images": [
        {
          "digest": "sha256:6b8b96848a92b987e5802b00ee4d476c9393ae3249bfa3066ae8000a07adec03",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-bundle@sha256:6b8b96848a92b987e5802b00ee4d476c9393ae3249bfa3066ae8000a07adec03",
          "name": "hxcsi-helm-bundle-6b8b96848a92b987e5802b00ee4d476c9393ae3249bfa3066ae8000a07adec03-annotation"
        },
        {
          "digest": "sha256:3f73fcb9671cd6d41dab04876008dd9316dafa01fb8d9869af92f658cfceec0d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3f73fcb9671cd6d41dab04876008dd9316dafa01fb8d9869af92f658cfceec0d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:332bf5b0fd0556124d1819917504a859ebcefd4ce59d7d8be9f63b4d9c18a6c4",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-operator@sha256:332bf5b0fd0556124d1819917504a859ebcefd4ce59d7d8be9f63b4d9c18a6c4",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.2.5",
      "version_original": "1.2.5"
    },
    {
      "_id": "62eeb487ecdd7d25b434f516",
      "alm_examples": [
        {
          "api_version": "vfunction.com/v1",
          "kind": "VfunctionServer",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "vfunction-server",
              "app.kubernetes.io/managed-by": "operator",
              "app.kubernetes.io/name": "vfunction",
              "name": "vfunction"
            },
            "name": "vfunction-server",
            "namespace": "vfunction"
          },
          "spec": {
            "admin": {
              "email": "admin@mycompany.com",
              "name": "Admin",
              "password": "Password1!"
            },
            "authentication": {
              "authority": "",
              "ca_root_crt": "",
              "client_id": "",
              "issuer": "",
              "jwks_url": ""
            },
            "backup": {
              "mysql": {
                "S3": {
                  "bucket": "",
                  "key": "",
                  "region": "",
                  "secret": ""
                }
              }
            },
            "host": "http://my.domain.com",
            "measurements": {
              "S3": {
                "bucket": "",
                "key": "",
                "region": "",
                "secret": ""
              },
              "auto_scaling": "No",
              "max_number_of_services": "10",
              "min_number_of_services": "2"
            },
            "org_name": "MyCompany",
            "smtp": {
              "identity": "",
              "password": "",
              "url": "",
              "user": ""
            },
            "tls": {
              "crt": "",
              "key": "",
              "use_letsencrypt": "No"
            },
            "upgrade": "Never"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/vfunction/vfunction-server-operator-bundle@sha256:891fb91a4b5f517ff304584409dbc6d0e33f6a6b92965a8bc5e5221873102304",
      "bundle_path_digest": "sha256:891fb91a4b5f517ff304584409dbc6d0e33f6a6b92965a8bc5e5221873102304",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-06T18:35:51.041000+00:00",
      "csv_description": "\n## Introduction\n\n[vFunction](https://www.vfunction.com/) is a cloud-native modernization platform that combines dynamic and static code analysis, machine learning, and automation to automatically identify and extract services from existing applications. vFunction is the only platform purpose-built for modernization of Java applications.\n\nThe vFunction modernization process starts by learning the running monolithic application, and surfacing the interdependencies within it. Using AI, the platform analyzes and identifies services that can be separated from the application. This decomposition can present a range of micro, mini, or even macro services, depending on your application environment, each being an independently deployable and scalable application component.\n\nvFunction automates the extraction of these services, enabling you to modernize your monolith, quickly and easily.\n\n## The vFunction platform\n\nThe platform consists of 3 basic components; the server, the controller package, and a tools package. The server runs as an operand on an OpenShift environment. The controller package is installed on the machine that runs the monolithic application which can be either a Linux or a Windows machine, and the tools are run on a development machine, with access to the code of the monolithic application.\n\nThe controller package consists of three elements: the vFunction agent, that collects data during the dynamic analysis phase; the vFunction Viper application, that performs static analysis on the binaries of the application; and the vFunction controller that handles all the communication between the agent, Viper, and the vFunction server.\n\nThe vFunction agent is a mix of a Java and native agent, and needs to run on the JVM that is currently running your application. [Refer to the vFunction OOB Support Matrix document](https://drive.google.com/file/d/1ccq8LFab1FrYAimDUxwgjiCOdk4QuVzs/view) for a list of supported application servers and JVMs.\n\nThis operator installs a vFunction server instance to be connected later with one or more vFunction controllers installed on your application machine(s).\n\n## Before You Start\n\nThe vFunction operator requires a Red Hat OpenShift Kubernetes Application Platform 4.x.\n\nThe cluster recommended configuration (which is the same as the minimal one) should consist of:\n\n- *1 master node*\n\n- *1 worker node*\n\n- *Storage capacity enough for dynamically provision 2 PVs of 50G each*\n\n- *A default StorageClass configured*\n\nvFunction doesn\u2019t provide any encryption mechanism for data stored on any attached storage. If required, encryption can be achieved by the client by using its own external means on the storage itself.\n\nvFunction supports backup of all critical data as part of the application. Nevertheless, for complete backup of entire data it is recommended that the client apply its own storage based backup mechanism.\n\n## Install Prerequisites\n\n###Cluster:\nThe operator was certified and tested on OCP 4.6 and 4.7.\nIf you encounter any issue with other OCP versions or cloud providers please contact info@vfunction.com.\n\n###Storage:\nThe operator creates two new PersistentVolumeClaims (PVCs) during installation time. For their creation, it relies on the default StorageClass to dynamically provision two PersistentVolumes (PVs). The system must have a default StorageClass in place.\n\nBoth PersistentVolumes are accessed with ReadWriteOnce mode.\n\n###Project:\nThe operator should be installed in a new and dedicated project (namespace). If you intend to install more than one vFunction operands in the same cluster, please use different projects for each one. Installation of more than one operand on the same cluster will allow scaling by load balancing multiple applications to different vFunction servers.\n\n## Installation instructions\n\n1. Prepare the YAML file to use in the installation:\n\n    a. Copy the following YAML template into a text editor:\n\n    ```yaml\n        apiVersion: vfunction.com/v1\n        kind: VfunctionServer\n        metadata:\n          name: vfunction\n          namespace: vfunction\n          labels:\n            name: vfunction\n            app.kubernetes.io/name: vfunction\n            app.kubernetes.io/instance: vfunction-server\n            app.kubernetes.io/managed-by: operator\n        spec:\n          host: \"http://my.domain.com\"\n          org_name: \"MyCompany\"\n          upgrade: \"Never\"\n          admin:\n            email: \"admin@mycompany.com\"\n            name: \"Admin\"\n            password: \"Password1!\"\n          measurements:\n            auto_scaling: \"No\"\n            min_number_of_services: \"2\"\n            max_number_of_services: \"10\"\n            S3:\n              bucket: \"\"\n              key: \"\"\n              secret: \"\"\n          smtp:\n            password: \"\"\n            url: \"\"\n            identity: \"\"\n            user: \"\"\n          authentication:\n            authority: \"\"\n            client_id: \"\"\n            jwks_url: \"\"\n            issuer: \"\"\n            ca_root_crt: |\n              -----BEGIN CERTIFICATE-----\n              ...\n              -----END CERTIFICATE-----\n          tls:\n            use_letsencrypt: \"No\"\n            crt: |\n              -----BEGIN CERTIFICATE-----\n              ...\n              -----END CERTIFICATE-----\n            key: |\n              -----BEGIN PRIVATE KEY-----\n              ...\n              -----END PRIVATE KEY-----\n          backup:\n            mysql:\n              S3:\n                bucket: \"\"\n                key: \"\"\n                secret: \"\"\n    ```\n    b. Customize the template fields by replacing with your information:\n\n    - **host**: Enter the FQDN for accessing the vFunction dashboard.\n                Make sure that you use a domain name and not an IP address. Writing \"https://\" will mandate TLS while writing \"http://\" will expose the server through HTTP.\n    - **org_name**: Enter your organization name.\n    - **upgrade**: Choose auto-upgrade mode\n        - **Daily**: The operator will check for a new version every day at 3 AM and will install it automatically.\n        - **Always**: The operator will check for a new version every 10 minutes and will install it automatically.\n        - **Never**: The automatic upgrading mechanism is off (default).\n        - **Maintenance**: Put the operator in a maintenance mode.\n    - **admin.email**: Enter the email address of your administrator.\n    - **admin.name**: Enter the name of your administrator.\n    - **admin.password**: Enter the password you want to use for the vFunction administrator.\n                          The password should be at least 8 characters long, and consist of at least one lowercase letter, at least one uppercase letter, at least one number, and at least one special character.\n    - **measurements.auto_scaling**: Indicates if the measurement services auto scalling is active.\n    - **measurements.min\\_num\\_of\\_services**: Minimum Number of measurement service pods.\n    - **measurements.max\\_num\\_of\\_services**: Maximum Number of measurement service pods.\n    - **measurements.S3**: Save all measurements data to S3, instead of local PV (optional).\n        - **measurements.S3.bucket**: Measurements S3 bucket name.\n        - **measurements.S3.key**: Measurements S3 key.\n        - **measurements.S3.secret**: Measurements S3 secret.\n        - **measurements.S3.region**: Measurements S3 region.\n    - **smtp.user**: Enter the email address for a designated user for the SMTP server (optional).\n    - **smtp.password**: Enter this user\u2019s password (optional).\n    - **smtp.identity**: Enter this user\u2019s password (optional).\n    - **smtp.url**: Enter the SMTP server URL (optional).\n    - **authentication.authority**: Authority for authentication (Optional).\n    - **authentication.client_id**: Client ID for authentication (Optional).\n    - **authentication.jwks_url**: JWKS URL for authentication (Optional).\n    - **authentication.issuer**: Issuer for authentication (Optional).\n    - **authentication.ca\\_root\\_crt**: CA root certificate for authentication (Optional).\n    - **tls.crt**: If your host FQDN starts with \u201chttps\u201d, paste in the certifications you have for using the TLS connection.\n    - **tls.key**: If your host FQDN starts with \u201chttps\u201d, enter the key you have for using the TLS connection.\n    - **backup.mysql.S3**: Backup MySQL to S3 (optional).\n        - **backup.mysql.S3.bucket**: MySQL backup S3 bucket name.\n        - **backup.mysql.S3.key**: MySQL backup S3 key.\n        - **backup.mysql.S3.secret**: MySQL backup S3 secret.\n        - **backup.mysql.S3.region**: MySQL backup S3 region.\n\n1. In the Installed Operators window choose and click on vFunction Operator and then Create Instance.\n1. In the Create vFunctionServer window, paste the YAML file that you created in step 1.\n1. Click Create.\n1. You can now click on your new created vFunction operand in order to see its details and installation progress.\n\n## Verifying the installation\n\nCheck that the operand installed successfully:\n\n1. Check that the \"Operand State\" property shows \u201cWorking\u201d.\n1. Check that the \"Successfully Installed\" property shows \"Yes\".\n\nIf \"Operand State\" shows \"Failed\", it indicates the operand wasn\u2019t installed correctly. Check the events and logs for all pods (operator and image containers) for any issues. In the event that you cannot troubleshoot, contact vFunction support.\n\n## After installation\n\nThe vFunction site is now accessible via the newly created vFunction application custom address, for example, my.domain.com. There are two ways you can access the vFunction dashboard.\n\n### Access using the router canonical hostname\n\n1. Update your DNS provider by creating a canonical name (CNAME) record.\nThis record should point to your host address, and to the \u201dvfunction\u201d subdomain of the  OpenShift canonical router hostname as the alias.\nFor example, ***my.domain.com.   CNAME   vfunction.apps.ocp4.my-openshift.com.***\n2. Find your cluster Router Canonical Hostname address in the newly created vfunction-route-xxx under your vFunction OpenShift project -> **Networking** -> **Routes** -> **vfunction-route-xxx** route -> **Router Canonical Hostname** field.\nYou can now access the dashboard using your defined \"host\" spec property (as above).\n\n### Access using the nginx service location\n\nYou may use this access method if your OpenShift is installed on a provider that supports exposing LoadBalancer-type services.\n1. Update your DNS provider by creating a canonical name (CNAME) record.\nThis record should point to your host address and to the vfunction-nginx-xxx service location.\nFor example, ***my.domain.com.   CNAME   a05951ed7cdf-1394239323.us-east-1.elb.amazonaws.com.***\n1. Point your custom domain to the vfunction-nginx-xxx service's external IP location, which you can find in the OpenShift project > **Networking** -> **Services** -> **vfunction-nginx-xxx** service > **Service Address** > **Location** field.\n\n## Upgrade and Rollback\n\nThe vFunction operator includes a built-in auto-upgrade mechanism.\n\nYou can choose one of 4 upgrading modes:\n- **Daily**: The operator will check for a new version every day at 3 AM and will install it automatically.\n- **Always**: The operator will check for a new version every 10 minutes and will install it automatically.\n- **Never**: The automatic upgrading mechanism is off (default).\n- **Maintenance**: Put the operator in a maintenance mode.\n\nFor an on-demand upgrade,  you can change anytime the upgrading mode from \u201cNever\u201d to \u201cAlways\u201d, wait for the operand to be upgraded, and change again to \u201cNever\u201d.\n\nDuring the upgrade, the \"Operand State\" property will change to \u201cUpgrading...\u201d and back again to \u201cWorking\u201d after a successful upgrade.\n\nIn case of a failure upgrading the operand, an automatic rollback to the last working version will occur. The failed version will be marked as defective and the operator will not try to upgrade to it again.\n\nChoosing the \"Maintenance\" option will tell the operator to take down all pods, so you can safely fix storage issues, return volumes from snapshots, etc.\nAfter finishing the maintenance, return the upgrade mode to your original desired policy.",
      "csv_display_name": "vFunction Operator",
      "csv_metadata_description": "vFunction is a cutting-edge code analysis, machine learning, and automation to boost your Java modernization projects.",
      "csv_name": "vfunction-server-operator.v2.5.804",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:13:31.147000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "vfunction-server-operator",
      "provided_apis": [
        {
          "group": "vfunction.com",
          "kind": "VfunctionServer",
          "plural": "vfunctionservers",
          "version": "v1"
        }
      ],
      "provider": "vFunction",
      "related_images": [
        {
          "digest": "sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "image": "registry.connect.redhat.com/vfunction/vfunction-server-operator@sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "name": "vfunction-server-operator"
        },
        {
          "digest": "sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "image": "registry.connect.redhat.com/vfunction/vfunction-mysql@sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "name": "vfunction-mysql"
        },
        {
          "digest": "sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "image": "registry.connect.redhat.com/vfunction/vfunction-nginx@sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "name": "vfunction-nginx"
        },
        {
          "digest": "sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "image": "registry.connect.redhat.com/vfunction/vfunction-storage@sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "name": "vfunction-storage"
        },
        {
          "digest": "sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-idp@sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "name": "vfunction-vfapi-idp"
        },
        {
          "digest": "sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-measurements@sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "name": "vfunction-vfapi-measurements"
        },
        {
          "digest": "sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-organizations@sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "name": "vfunction-vfapi-organizations"
        },
        {
          "digest": "sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-users@sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "name": "vfunction-vfapi-users"
        },
        {
          "digest": "sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "image": "registry.connect.redhat.com/vfunction/vfunction-server-operator@sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "name": "vfunction-server-operator-9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe-annotation"
        },
        {
          "digest": "sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "image": "registry.connect.redhat.com/vfunction/vfunction-mysql@sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "name": "vfunction_mysql_original_image"
        },
        {
          "digest": "sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "image": "registry.connect.redhat.com/vfunction/vfunction-nginx@sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "name": "vfunction_nginx_original_image"
        },
        {
          "digest": "sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "image": "registry.connect.redhat.com/vfunction/vfunction-storage@sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "name": "vfunction_storage_original_image"
        },
        {
          "digest": "sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-idp@sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "name": "vfunction_vfapi_idp_original_image"
        },
        {
          "digest": "sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-measurements@sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "name": "vfunction_vfapi_measurements_original_image"
        },
        {
          "digest": "sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-organizations@sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "name": "vfunction_vfapi_organizations_original_image"
        },
        {
          "digest": "sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-users@sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "name": "vfunction_vfapi_users_original_image"
        }
      ],
      "replaces": null,
      "skip_range": "<2.5.804",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.5.804",
      "version_original": "2.5.804"
    },
    {
      "_id": "62eeb8d38c2137a6fb67585f",
      "alm_examples": [
        {
          "api_version": "vfunction.com/v1",
          "kind": "VfunctionServer",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "vfunction-server",
              "app.kubernetes.io/managed-by": "operator",
              "app.kubernetes.io/name": "vfunction",
              "name": "vfunction"
            },
            "name": "vfunction-server",
            "namespace": "vfunction"
          },
          "spec": {
            "admin": {
              "email": "admin@mycompany.com",
              "name": "Admin",
              "password": "Password1!"
            },
            "authentication": {
              "authority": "",
              "ca_root_crt": "",
              "client_id": "",
              "issuer": "",
              "jwks_url": ""
            },
            "backup": {
              "mysql": {
                "S3": {
                  "bucket": "",
                  "key": "",
                  "region": "",
                  "secret": ""
                }
              }
            },
            "host": "http://my.domain.com",
            "measurements": {
              "S3": {
                "bucket": "",
                "key": "",
                "region": "",
                "secret": ""
              },
              "auto_scaling": "No",
              "max_number_of_services": "10",
              "min_number_of_services": "2"
            },
            "org_name": "MyCompany",
            "smtp": {
              "identity": "",
              "password": "",
              "url": "",
              "user": ""
            },
            "tls": {
              "crt": "",
              "key": "",
              "use_letsencrypt": "No"
            },
            "upgrade": "Never"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/vfunction/vfunction-server-operator-bundle@sha256:891fb91a4b5f517ff304584409dbc6d0e33f6a6b92965a8bc5e5221873102304",
      "bundle_path_digest": "sha256:891fb91a4b5f517ff304584409dbc6d0e33f6a6b92965a8bc5e5221873102304",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-06T18:54:11.015000+00:00",
      "csv_description": "\n## Introduction\n\n[vFunction](https://www.vfunction.com/) is a cloud-native modernization platform that combines dynamic and static code analysis, machine learning, and automation to automatically identify and extract services from existing applications. vFunction is the only platform purpose-built for modernization of Java applications.\n\nThe vFunction modernization process starts by learning the running monolithic application, and surfacing the interdependencies within it. Using AI, the platform analyzes and identifies services that can be separated from the application. This decomposition can present a range of micro, mini, or even macro services, depending on your application environment, each being an independently deployable and scalable application component.\n\nvFunction automates the extraction of these services, enabling you to modernize your monolith, quickly and easily.\n\n## The vFunction platform\n\nThe platform consists of 3 basic components; the server, the controller package, and a tools package. The server runs as an operand on an OpenShift environment. The controller package is installed on the machine that runs the monolithic application which can be either a Linux or a Windows machine, and the tools are run on a development machine, with access to the code of the monolithic application.\n\nThe controller package consists of three elements: the vFunction agent, that collects data during the dynamic analysis phase; the vFunction Viper application, that performs static analysis on the binaries of the application; and the vFunction controller that handles all the communication between the agent, Viper, and the vFunction server.\n\nThe vFunction agent is a mix of a Java and native agent, and needs to run on the JVM that is currently running your application. [Refer to the vFunction OOB Support Matrix document](https://drive.google.com/file/d/1ccq8LFab1FrYAimDUxwgjiCOdk4QuVzs/view) for a list of supported application servers and JVMs.\n\nThis operator installs a vFunction server instance to be connected later with one or more vFunction controllers installed on your application machine(s).\n\n## Before You Start\n\nThe vFunction operator requires a Red Hat OpenShift Kubernetes Application Platform 4.x.\n\nThe cluster recommended configuration (which is the same as the minimal one) should consist of:\n\n- *1 master node*\n\n- *1 worker node*\n\n- *Storage capacity enough for dynamically provision 2 PVs of 50G each*\n\n- *A default StorageClass configured*\n\nvFunction doesn\u2019t provide any encryption mechanism for data stored on any attached storage. If required, encryption can be achieved by the client by using its own external means on the storage itself.\n\nvFunction supports backup of all critical data as part of the application. Nevertheless, for complete backup of entire data it is recommended that the client apply its own storage based backup mechanism.\n\n## Install Prerequisites\n\n###Cluster:\nThe operator was certified and tested on OCP 4.6 and 4.7.\nIf you encounter any issue with other OCP versions or cloud providers please contact info@vfunction.com.\n\n###Storage:\nThe operator creates two new PersistentVolumeClaims (PVCs) during installation time. For their creation, it relies on the default StorageClass to dynamically provision two PersistentVolumes (PVs). The system must have a default StorageClass in place.\n\nBoth PersistentVolumes are accessed with ReadWriteOnce mode.\n\n###Project:\nThe operator should be installed in a new and dedicated project (namespace). If you intend to install more than one vFunction operands in the same cluster, please use different projects for each one. Installation of more than one operand on the same cluster will allow scaling by load balancing multiple applications to different vFunction servers.\n\n## Installation instructions\n\n1. Prepare the YAML file to use in the installation:\n\n    a. Copy the following YAML template into a text editor:\n\n    ```yaml\n        apiVersion: vfunction.com/v1\n        kind: VfunctionServer\n        metadata:\n          name: vfunction\n          namespace: vfunction\n          labels:\n            name: vfunction\n            app.kubernetes.io/name: vfunction\n            app.kubernetes.io/instance: vfunction-server\n            app.kubernetes.io/managed-by: operator\n        spec:\n          host: \"http://my.domain.com\"\n          org_name: \"MyCompany\"\n          upgrade: \"Never\"\n          admin:\n            email: \"admin@mycompany.com\"\n            name: \"Admin\"\n            password: \"Password1!\"\n          measurements:\n            auto_scaling: \"No\"\n            min_number_of_services: \"2\"\n            max_number_of_services: \"10\"\n            S3:\n              bucket: \"\"\n              key: \"\"\n              secret: \"\"\n          smtp:\n            password: \"\"\n            url: \"\"\n            identity: \"\"\n            user: \"\"\n          authentication:\n            authority: \"\"\n            client_id: \"\"\n            jwks_url: \"\"\n            issuer: \"\"\n            ca_root_crt: |\n              -----BEGIN CERTIFICATE-----\n              ...\n              -----END CERTIFICATE-----\n          tls:\n            use_letsencrypt: \"No\"\n            crt: |\n              -----BEGIN CERTIFICATE-----\n              ...\n              -----END CERTIFICATE-----\n            key: |\n              -----BEGIN PRIVATE KEY-----\n              ...\n              -----END PRIVATE KEY-----\n          backup:\n            mysql:\n              S3:\n                bucket: \"\"\n                key: \"\"\n                secret: \"\"\n    ```\n    b. Customize the template fields by replacing with your information:\n\n    - **host**: Enter the FQDN for accessing the vFunction dashboard.\n                Make sure that you use a domain name and not an IP address. Writing \"https://\" will mandate TLS while writing \"http://\" will expose the server through HTTP.\n    - **org_name**: Enter your organization name.\n    - **upgrade**: Choose auto-upgrade mode\n        - **Daily**: The operator will check for a new version every day at 3 AM and will install it automatically.\n        - **Always**: The operator will check for a new version every 10 minutes and will install it automatically.\n        - **Never**: The automatic upgrading mechanism is off (default).\n        - **Maintenance**: Put the operator in a maintenance mode.\n    - **admin.email**: Enter the email address of your administrator.\n    - **admin.name**: Enter the name of your administrator.\n    - **admin.password**: Enter the password you want to use for the vFunction administrator.\n                          The password should be at least 8 characters long, and consist of at least one lowercase letter, at least one uppercase letter, at least one number, and at least one special character.\n    - **measurements.auto_scaling**: Indicates if the measurement services auto scalling is active.\n    - **measurements.min\\_num\\_of\\_services**: Minimum Number of measurement service pods.\n    - **measurements.max\\_num\\_of\\_services**: Maximum Number of measurement service pods.\n    - **measurements.S3**: Save all measurements data to S3, instead of local PV (optional).\n        - **measurements.S3.bucket**: Measurements S3 bucket name.\n        - **measurements.S3.key**: Measurements S3 key.\n        - **measurements.S3.secret**: Measurements S3 secret.\n        - **measurements.S3.region**: Measurements S3 region.\n    - **smtp.user**: Enter the email address for a designated user for the SMTP server (optional).\n    - **smtp.password**: Enter this user\u2019s password (optional).\n    - **smtp.identity**: Enter this user\u2019s password (optional).\n    - **smtp.url**: Enter the SMTP server URL (optional).\n    - **authentication.authority**: Authority for authentication (Optional).\n    - **authentication.client_id**: Client ID for authentication (Optional).\n    - **authentication.jwks_url**: JWKS URL for authentication (Optional).\n    - **authentication.issuer**: Issuer for authentication (Optional).\n    - **authentication.ca\\_root\\_crt**: CA root certificate for authentication (Optional).\n    - **tls.crt**: If your host FQDN starts with \u201chttps\u201d, paste in the certifications you have for using the TLS connection.\n    - **tls.key**: If your host FQDN starts with \u201chttps\u201d, enter the key you have for using the TLS connection.\n    - **backup.mysql.S3**: Backup MySQL to S3 (optional).\n        - **backup.mysql.S3.bucket**: MySQL backup S3 bucket name.\n        - **backup.mysql.S3.key**: MySQL backup S3 key.\n        - **backup.mysql.S3.secret**: MySQL backup S3 secret.\n        - **backup.mysql.S3.region**: MySQL backup S3 region.\n\n1. In the Installed Operators window choose and click on vFunction Operator and then Create Instance.\n1. In the Create vFunctionServer window, paste the YAML file that you created in step 1.\n1. Click Create.\n1. You can now click on your new created vFunction operand in order to see its details and installation progress.\n\n## Verifying the installation\n\nCheck that the operand installed successfully:\n\n1. Check that the \"Operand State\" property shows \u201cWorking\u201d.\n1. Check that the \"Successfully Installed\" property shows \"Yes\".\n\nIf \"Operand State\" shows \"Failed\", it indicates the operand wasn\u2019t installed correctly. Check the events and logs for all pods (operator and image containers) for any issues. In the event that you cannot troubleshoot, contact vFunction support.\n\n## After installation\n\nThe vFunction site is now accessible via the newly created vFunction application custom address, for example, my.domain.com. There are two ways you can access the vFunction dashboard.\n\n### Access using the router canonical hostname\n\n1. Update your DNS provider by creating a canonical name (CNAME) record.\nThis record should point to your host address, and to the \u201dvfunction\u201d subdomain of the  OpenShift canonical router hostname as the alias.\nFor example, ***my.domain.com.   CNAME   vfunction.apps.ocp4.my-openshift.com.***\n2. Find your cluster Router Canonical Hostname address in the newly created vfunction-route-xxx under your vFunction OpenShift project -> **Networking** -> **Routes** -> **vfunction-route-xxx** route -> **Router Canonical Hostname** field.\nYou can now access the dashboard using your defined \"host\" spec property (as above).\n\n### Access using the nginx service location\n\nYou may use this access method if your OpenShift is installed on a provider that supports exposing LoadBalancer-type services.\n1. Update your DNS provider by creating a canonical name (CNAME) record.\nThis record should point to your host address and to the vfunction-nginx-xxx service location.\nFor example, ***my.domain.com.   CNAME   a05951ed7cdf-1394239323.us-east-1.elb.amazonaws.com.***\n1. Point your custom domain to the vfunction-nginx-xxx service's external IP location, which you can find in the OpenShift project > **Networking** -> **Services** -> **vfunction-nginx-xxx** service > **Service Address** > **Location** field.\n\n## Upgrade and Rollback\n\nThe vFunction operator includes a built-in auto-upgrade mechanism.\n\nYou can choose one of 4 upgrading modes:\n- **Daily**: The operator will check for a new version every day at 3 AM and will install it automatically.\n- **Always**: The operator will check for a new version every 10 minutes and will install it automatically.\n- **Never**: The automatic upgrading mechanism is off (default).\n- **Maintenance**: Put the operator in a maintenance mode.\n\nFor an on-demand upgrade,  you can change anytime the upgrading mode from \u201cNever\u201d to \u201cAlways\u201d, wait for the operand to be upgraded, and change again to \u201cNever\u201d.\n\nDuring the upgrade, the \"Operand State\" property will change to \u201cUpgrading...\u201d and back again to \u201cWorking\u201d after a successful upgrade.\n\nIn case of a failure upgrading the operand, an automatic rollback to the last working version will occur. The failed version will be marked as defective and the operator will not try to upgrade to it again.\n\nChoosing the \"Maintenance\" option will tell the operator to take down all pods, so you can safely fix storage issues, return volumes from snapshots, etc.\nAfter finishing the maintenance, return the upgrade mode to your original desired policy.",
      "csv_display_name": "vFunction Operator",
      "csv_metadata_description": "vFunction is a cutting-edge code analysis, machine learning, and automation to boost your Java modernization projects.",
      "csv_name": "vfunction-server-operator.v2.5.804",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:13:58.220000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "vfunction-server-operator",
      "provided_apis": [
        {
          "group": "vfunction.com",
          "kind": "VfunctionServer",
          "plural": "vfunctionservers",
          "version": "v1"
        }
      ],
      "provider": "vFunction",
      "related_images": [
        {
          "digest": "sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "image": "registry.connect.redhat.com/vfunction/vfunction-server-operator@sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "name": "vfunction-server-operator"
        },
        {
          "digest": "sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "image": "registry.connect.redhat.com/vfunction/vfunction-mysql@sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "name": "vfunction-mysql"
        },
        {
          "digest": "sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "image": "registry.connect.redhat.com/vfunction/vfunction-nginx@sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "name": "vfunction-nginx"
        },
        {
          "digest": "sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "image": "registry.connect.redhat.com/vfunction/vfunction-storage@sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "name": "vfunction-storage"
        },
        {
          "digest": "sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-idp@sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "name": "vfunction-vfapi-idp"
        },
        {
          "digest": "sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-measurements@sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "name": "vfunction-vfapi-measurements"
        },
        {
          "digest": "sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-organizations@sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "name": "vfunction-vfapi-organizations"
        },
        {
          "digest": "sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-users@sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "name": "vfunction-vfapi-users"
        },
        {
          "digest": "sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "image": "registry.connect.redhat.com/vfunction/vfunction-server-operator@sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "name": "vfunction-server-operator-9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe-annotation"
        },
        {
          "digest": "sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "image": "registry.connect.redhat.com/vfunction/vfunction-mysql@sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "name": "vfunction_mysql_original_image"
        },
        {
          "digest": "sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "image": "registry.connect.redhat.com/vfunction/vfunction-nginx@sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "name": "vfunction_nginx_original_image"
        },
        {
          "digest": "sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "image": "registry.connect.redhat.com/vfunction/vfunction-storage@sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "name": "vfunction_storage_original_image"
        },
        {
          "digest": "sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-idp@sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "name": "vfunction_vfapi_idp_original_image"
        },
        {
          "digest": "sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-measurements@sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "name": "vfunction_vfapi_measurements_original_image"
        },
        {
          "digest": "sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-organizations@sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "name": "vfunction_vfapi_organizations_original_image"
        },
        {
          "digest": "sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-users@sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "name": "vfunction_vfapi_users_original_image"
        }
      ],
      "replaces": null,
      "skip_range": "<2.5.804",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.5.804",
      "version_original": "2.5.804"
    },
    {
      "_id": "62eeb9c4ecdd7d25b434f5c2",
      "alm_examples": [
        {
          "api_version": "vfunction.com/v1",
          "kind": "VfunctionServer",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "vfunction-server",
              "app.kubernetes.io/managed-by": "operator",
              "app.kubernetes.io/name": "vfunction",
              "name": "vfunction"
            },
            "name": "vfunction-server",
            "namespace": "vfunction"
          },
          "spec": {
            "admin": {
              "email": "admin@mycompany.com",
              "name": "Admin",
              "password": "Password1!"
            },
            "authentication": {
              "authority": "",
              "ca_root_crt": "",
              "client_id": "",
              "issuer": "",
              "jwks_url": ""
            },
            "backup": {
              "mysql": {
                "S3": {
                  "bucket": "",
                  "key": "",
                  "region": "",
                  "secret": ""
                }
              }
            },
            "host": "http://my.domain.com",
            "measurements": {
              "S3": {
                "bucket": "",
                "key": "",
                "region": "",
                "secret": ""
              },
              "auto_scaling": "No",
              "max_number_of_services": "10",
              "min_number_of_services": "2"
            },
            "org_name": "MyCompany",
            "smtp": {
              "identity": "",
              "password": "",
              "url": "",
              "user": ""
            },
            "tls": {
              "crt": "",
              "key": "",
              "use_letsencrypt": "No"
            },
            "upgrade": "Never"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/vfunction/vfunction-server-operator-bundle@sha256:891fb91a4b5f517ff304584409dbc6d0e33f6a6b92965a8bc5e5221873102304",
      "bundle_path_digest": "sha256:891fb91a4b5f517ff304584409dbc6d0e33f6a6b92965a8bc5e5221873102304",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-06T18:58:12.219000+00:00",
      "csv_description": "\n## Introduction\n\n[vFunction](https://www.vfunction.com/) is a cloud-native modernization platform that combines dynamic and static code analysis, machine learning, and automation to automatically identify and extract services from existing applications. vFunction is the only platform purpose-built for modernization of Java applications.\n\nThe vFunction modernization process starts by learning the running monolithic application, and surfacing the interdependencies within it. Using AI, the platform analyzes and identifies services that can be separated from the application. This decomposition can present a range of micro, mini, or even macro services, depending on your application environment, each being an independently deployable and scalable application component.\n\nvFunction automates the extraction of these services, enabling you to modernize your monolith, quickly and easily.\n\n## The vFunction platform\n\nThe platform consists of 3 basic components; the server, the controller package, and a tools package. The server runs as an operand on an OpenShift environment. The controller package is installed on the machine that runs the monolithic application which can be either a Linux or a Windows machine, and the tools are run on a development machine, with access to the code of the monolithic application.\n\nThe controller package consists of three elements: the vFunction agent, that collects data during the dynamic analysis phase; the vFunction Viper application, that performs static analysis on the binaries of the application; and the vFunction controller that handles all the communication between the agent, Viper, and the vFunction server.\n\nThe vFunction agent is a mix of a Java and native agent, and needs to run on the JVM that is currently running your application. [Refer to the vFunction OOB Support Matrix document](https://drive.google.com/file/d/1ccq8LFab1FrYAimDUxwgjiCOdk4QuVzs/view) for a list of supported application servers and JVMs.\n\nThis operator installs a vFunction server instance to be connected later with one or more vFunction controllers installed on your application machine(s).\n\n## Before You Start\n\nThe vFunction operator requires a Red Hat OpenShift Kubernetes Application Platform 4.x.\n\nThe cluster recommended configuration (which is the same as the minimal one) should consist of:\n\n- *1 master node*\n\n- *1 worker node*\n\n- *Storage capacity enough for dynamically provision 2 PVs of 50G each*\n\n- *A default StorageClass configured*\n\nvFunction doesn\u2019t provide any encryption mechanism for data stored on any attached storage. If required, encryption can be achieved by the client by using its own external means on the storage itself.\n\nvFunction supports backup of all critical data as part of the application. Nevertheless, for complete backup of entire data it is recommended that the client apply its own storage based backup mechanism.\n\n## Install Prerequisites\n\n###Cluster:\nThe operator was certified and tested on OCP 4.6 and 4.7.\nIf you encounter any issue with other OCP versions or cloud providers please contact info@vfunction.com.\n\n###Storage:\nThe operator creates two new PersistentVolumeClaims (PVCs) during installation time. For their creation, it relies on the default StorageClass to dynamically provision two PersistentVolumes (PVs). The system must have a default StorageClass in place.\n\nBoth PersistentVolumes are accessed with ReadWriteOnce mode.\n\n###Project:\nThe operator should be installed in a new and dedicated project (namespace). If you intend to install more than one vFunction operands in the same cluster, please use different projects for each one. Installation of more than one operand on the same cluster will allow scaling by load balancing multiple applications to different vFunction servers.\n\n## Installation instructions\n\n1. Prepare the YAML file to use in the installation:\n\n    a. Copy the following YAML template into a text editor:\n\n    ```yaml\n        apiVersion: vfunction.com/v1\n        kind: VfunctionServer\n        metadata:\n          name: vfunction\n          namespace: vfunction\n          labels:\n            name: vfunction\n            app.kubernetes.io/name: vfunction\n            app.kubernetes.io/instance: vfunction-server\n            app.kubernetes.io/managed-by: operator\n        spec:\n          host: \"http://my.domain.com\"\n          org_name: \"MyCompany\"\n          upgrade: \"Never\"\n          admin:\n            email: \"admin@mycompany.com\"\n            name: \"Admin\"\n            password: \"Password1!\"\n          measurements:\n            auto_scaling: \"No\"\n            min_number_of_services: \"2\"\n            max_number_of_services: \"10\"\n            S3:\n              bucket: \"\"\n              key: \"\"\n              secret: \"\"\n          smtp:\n            password: \"\"\n            url: \"\"\n            identity: \"\"\n            user: \"\"\n          authentication:\n            authority: \"\"\n            client_id: \"\"\n            jwks_url: \"\"\n            issuer: \"\"\n            ca_root_crt: |\n              -----BEGIN CERTIFICATE-----\n              ...\n              -----END CERTIFICATE-----\n          tls:\n            use_letsencrypt: \"No\"\n            crt: |\n              -----BEGIN CERTIFICATE-----\n              ...\n              -----END CERTIFICATE-----\n            key: |\n              -----BEGIN PRIVATE KEY-----\n              ...\n              -----END PRIVATE KEY-----\n          backup:\n            mysql:\n              S3:\n                bucket: \"\"\n                key: \"\"\n                secret: \"\"\n    ```\n    b. Customize the template fields by replacing with your information:\n\n    - **host**: Enter the FQDN for accessing the vFunction dashboard.\n                Make sure that you use a domain name and not an IP address. Writing \"https://\" will mandate TLS while writing \"http://\" will expose the server through HTTP.\n    - **org_name**: Enter your organization name.\n    - **upgrade**: Choose auto-upgrade mode\n        - **Daily**: The operator will check for a new version every day at 3 AM and will install it automatically.\n        - **Always**: The operator will check for a new version every 10 minutes and will install it automatically.\n        - **Never**: The automatic upgrading mechanism is off (default).\n        - **Maintenance**: Put the operator in a maintenance mode.\n    - **admin.email**: Enter the email address of your administrator.\n    - **admin.name**: Enter the name of your administrator.\n    - **admin.password**: Enter the password you want to use for the vFunction administrator.\n                          The password should be at least 8 characters long, and consist of at least one lowercase letter, at least one uppercase letter, at least one number, and at least one special character.\n    - **measurements.auto_scaling**: Indicates if the measurement services auto scalling is active.\n    - **measurements.min\\_num\\_of\\_services**: Minimum Number of measurement service pods.\n    - **measurements.max\\_num\\_of\\_services**: Maximum Number of measurement service pods.\n    - **measurements.S3**: Save all measurements data to S3, instead of local PV (optional).\n        - **measurements.S3.bucket**: Measurements S3 bucket name.\n        - **measurements.S3.key**: Measurements S3 key.\n        - **measurements.S3.secret**: Measurements S3 secret.\n        - **measurements.S3.region**: Measurements S3 region.\n    - **smtp.user**: Enter the email address for a designated user for the SMTP server (optional).\n    - **smtp.password**: Enter this user\u2019s password (optional).\n    - **smtp.identity**: Enter this user\u2019s password (optional).\n    - **smtp.url**: Enter the SMTP server URL (optional).\n    - **authentication.authority**: Authority for authentication (Optional).\n    - **authentication.client_id**: Client ID for authentication (Optional).\n    - **authentication.jwks_url**: JWKS URL for authentication (Optional).\n    - **authentication.issuer**: Issuer for authentication (Optional).\n    - **authentication.ca\\_root\\_crt**: CA root certificate for authentication (Optional).\n    - **tls.crt**: If your host FQDN starts with \u201chttps\u201d, paste in the certifications you have for using the TLS connection.\n    - **tls.key**: If your host FQDN starts with \u201chttps\u201d, enter the key you have for using the TLS connection.\n    - **backup.mysql.S3**: Backup MySQL to S3 (optional).\n        - **backup.mysql.S3.bucket**: MySQL backup S3 bucket name.\n        - **backup.mysql.S3.key**: MySQL backup S3 key.\n        - **backup.mysql.S3.secret**: MySQL backup S3 secret.\n        - **backup.mysql.S3.region**: MySQL backup S3 region.\n\n1. In the Installed Operators window choose and click on vFunction Operator and then Create Instance.\n1. In the Create vFunctionServer window, paste the YAML file that you created in step 1.\n1. Click Create.\n1. You can now click on your new created vFunction operand in order to see its details and installation progress.\n\n## Verifying the installation\n\nCheck that the operand installed successfully:\n\n1. Check that the \"Operand State\" property shows \u201cWorking\u201d.\n1. Check that the \"Successfully Installed\" property shows \"Yes\".\n\nIf \"Operand State\" shows \"Failed\", it indicates the operand wasn\u2019t installed correctly. Check the events and logs for all pods (operator and image containers) for any issues. In the event that you cannot troubleshoot, contact vFunction support.\n\n## After installation\n\nThe vFunction site is now accessible via the newly created vFunction application custom address, for example, my.domain.com. There are two ways you can access the vFunction dashboard.\n\n### Access using the router canonical hostname\n\n1. Update your DNS provider by creating a canonical name (CNAME) record.\nThis record should point to your host address, and to the \u201dvfunction\u201d subdomain of the  OpenShift canonical router hostname as the alias.\nFor example, ***my.domain.com.   CNAME   vfunction.apps.ocp4.my-openshift.com.***\n2. Find your cluster Router Canonical Hostname address in the newly created vfunction-route-xxx under your vFunction OpenShift project -> **Networking** -> **Routes** -> **vfunction-route-xxx** route -> **Router Canonical Hostname** field.\nYou can now access the dashboard using your defined \"host\" spec property (as above).\n\n### Access using the nginx service location\n\nYou may use this access method if your OpenShift is installed on a provider that supports exposing LoadBalancer-type services.\n1. Update your DNS provider by creating a canonical name (CNAME) record.\nThis record should point to your host address and to the vfunction-nginx-xxx service location.\nFor example, ***my.domain.com.   CNAME   a05951ed7cdf-1394239323.us-east-1.elb.amazonaws.com.***\n1. Point your custom domain to the vfunction-nginx-xxx service's external IP location, which you can find in the OpenShift project > **Networking** -> **Services** -> **vfunction-nginx-xxx** service > **Service Address** > **Location** field.\n\n## Upgrade and Rollback\n\nThe vFunction operator includes a built-in auto-upgrade mechanism.\n\nYou can choose one of 4 upgrading modes:\n- **Daily**: The operator will check for a new version every day at 3 AM and will install it automatically.\n- **Always**: The operator will check for a new version every 10 minutes and will install it automatically.\n- **Never**: The automatic upgrading mechanism is off (default).\n- **Maintenance**: Put the operator in a maintenance mode.\n\nFor an on-demand upgrade,  you can change anytime the upgrading mode from \u201cNever\u201d to \u201cAlways\u201d, wait for the operand to be upgraded, and change again to \u201cNever\u201d.\n\nDuring the upgrade, the \"Operand State\" property will change to \u201cUpgrading...\u201d and back again to \u201cWorking\u201d after a successful upgrade.\n\nIn case of a failure upgrading the operand, an automatic rollback to the last working version will occur. The failed version will be marked as defective and the operator will not try to upgrade to it again.\n\nChoosing the \"Maintenance\" option will tell the operator to take down all pods, so you can safely fix storage issues, return volumes from snapshots, etc.\nAfter finishing the maintenance, return the upgrade mode to your original desired policy.",
      "csv_display_name": "vFunction Operator",
      "csv_metadata_description": "vFunction is a cutting-edge code analysis, machine learning, and automation to boost your Java modernization projects.",
      "csv_name": "vfunction-server-operator.v2.5.804",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:47:17.154000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "vfunction-server-operator",
      "provided_apis": [
        {
          "group": "vfunction.com",
          "kind": "VfunctionServer",
          "plural": "vfunctionservers",
          "version": "v1"
        }
      ],
      "provider": "vFunction",
      "related_images": [
        {
          "digest": "sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "image": "registry.connect.redhat.com/vfunction/vfunction-server-operator@sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "name": "vfunction-server-operator"
        },
        {
          "digest": "sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "image": "registry.connect.redhat.com/vfunction/vfunction-mysql@sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "name": "vfunction-mysql"
        },
        {
          "digest": "sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "image": "registry.connect.redhat.com/vfunction/vfunction-nginx@sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "name": "vfunction-nginx"
        },
        {
          "digest": "sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "image": "registry.connect.redhat.com/vfunction/vfunction-storage@sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "name": "vfunction-storage"
        },
        {
          "digest": "sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-idp@sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "name": "vfunction-vfapi-idp"
        },
        {
          "digest": "sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-measurements@sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "name": "vfunction-vfapi-measurements"
        },
        {
          "digest": "sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-organizations@sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "name": "vfunction-vfapi-organizations"
        },
        {
          "digest": "sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-users@sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "name": "vfunction-vfapi-users"
        },
        {
          "digest": "sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "image": "registry.connect.redhat.com/vfunction/vfunction-server-operator@sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "name": "vfunction-server-operator-9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe-annotation"
        },
        {
          "digest": "sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "image": "registry.connect.redhat.com/vfunction/vfunction-mysql@sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "name": "vfunction_mysql_original_image"
        },
        {
          "digest": "sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "image": "registry.connect.redhat.com/vfunction/vfunction-nginx@sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "name": "vfunction_nginx_original_image"
        },
        {
          "digest": "sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "image": "registry.connect.redhat.com/vfunction/vfunction-storage@sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "name": "vfunction_storage_original_image"
        },
        {
          "digest": "sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-idp@sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "name": "vfunction_vfapi_idp_original_image"
        },
        {
          "digest": "sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-measurements@sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "name": "vfunction_vfapi_measurements_original_image"
        },
        {
          "digest": "sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-organizations@sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "name": "vfunction_vfapi_organizations_original_image"
        },
        {
          "digest": "sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-users@sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "name": "vfunction_vfapi_users_original_image"
        }
      ],
      "replaces": null,
      "skip_range": "<2.5.804",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.5.804",
      "version_original": "2.5.804"
    },
    {
      "_id": "62eeb9c696f50062ffb6fc0f",
      "alm_examples": [
        {
          "api_version": "vfunction.com/v1",
          "kind": "VfunctionServer",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "vfunction-server",
              "app.kubernetes.io/managed-by": "operator",
              "app.kubernetes.io/name": "vfunction",
              "name": "vfunction"
            },
            "name": "vfunction-server",
            "namespace": "vfunction"
          },
          "spec": {
            "admin": {
              "email": "admin@mycompany.com",
              "name": "Admin",
              "password": "Password1!"
            },
            "authentication": {
              "authority": "",
              "ca_root_crt": "",
              "client_id": "",
              "issuer": "",
              "jwks_url": ""
            },
            "backup": {
              "mysql": {
                "S3": {
                  "bucket": "",
                  "key": "",
                  "region": "",
                  "secret": ""
                }
              }
            },
            "host": "http://my.domain.com",
            "measurements": {
              "S3": {
                "bucket": "",
                "key": "",
                "region": "",
                "secret": ""
              },
              "auto_scaling": "No",
              "max_number_of_services": "10",
              "min_number_of_services": "2"
            },
            "org_name": "MyCompany",
            "smtp": {
              "identity": "",
              "password": "",
              "url": "",
              "user": ""
            },
            "tls": {
              "crt": "",
              "key": "",
              "use_letsencrypt": "No"
            },
            "upgrade": "Never"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/vfunction/vfunction-server-operator-bundle@sha256:891fb91a4b5f517ff304584409dbc6d0e33f6a6b92965a8bc5e5221873102304",
      "bundle_path_digest": "sha256:891fb91a4b5f517ff304584409dbc6d0e33f6a6b92965a8bc5e5221873102304",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-06T18:58:14.855000+00:00",
      "csv_description": "\n## Introduction\n\n[vFunction](https://www.vfunction.com/) is a cloud-native modernization platform that combines dynamic and static code analysis, machine learning, and automation to automatically identify and extract services from existing applications. vFunction is the only platform purpose-built for modernization of Java applications.\n\nThe vFunction modernization process starts by learning the running monolithic application, and surfacing the interdependencies within it. Using AI, the platform analyzes and identifies services that can be separated from the application. This decomposition can present a range of micro, mini, or even macro services, depending on your application environment, each being an independently deployable and scalable application component.\n\nvFunction automates the extraction of these services, enabling you to modernize your monolith, quickly and easily.\n\n## The vFunction platform\n\nThe platform consists of 3 basic components; the server, the controller package, and a tools package. The server runs as an operand on an OpenShift environment. The controller package is installed on the machine that runs the monolithic application which can be either a Linux or a Windows machine, and the tools are run on a development machine, with access to the code of the monolithic application.\n\nThe controller package consists of three elements: the vFunction agent, that collects data during the dynamic analysis phase; the vFunction Viper application, that performs static analysis on the binaries of the application; and the vFunction controller that handles all the communication between the agent, Viper, and the vFunction server.\n\nThe vFunction agent is a mix of a Java and native agent, and needs to run on the JVM that is currently running your application. [Refer to the vFunction OOB Support Matrix document](https://drive.google.com/file/d/1ccq8LFab1FrYAimDUxwgjiCOdk4QuVzs/view) for a list of supported application servers and JVMs.\n\nThis operator installs a vFunction server instance to be connected later with one or more vFunction controllers installed on your application machine(s).\n\n## Before You Start\n\nThe vFunction operator requires a Red Hat OpenShift Kubernetes Application Platform 4.x.\n\nThe cluster recommended configuration (which is the same as the minimal one) should consist of:\n\n- *1 master node*\n\n- *1 worker node*\n\n- *Storage capacity enough for dynamically provision 2 PVs of 50G each*\n\n- *A default StorageClass configured*\n\nvFunction doesn\u2019t provide any encryption mechanism for data stored on any attached storage. If required, encryption can be achieved by the client by using its own external means on the storage itself.\n\nvFunction supports backup of all critical data as part of the application. Nevertheless, for complete backup of entire data it is recommended that the client apply its own storage based backup mechanism.\n\n## Install Prerequisites\n\n###Cluster:\nThe operator was certified and tested on OCP 4.6 and 4.7.\nIf you encounter any issue with other OCP versions or cloud providers please contact info@vfunction.com.\n\n###Storage:\nThe operator creates two new PersistentVolumeClaims (PVCs) during installation time. For their creation, it relies on the default StorageClass to dynamically provision two PersistentVolumes (PVs). The system must have a default StorageClass in place.\n\nBoth PersistentVolumes are accessed with ReadWriteOnce mode.\n\n###Project:\nThe operator should be installed in a new and dedicated project (namespace). If you intend to install more than one vFunction operands in the same cluster, please use different projects for each one. Installation of more than one operand on the same cluster will allow scaling by load balancing multiple applications to different vFunction servers.\n\n## Installation instructions\n\n1. Prepare the YAML file to use in the installation:\n\n    a. Copy the following YAML template into a text editor:\n\n    ```yaml\n        apiVersion: vfunction.com/v1\n        kind: VfunctionServer\n        metadata:\n          name: vfunction\n          namespace: vfunction\n          labels:\n            name: vfunction\n            app.kubernetes.io/name: vfunction\n            app.kubernetes.io/instance: vfunction-server\n            app.kubernetes.io/managed-by: operator\n        spec:\n          host: \"http://my.domain.com\"\n          org_name: \"MyCompany\"\n          upgrade: \"Never\"\n          admin:\n            email: \"admin@mycompany.com\"\n            name: \"Admin\"\n            password: \"Password1!\"\n          measurements:\n            auto_scaling: \"No\"\n            min_number_of_services: \"2\"\n            max_number_of_services: \"10\"\n            S3:\n              bucket: \"\"\n              key: \"\"\n              secret: \"\"\n          smtp:\n            password: \"\"\n            url: \"\"\n            identity: \"\"\n            user: \"\"\n          authentication:\n            authority: \"\"\n            client_id: \"\"\n            jwks_url: \"\"\n            issuer: \"\"\n            ca_root_crt: |\n              -----BEGIN CERTIFICATE-----\n              ...\n              -----END CERTIFICATE-----\n          tls:\n            use_letsencrypt: \"No\"\n            crt: |\n              -----BEGIN CERTIFICATE-----\n              ...\n              -----END CERTIFICATE-----\n            key: |\n              -----BEGIN PRIVATE KEY-----\n              ...\n              -----END PRIVATE KEY-----\n          backup:\n            mysql:\n              S3:\n                bucket: \"\"\n                key: \"\"\n                secret: \"\"\n    ```\n    b. Customize the template fields by replacing with your information:\n\n    - **host**: Enter the FQDN for accessing the vFunction dashboard.\n                Make sure that you use a domain name and not an IP address. Writing \"https://\" will mandate TLS while writing \"http://\" will expose the server through HTTP.\n    - **org_name**: Enter your organization name.\n    - **upgrade**: Choose auto-upgrade mode\n        - **Daily**: The operator will check for a new version every day at 3 AM and will install it automatically.\n        - **Always**: The operator will check for a new version every 10 minutes and will install it automatically.\n        - **Never**: The automatic upgrading mechanism is off (default).\n        - **Maintenance**: Put the operator in a maintenance mode.\n    - **admin.email**: Enter the email address of your administrator.\n    - **admin.name**: Enter the name of your administrator.\n    - **admin.password**: Enter the password you want to use for the vFunction administrator.\n                          The password should be at least 8 characters long, and consist of at least one lowercase letter, at least one uppercase letter, at least one number, and at least one special character.\n    - **measurements.auto_scaling**: Indicates if the measurement services auto scalling is active.\n    - **measurements.min\\_num\\_of\\_services**: Minimum Number of measurement service pods.\n    - **measurements.max\\_num\\_of\\_services**: Maximum Number of measurement service pods.\n    - **measurements.S3**: Save all measurements data to S3, instead of local PV (optional).\n        - **measurements.S3.bucket**: Measurements S3 bucket name.\n        - **measurements.S3.key**: Measurements S3 key.\n        - **measurements.S3.secret**: Measurements S3 secret.\n        - **measurements.S3.region**: Measurements S3 region.\n    - **smtp.user**: Enter the email address for a designated user for the SMTP server (optional).\n    - **smtp.password**: Enter this user\u2019s password (optional).\n    - **smtp.identity**: Enter this user\u2019s password (optional).\n    - **smtp.url**: Enter the SMTP server URL (optional).\n    - **authentication.authority**: Authority for authentication (Optional).\n    - **authentication.client_id**: Client ID for authentication (Optional).\n    - **authentication.jwks_url**: JWKS URL for authentication (Optional).\n    - **authentication.issuer**: Issuer for authentication (Optional).\n    - **authentication.ca\\_root\\_crt**: CA root certificate for authentication (Optional).\n    - **tls.crt**: If your host FQDN starts with \u201chttps\u201d, paste in the certifications you have for using the TLS connection.\n    - **tls.key**: If your host FQDN starts with \u201chttps\u201d, enter the key you have for using the TLS connection.\n    - **backup.mysql.S3**: Backup MySQL to S3 (optional).\n        - **backup.mysql.S3.bucket**: MySQL backup S3 bucket name.\n        - **backup.mysql.S3.key**: MySQL backup S3 key.\n        - **backup.mysql.S3.secret**: MySQL backup S3 secret.\n        - **backup.mysql.S3.region**: MySQL backup S3 region.\n\n1. In the Installed Operators window choose and click on vFunction Operator and then Create Instance.\n1. In the Create vFunctionServer window, paste the YAML file that you created in step 1.\n1. Click Create.\n1. You can now click on your new created vFunction operand in order to see its details and installation progress.\n\n## Verifying the installation\n\nCheck that the operand installed successfully:\n\n1. Check that the \"Operand State\" property shows \u201cWorking\u201d.\n1. Check that the \"Successfully Installed\" property shows \"Yes\".\n\nIf \"Operand State\" shows \"Failed\", it indicates the operand wasn\u2019t installed correctly. Check the events and logs for all pods (operator and image containers) for any issues. In the event that you cannot troubleshoot, contact vFunction support.\n\n## After installation\n\nThe vFunction site is now accessible via the newly created vFunction application custom address, for example, my.domain.com. There are two ways you can access the vFunction dashboard.\n\n### Access using the router canonical hostname\n\n1. Update your DNS provider by creating a canonical name (CNAME) record.\nThis record should point to your host address, and to the \u201dvfunction\u201d subdomain of the  OpenShift canonical router hostname as the alias.\nFor example, ***my.domain.com.   CNAME   vfunction.apps.ocp4.my-openshift.com.***\n2. Find your cluster Router Canonical Hostname address in the newly created vfunction-route-xxx under your vFunction OpenShift project -> **Networking** -> **Routes** -> **vfunction-route-xxx** route -> **Router Canonical Hostname** field.\nYou can now access the dashboard using your defined \"host\" spec property (as above).\n\n### Access using the nginx service location\n\nYou may use this access method if your OpenShift is installed on a provider that supports exposing LoadBalancer-type services.\n1. Update your DNS provider by creating a canonical name (CNAME) record.\nThis record should point to your host address and to the vfunction-nginx-xxx service location.\nFor example, ***my.domain.com.   CNAME   a05951ed7cdf-1394239323.us-east-1.elb.amazonaws.com.***\n1. Point your custom domain to the vfunction-nginx-xxx service's external IP location, which you can find in the OpenShift project > **Networking** -> **Services** -> **vfunction-nginx-xxx** service > **Service Address** > **Location** field.\n\n## Upgrade and Rollback\n\nThe vFunction operator includes a built-in auto-upgrade mechanism.\n\nYou can choose one of 4 upgrading modes:\n- **Daily**: The operator will check for a new version every day at 3 AM and will install it automatically.\n- **Always**: The operator will check for a new version every 10 minutes and will install it automatically.\n- **Never**: The automatic upgrading mechanism is off (default).\n- **Maintenance**: Put the operator in a maintenance mode.\n\nFor an on-demand upgrade,  you can change anytime the upgrading mode from \u201cNever\u201d to \u201cAlways\u201d, wait for the operand to be upgraded, and change again to \u201cNever\u201d.\n\nDuring the upgrade, the \"Operand State\" property will change to \u201cUpgrading...\u201d and back again to \u201cWorking\u201d after a successful upgrade.\n\nIn case of a failure upgrading the operand, an automatic rollback to the last working version will occur. The failed version will be marked as defective and the operator will not try to upgrade to it again.\n\nChoosing the \"Maintenance\" option will tell the operator to take down all pods, so you can safely fix storage issues, return volumes from snapshots, etc.\nAfter finishing the maintenance, return the upgrade mode to your original desired policy.",
      "csv_display_name": "vFunction Operator",
      "csv_metadata_description": "vFunction is a cutting-edge code analysis, machine learning, and automation to boost your Java modernization projects.",
      "csv_name": "vfunction-server-operator.v2.5.804",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:30:03.739000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "vfunction-server-operator",
      "provided_apis": [
        {
          "group": "vfunction.com",
          "kind": "VfunctionServer",
          "plural": "vfunctionservers",
          "version": "v1"
        }
      ],
      "provider": "vFunction",
      "related_images": [
        {
          "digest": "sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "image": "registry.connect.redhat.com/vfunction/vfunction-server-operator@sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "name": "vfunction-server-operator"
        },
        {
          "digest": "sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "image": "registry.connect.redhat.com/vfunction/vfunction-mysql@sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "name": "vfunction-mysql"
        },
        {
          "digest": "sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "image": "registry.connect.redhat.com/vfunction/vfunction-nginx@sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "name": "vfunction-nginx"
        },
        {
          "digest": "sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "image": "registry.connect.redhat.com/vfunction/vfunction-storage@sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "name": "vfunction-storage"
        },
        {
          "digest": "sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-idp@sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "name": "vfunction-vfapi-idp"
        },
        {
          "digest": "sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-measurements@sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "name": "vfunction-vfapi-measurements"
        },
        {
          "digest": "sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-organizations@sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "name": "vfunction-vfapi-organizations"
        },
        {
          "digest": "sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-users@sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "name": "vfunction-vfapi-users"
        },
        {
          "digest": "sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "image": "registry.connect.redhat.com/vfunction/vfunction-server-operator@sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "name": "vfunction-server-operator-9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe-annotation"
        },
        {
          "digest": "sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "image": "registry.connect.redhat.com/vfunction/vfunction-mysql@sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "name": "vfunction_mysql_original_image"
        },
        {
          "digest": "sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "image": "registry.connect.redhat.com/vfunction/vfunction-nginx@sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "name": "vfunction_nginx_original_image"
        },
        {
          "digest": "sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "image": "registry.connect.redhat.com/vfunction/vfunction-storage@sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "name": "vfunction_storage_original_image"
        },
        {
          "digest": "sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-idp@sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "name": "vfunction_vfapi_idp_original_image"
        },
        {
          "digest": "sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-measurements@sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "name": "vfunction_vfapi_measurements_original_image"
        },
        {
          "digest": "sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-organizations@sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "name": "vfunction_vfapi_organizations_original_image"
        },
        {
          "digest": "sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-users@sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "name": "vfunction_vfapi_users_original_image"
        }
      ],
      "replaces": null,
      "skip_range": "<2.5.804",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.5.804",
      "version_original": "2.5.804"
    },
    {
      "_id": "62eeb9f18c2137a6fb675864",
      "alm_examples": [
        {
          "api_version": "vfunction.com/v1",
          "kind": "VfunctionServer",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "vfunction-server",
              "app.kubernetes.io/managed-by": "operator",
              "app.kubernetes.io/name": "vfunction",
              "name": "vfunction"
            },
            "name": "vfunction-server",
            "namespace": "vfunction"
          },
          "spec": {
            "admin": {
              "email": "admin@mycompany.com",
              "name": "Admin",
              "password": "Password1!"
            },
            "authentication": {
              "authority": "",
              "ca_root_crt": "",
              "client_id": "",
              "issuer": "",
              "jwks_url": ""
            },
            "backup": {
              "mysql": {
                "S3": {
                  "bucket": "",
                  "key": "",
                  "region": "",
                  "secret": ""
                }
              }
            },
            "host": "http://my.domain.com",
            "measurements": {
              "S3": {
                "bucket": "",
                "key": "",
                "region": "",
                "secret": ""
              },
              "auto_scaling": "No",
              "max_number_of_services": "10",
              "min_number_of_services": "2"
            },
            "org_name": "MyCompany",
            "smtp": {
              "identity": "",
              "password": "",
              "url": "",
              "user": ""
            },
            "tls": {
              "crt": "",
              "key": "",
              "use_letsencrypt": "No"
            },
            "upgrade": "Never"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/vfunction/vfunction-server-operator-bundle@sha256:891fb91a4b5f517ff304584409dbc6d0e33f6a6b92965a8bc5e5221873102304",
      "bundle_path_digest": "sha256:891fb91a4b5f517ff304584409dbc6d0e33f6a6b92965a8bc5e5221873102304",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-06T18:58:57.830000+00:00",
      "csv_description": "\n## Introduction\n\n[vFunction](https://www.vfunction.com/) is a cloud-native modernization platform that combines dynamic and static code analysis, machine learning, and automation to automatically identify and extract services from existing applications. vFunction is the only platform purpose-built for modernization of Java applications.\n\nThe vFunction modernization process starts by learning the running monolithic application, and surfacing the interdependencies within it. Using AI, the platform analyzes and identifies services that can be separated from the application. This decomposition can present a range of micro, mini, or even macro services, depending on your application environment, each being an independently deployable and scalable application component.\n\nvFunction automates the extraction of these services, enabling you to modernize your monolith, quickly and easily.\n\n## The vFunction platform\n\nThe platform consists of 3 basic components; the server, the controller package, and a tools package. The server runs as an operand on an OpenShift environment. The controller package is installed on the machine that runs the monolithic application which can be either a Linux or a Windows machine, and the tools are run on a development machine, with access to the code of the monolithic application.\n\nThe controller package consists of three elements: the vFunction agent, that collects data during the dynamic analysis phase; the vFunction Viper application, that performs static analysis on the binaries of the application; and the vFunction controller that handles all the communication between the agent, Viper, and the vFunction server.\n\nThe vFunction agent is a mix of a Java and native agent, and needs to run on the JVM that is currently running your application. [Refer to the vFunction OOB Support Matrix document](https://drive.google.com/file/d/1ccq8LFab1FrYAimDUxwgjiCOdk4QuVzs/view) for a list of supported application servers and JVMs.\n\nThis operator installs a vFunction server instance to be connected later with one or more vFunction controllers installed on your application machine(s).\n\n## Before You Start\n\nThe vFunction operator requires a Red Hat OpenShift Kubernetes Application Platform 4.x.\n\nThe cluster recommended configuration (which is the same as the minimal one) should consist of:\n\n- *1 master node*\n\n- *1 worker node*\n\n- *Storage capacity enough for dynamically provision 2 PVs of 50G each*\n\n- *A default StorageClass configured*\n\nvFunction doesn\u2019t provide any encryption mechanism for data stored on any attached storage. If required, encryption can be achieved by the client by using its own external means on the storage itself.\n\nvFunction supports backup of all critical data as part of the application. Nevertheless, for complete backup of entire data it is recommended that the client apply its own storage based backup mechanism.\n\n## Install Prerequisites\n\n###Cluster:\nThe operator was certified and tested on OCP 4.6 and 4.7.\nIf you encounter any issue with other OCP versions or cloud providers please contact info@vfunction.com.\n\n###Storage:\nThe operator creates two new PersistentVolumeClaims (PVCs) during installation time. For their creation, it relies on the default StorageClass to dynamically provision two PersistentVolumes (PVs). The system must have a default StorageClass in place.\n\nBoth PersistentVolumes are accessed with ReadWriteOnce mode.\n\n###Project:\nThe operator should be installed in a new and dedicated project (namespace). If you intend to install more than one vFunction operands in the same cluster, please use different projects for each one. Installation of more than one operand on the same cluster will allow scaling by load balancing multiple applications to different vFunction servers.\n\n## Installation instructions\n\n1. Prepare the YAML file to use in the installation:\n\n    a. Copy the following YAML template into a text editor:\n\n    ```yaml\n        apiVersion: vfunction.com/v1\n        kind: VfunctionServer\n        metadata:\n          name: vfunction\n          namespace: vfunction\n          labels:\n            name: vfunction\n            app.kubernetes.io/name: vfunction\n            app.kubernetes.io/instance: vfunction-server\n            app.kubernetes.io/managed-by: operator\n        spec:\n          host: \"http://my.domain.com\"\n          org_name: \"MyCompany\"\n          upgrade: \"Never\"\n          admin:\n            email: \"admin@mycompany.com\"\n            name: \"Admin\"\n            password: \"Password1!\"\n          measurements:\n            auto_scaling: \"No\"\n            min_number_of_services: \"2\"\n            max_number_of_services: \"10\"\n            S3:\n              bucket: \"\"\n              key: \"\"\n              secret: \"\"\n          smtp:\n            password: \"\"\n            url: \"\"\n            identity: \"\"\n            user: \"\"\n          authentication:\n            authority: \"\"\n            client_id: \"\"\n            jwks_url: \"\"\n            issuer: \"\"\n            ca_root_crt: |\n              -----BEGIN CERTIFICATE-----\n              ...\n              -----END CERTIFICATE-----\n          tls:\n            use_letsencrypt: \"No\"\n            crt: |\n              -----BEGIN CERTIFICATE-----\n              ...\n              -----END CERTIFICATE-----\n            key: |\n              -----BEGIN PRIVATE KEY-----\n              ...\n              -----END PRIVATE KEY-----\n          backup:\n            mysql:\n              S3:\n                bucket: \"\"\n                key: \"\"\n                secret: \"\"\n    ```\n    b. Customize the template fields by replacing with your information:\n\n    - **host**: Enter the FQDN for accessing the vFunction dashboard.\n                Make sure that you use a domain name and not an IP address. Writing \"https://\" will mandate TLS while writing \"http://\" will expose the server through HTTP.\n    - **org_name**: Enter your organization name.\n    - **upgrade**: Choose auto-upgrade mode\n        - **Daily**: The operator will check for a new version every day at 3 AM and will install it automatically.\n        - **Always**: The operator will check for a new version every 10 minutes and will install it automatically.\n        - **Never**: The automatic upgrading mechanism is off (default).\n        - **Maintenance**: Put the operator in a maintenance mode.\n    - **admin.email**: Enter the email address of your administrator.\n    - **admin.name**: Enter the name of your administrator.\n    - **admin.password**: Enter the password you want to use for the vFunction administrator.\n                          The password should be at least 8 characters long, and consist of at least one lowercase letter, at least one uppercase letter, at least one number, and at least one special character.\n    - **measurements.auto_scaling**: Indicates if the measurement services auto scalling is active.\n    - **measurements.min\\_num\\_of\\_services**: Minimum Number of measurement service pods.\n    - **measurements.max\\_num\\_of\\_services**: Maximum Number of measurement service pods.\n    - **measurements.S3**: Save all measurements data to S3, instead of local PV (optional).\n        - **measurements.S3.bucket**: Measurements S3 bucket name.\n        - **measurements.S3.key**: Measurements S3 key.\n        - **measurements.S3.secret**: Measurements S3 secret.\n        - **measurements.S3.region**: Measurements S3 region.\n    - **smtp.user**: Enter the email address for a designated user for the SMTP server (optional).\n    - **smtp.password**: Enter this user\u2019s password (optional).\n    - **smtp.identity**: Enter this user\u2019s password (optional).\n    - **smtp.url**: Enter the SMTP server URL (optional).\n    - **authentication.authority**: Authority for authentication (Optional).\n    - **authentication.client_id**: Client ID for authentication (Optional).\n    - **authentication.jwks_url**: JWKS URL for authentication (Optional).\n    - **authentication.issuer**: Issuer for authentication (Optional).\n    - **authentication.ca\\_root\\_crt**: CA root certificate for authentication (Optional).\n    - **tls.crt**: If your host FQDN starts with \u201chttps\u201d, paste in the certifications you have for using the TLS connection.\n    - **tls.key**: If your host FQDN starts with \u201chttps\u201d, enter the key you have for using the TLS connection.\n    - **backup.mysql.S3**: Backup MySQL to S3 (optional).\n        - **backup.mysql.S3.bucket**: MySQL backup S3 bucket name.\n        - **backup.mysql.S3.key**: MySQL backup S3 key.\n        - **backup.mysql.S3.secret**: MySQL backup S3 secret.\n        - **backup.mysql.S3.region**: MySQL backup S3 region.\n\n1. In the Installed Operators window choose and click on vFunction Operator and then Create Instance.\n1. In the Create vFunctionServer window, paste the YAML file that you created in step 1.\n1. Click Create.\n1. You can now click on your new created vFunction operand in order to see its details and installation progress.\n\n## Verifying the installation\n\nCheck that the operand installed successfully:\n\n1. Check that the \"Operand State\" property shows \u201cWorking\u201d.\n1. Check that the \"Successfully Installed\" property shows \"Yes\".\n\nIf \"Operand State\" shows \"Failed\", it indicates the operand wasn\u2019t installed correctly. Check the events and logs for all pods (operator and image containers) for any issues. In the event that you cannot troubleshoot, contact vFunction support.\n\n## After installation\n\nThe vFunction site is now accessible via the newly created vFunction application custom address, for example, my.domain.com. There are two ways you can access the vFunction dashboard.\n\n### Access using the router canonical hostname\n\n1. Update your DNS provider by creating a canonical name (CNAME) record.\nThis record should point to your host address, and to the \u201dvfunction\u201d subdomain of the  OpenShift canonical router hostname as the alias.\nFor example, ***my.domain.com.   CNAME   vfunction.apps.ocp4.my-openshift.com.***\n2. Find your cluster Router Canonical Hostname address in the newly created vfunction-route-xxx under your vFunction OpenShift project -> **Networking** -> **Routes** -> **vfunction-route-xxx** route -> **Router Canonical Hostname** field.\nYou can now access the dashboard using your defined \"host\" spec property (as above).\n\n### Access using the nginx service location\n\nYou may use this access method if your OpenShift is installed on a provider that supports exposing LoadBalancer-type services.\n1. Update your DNS provider by creating a canonical name (CNAME) record.\nThis record should point to your host address and to the vfunction-nginx-xxx service location.\nFor example, ***my.domain.com.   CNAME   a05951ed7cdf-1394239323.us-east-1.elb.amazonaws.com.***\n1. Point your custom domain to the vfunction-nginx-xxx service's external IP location, which you can find in the OpenShift project > **Networking** -> **Services** -> **vfunction-nginx-xxx** service > **Service Address** > **Location** field.\n\n## Upgrade and Rollback\n\nThe vFunction operator includes a built-in auto-upgrade mechanism.\n\nYou can choose one of 4 upgrading modes:\n- **Daily**: The operator will check for a new version every day at 3 AM and will install it automatically.\n- **Always**: The operator will check for a new version every 10 minutes and will install it automatically.\n- **Never**: The automatic upgrading mechanism is off (default).\n- **Maintenance**: Put the operator in a maintenance mode.\n\nFor an on-demand upgrade,  you can change anytime the upgrading mode from \u201cNever\u201d to \u201cAlways\u201d, wait for the operand to be upgraded, and change again to \u201cNever\u201d.\n\nDuring the upgrade, the \"Operand State\" property will change to \u201cUpgrading...\u201d and back again to \u201cWorking\u201d after a successful upgrade.\n\nIn case of a failure upgrading the operand, an automatic rollback to the last working version will occur. The failed version will be marked as defective and the operator will not try to upgrade to it again.\n\nChoosing the \"Maintenance\" option will tell the operator to take down all pods, so you can safely fix storage issues, return volumes from snapshots, etc.\nAfter finishing the maintenance, return the upgrade mode to your original desired policy.",
      "csv_display_name": "vFunction Operator",
      "csv_metadata_description": "vFunction is a cutting-edge code analysis, machine learning, and automation to boost your Java modernization projects.",
      "csv_name": "vfunction-server-operator.v2.5.804",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:38:02.435000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "vfunction-server-operator",
      "provided_apis": [
        {
          "group": "vfunction.com",
          "kind": "VfunctionServer",
          "plural": "vfunctionservers",
          "version": "v1"
        }
      ],
      "provider": "vFunction",
      "related_images": [
        {
          "digest": "sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "image": "registry.connect.redhat.com/vfunction/vfunction-server-operator@sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "name": "vfunction-server-operator"
        },
        {
          "digest": "sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "image": "registry.connect.redhat.com/vfunction/vfunction-mysql@sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "name": "vfunction-mysql"
        },
        {
          "digest": "sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "image": "registry.connect.redhat.com/vfunction/vfunction-nginx@sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "name": "vfunction-nginx"
        },
        {
          "digest": "sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "image": "registry.connect.redhat.com/vfunction/vfunction-storage@sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "name": "vfunction-storage"
        },
        {
          "digest": "sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-idp@sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "name": "vfunction-vfapi-idp"
        },
        {
          "digest": "sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-measurements@sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "name": "vfunction-vfapi-measurements"
        },
        {
          "digest": "sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-organizations@sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "name": "vfunction-vfapi-organizations"
        },
        {
          "digest": "sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-users@sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "name": "vfunction-vfapi-users"
        },
        {
          "digest": "sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "image": "registry.connect.redhat.com/vfunction/vfunction-server-operator@sha256:9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe",
          "name": "vfunction-server-operator-9cbc75c6c4f138ace3f1066a14259997d5e8a248dd8c8ac61aa188887b29bebe-annotation"
        },
        {
          "digest": "sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "image": "registry.connect.redhat.com/vfunction/vfunction-mysql@sha256:169087662a342c28596934ac884c65b63effc099b5c3251016c4a0837c7ed574",
          "name": "vfunction_mysql_original_image"
        },
        {
          "digest": "sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "image": "registry.connect.redhat.com/vfunction/vfunction-nginx@sha256:2d2a8f5473fae838c5015f8e9022025de358492602d6ae8117edfdef1388e8e9",
          "name": "vfunction_nginx_original_image"
        },
        {
          "digest": "sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "image": "registry.connect.redhat.com/vfunction/vfunction-storage@sha256:06e13a5ff23c30a2507230452aacdf963f693e12e495d1cb95fc267e54ed2509",
          "name": "vfunction_storage_original_image"
        },
        {
          "digest": "sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-idp@sha256:675e2ac23a04706a0de260e74aae25da372c6dab44fd3d52068b6817600065bb",
          "name": "vfunction_vfapi_idp_original_image"
        },
        {
          "digest": "sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-measurements@sha256:cf522e4afed51226a6f2bcebcbe9761cbc4513516f089d73d2f1375d0eb12746",
          "name": "vfunction_vfapi_measurements_original_image"
        },
        {
          "digest": "sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-organizations@sha256:0f77f4fbbd4b33087641c4a1f086a88ade15d3d1e0d49d95a0ca12b9d26343df",
          "name": "vfunction_vfapi_organizations_original_image"
        },
        {
          "digest": "sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-users@sha256:d2f83f01dc5f9591ce57f0b31abfe6fe4105d616b2ace9bbd45c43860aa6bf85",
          "name": "vfunction_vfapi_users_original_image"
        }
      ],
      "replaces": null,
      "skip_range": "<2.5.804",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.5.804",
      "version_original": "2.5.804"
    },
    {
      "_id": "62f118458c2137a6fb67ec5b",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "bundle_path_digest": "sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "null",
      "creation_date": "2022-08-08T14:05:57.173000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-08T14:05:57.173000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "cloud-native-postgresql-af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc-annotation"
        },
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.15.2",
      "version_original": "1.15.2"
    },
    {
      "_id": "62f1187ee81a17217613de29",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "bundle_path_digest": "sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "null",
      "creation_date": "2022-08-08T14:06:54.255000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-08T14:06:54.255000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "cloud-native-postgresql-af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc-annotation"
        },
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.15.2",
      "version_original": "1.15.2"
    },
    {
      "_id": "62f119f7c7996e54ea09ad26",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "bundle_path_digest": "sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "null",
      "creation_date": "2022-08-08T14:13:11.194000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-08T14:13:11.194000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "cloud-native-postgresql-af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc-annotation"
        },
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.15.2",
      "version_original": "1.15.2"
    },
    {
      "_id": "62f11a8bc7996e54ea09ad32",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "bundle_path_digest": "sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "null",
      "creation_date": "2022-08-08T14:15:39.825000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-08T14:15:39.825000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "cloud-native-postgresql-af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc-annotation"
        },
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.15.2",
      "version_original": "1.15.2"
    },
    {
      "_id": "62f11a90e81a17217613de60",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "bundle_path_digest": "sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "null",
      "creation_date": "2022-08-08T14:15:44.287000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-08T14:15:44.287000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "cloud-native-postgresql-af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc-annotation"
        },
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.15.2",
      "version_original": "1.15.2"
    },
    {
      "_id": "62f13a5a96f50062ffb7994e",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c6559cc748028d2098791b277d6316570b1985c616a7e3182fc6dde64296aa11",
      "bundle_path_digest": "sha256:c6559cc748028d2098791b277d6316570b1985c616a7e3182fc6dde64296aa11",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-08T16:31:22.243000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T16:27:19.599000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator-352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec-annotation"
        },
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:acbf1a49c061d80c76468137991816401b1c43f4921179013c682d6dfcf814fe",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:acbf1a49c061d80c76468137991816401b1c43f4921179013c682d6dfcf814fe",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "8.6.1",
      "version_original": "8.6.1"
    },
    {
      "_id": "62f13f1ee81a17217613e7ac",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c6559cc748028d2098791b277d6316570b1985c616a7e3182fc6dde64296aa11",
      "bundle_path_digest": "sha256:c6559cc748028d2098791b277d6316570b1985c616a7e3182fc6dde64296aa11",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-08T16:51:42.970000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T16:31:12.517000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator-352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec-annotation"
        },
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:acbf1a49c061d80c76468137991816401b1c43f4921179013c682d6dfcf814fe",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:acbf1a49c061d80c76468137991816401b1c43f4921179013c682d6dfcf814fe",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.6.1",
      "version_original": "8.6.1"
    },
    {
      "_id": "62f13f2decdd7d25b4359344",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c6559cc748028d2098791b277d6316570b1985c616a7e3182fc6dde64296aa11",
      "bundle_path_digest": "sha256:c6559cc748028d2098791b277d6316570b1985c616a7e3182fc6dde64296aa11",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-08T16:51:57.238000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T16:26:43.723000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator-352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec-annotation"
        },
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:acbf1a49c061d80c76468137991816401b1c43f4921179013c682d6dfcf814fe",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:acbf1a49c061d80c76468137991816401b1c43f4921179013c682d6dfcf814fe",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "8.6.1",
      "version_original": "8.6.1"
    },
    {
      "_id": "62f140d7c7996e54ea09b68a",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c6559cc748028d2098791b277d6316570b1985c616a7e3182fc6dde64296aa11",
      "bundle_path_digest": "sha256:c6559cc748028d2098791b277d6316570b1985c616a7e3182fc6dde64296aa11",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-08T16:59:03.420000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-31T20:00:49.270000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator-352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec-annotation"
        },
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:acbf1a49c061d80c76468137991816401b1c43f4921179013c682d6dfcf814fe",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:acbf1a49c061d80c76468137991816401b1c43f4921179013c682d6dfcf814fe",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.6.1",
      "version_original": "8.6.1"
    },
    {
      "_id": "62f1439dc7996e54ea09b6b9",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c6559cc748028d2098791b277d6316570b1985c616a7e3182fc6dde64296aa11",
      "bundle_path_digest": "sha256:c6559cc748028d2098791b277d6316570b1985c616a7e3182fc6dde64296aa11",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-08T17:10:53.946000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T16:34:36.237000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator-352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec-annotation"
        },
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:acbf1a49c061d80c76468137991816401b1c43f4921179013c682d6dfcf814fe",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:acbf1a49c061d80c76468137991816401b1c43f4921179013c682d6dfcf814fe",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.6.1",
      "version_original": "8.6.1"
    },
    {
      "_id": "62f144e996f50062ffb7a1d3",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c6559cc748028d2098791b277d6316570b1985c616a7e3182fc6dde64296aa11",
      "bundle_path_digest": "sha256:c6559cc748028d2098791b277d6316570b1985c616a7e3182fc6dde64296aa11",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-08T17:16:25.018000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T16:41:51.670000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator-352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec-annotation"
        },
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:acbf1a49c061d80c76468137991816401b1c43f4921179013c682d6dfcf814fe",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:acbf1a49c061d80c76468137991816401b1c43f4921179013c682d6dfcf814fe",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.6.1",
      "version_original": "8.6.1"
    },
    {
      "_id": "62f18951ecdd7d25b435a68b",
      "alm_examples": [
        {
          "api_version": "sysdig.com/v1",
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:4ceef82e99ca7e5bf0f8d91a04852ee9315949c146a9ed5c819591e2f46fa550",
      "bundle_path_digest": "sha256:4ceef82e99ca7e5bf0f8d91a04852ee9315949c146a9ed5c819591e2f46fa550",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-08T22:08:17.747000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.15.25",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:11:43.923000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "plural": "sysdigagents",
          "version": "v1"
        }
      ],
      "provider": "Sysdig",
      "related_images": [
        {
          "digest": "sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "name": "sysdig-operator-be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b-annotation"
        },
        {
          "digest": "sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.15.25",
      "version_original": "1.15.25"
    },
    {
      "_id": "62f18c27ecdd7d25b435a709",
      "alm_examples": [
        {
          "api_version": "sysdig.com/v1",
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:4ceef82e99ca7e5bf0f8d91a04852ee9315949c146a9ed5c819591e2f46fa550",
      "bundle_path_digest": "sha256:4ceef82e99ca7e5bf0f8d91a04852ee9315949c146a9ed5c819591e2f46fa550",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-08T22:20:23.931000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.15.25",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:31:36.700000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "version": "v1"
        }
      ],
      "provider": "Sysdig",
      "related_images": [
        {
          "digest": "sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "name": "sysdig-operator-be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b-annotation"
        },
        {
          "digest": "sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.15.25",
      "version_original": "1.15.25"
    },
    {
      "_id": "62f18d53ecdd7d25b435a73d",
      "alm_examples": [
        {
          "api_version": "sysdig.com/v1",
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:4ceef82e99ca7e5bf0f8d91a04852ee9315949c146a9ed5c819591e2f46fa550",
      "bundle_path_digest": "sha256:4ceef82e99ca7e5bf0f8d91a04852ee9315949c146a9ed5c819591e2f46fa550",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-08T22:25:23.612000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.15.25",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:11:58.447000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "plural": "sysdigagents",
          "version": "v1"
        }
      ],
      "provider": "Sysdig",
      "related_images": [
        {
          "digest": "sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "name": "sysdig-operator-be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b-annotation"
        },
        {
          "digest": "sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.15.25",
      "version_original": "1.15.25"
    },
    {
      "_id": "62f18e748c2137a6fb6809db",
      "alm_examples": [
        {
          "api_version": "sysdig.com/v1",
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:4ceef82e99ca7e5bf0f8d91a04852ee9315949c146a9ed5c819591e2f46fa550",
      "bundle_path_digest": "sha256:4ceef82e99ca7e5bf0f8d91a04852ee9315949c146a9ed5c819591e2f46fa550",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-08T22:30:12.905000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.15.25",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:55:46.276000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "plural": "sysdigagents",
          "version": "v1"
        }
      ],
      "provider": "Sysdig",
      "related_images": [
        {
          "digest": "sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "name": "sysdig-operator-be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b-annotation"
        },
        {
          "digest": "sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.15.25",
      "version_original": "1.15.25"
    },
    {
      "_id": "62f18f03e81a17217613fc32",
      "alm_examples": [
        {
          "api_version": "sysdig.com/v1",
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:4ceef82e99ca7e5bf0f8d91a04852ee9315949c146a9ed5c819591e2f46fa550",
      "bundle_path_digest": "sha256:4ceef82e99ca7e5bf0f8d91a04852ee9315949c146a9ed5c819591e2f46fa550",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-08T22:32:35.364000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.15.25",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:38:47.184000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "plural": "sysdigagents",
          "version": "v1"
        }
      ],
      "provider": "Sysdig",
      "related_images": [
        {
          "digest": "sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "name": "sysdig-operator-be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b-annotation"
        },
        {
          "digest": "sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.15.25",
      "version_original": "1.15.25"
    },
    {
      "_id": "62f18f1fecdd7d25b435a7b1",
      "alm_examples": [
        {
          "api_version": "sysdig.com/v1",
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:4ceef82e99ca7e5bf0f8d91a04852ee9315949c146a9ed5c819591e2f46fa550",
      "bundle_path_digest": "sha256:4ceef82e99ca7e5bf0f8d91a04852ee9315949c146a9ed5c819591e2f46fa550",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-08T22:33:03.319000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.15.25",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:55:17.733000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "plural": "sysdigagents",
          "version": "v1"
        }
      ],
      "provider": "Sysdig",
      "related_images": [
        {
          "digest": "sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "name": "sysdig-operator-be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b-annotation"
        },
        {
          "digest": "sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:be33c101498cb8a301851bab997ce6c18e352e11f7d0e8b54c1db8bd9ca6302b",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.15.25",
      "version_original": "1.15.25"
    },
    {
      "_id": "62f1a0c1ecdd7d25b435aa6b",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:ffbf8da10936823a4709c15f6d5a12935f05561260c89e5cf45a93873a29f61d",
      "bundle_path_digest": "sha256:ffbf8da10936823a4709c15f6d5a12935f05561260c89e5cf45a93873a29f61d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-08T23:48:17.667000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.1-beta.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:27:27.053000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator-b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877-annotation"
        },
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:69e352662ee7a9022a2e19c3717860948cb0f459ffb99605c5f27e58cd35a63c",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:69e352662ee7a9022a2e19c3717860948cb0f459ffb99605c5f27e58cd35a63c",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "8.6.1-beta.1",
      "version_original": "8.6.1-beta.1"
    },
    {
      "_id": "62f1a23cc7996e54ea09cd2f",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:ffbf8da10936823a4709c15f6d5a12935f05561260c89e5cf45a93873a29f61d",
      "bundle_path_digest": "sha256:ffbf8da10936823a4709c15f6d5a12935f05561260c89e5cf45a93873a29f61d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-08T23:54:36.696000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.1-beta.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:09:24.084000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator-b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877-annotation"
        },
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:69e352662ee7a9022a2e19c3717860948cb0f459ffb99605c5f27e58cd35a63c",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:69e352662ee7a9022a2e19c3717860948cb0f459ffb99605c5f27e58cd35a63c",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "8.6.1-beta.1",
      "version_original": "8.6.1-beta.1"
    },
    {
      "_id": "62f1a289e81a17217613ff60",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:ffbf8da10936823a4709c15f6d5a12935f05561260c89e5cf45a93873a29f61d",
      "bundle_path_digest": "sha256:ffbf8da10936823a4709c15f6d5a12935f05561260c89e5cf45a93873a29f61d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-08T23:55:53.708000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.1-beta.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:08:03.759000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator-b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877-annotation"
        },
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:69e352662ee7a9022a2e19c3717860948cb0f459ffb99605c5f27e58cd35a63c",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:69e352662ee7a9022a2e19c3717860948cb0f459ffb99605c5f27e58cd35a63c",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.6.1-beta.1",
      "version_original": "8.6.1-beta.1"
    },
    {
      "_id": "62f1a3b8e81a17217613ff6c",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:ffbf8da10936823a4709c15f6d5a12935f05561260c89e5cf45a93873a29f61d",
      "bundle_path_digest": "sha256:ffbf8da10936823a4709c15f6d5a12935f05561260c89e5cf45a93873a29f61d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-09T00:00:56.957000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.1-beta.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:16:00.460000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator-b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877-annotation"
        },
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:69e352662ee7a9022a2e19c3717860948cb0f459ffb99605c5f27e58cd35a63c",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:69e352662ee7a9022a2e19c3717860948cb0f459ffb99605c5f27e58cd35a63c",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.6.1-beta.1",
      "version_original": "8.6.1-beta.1"
    },
    {
      "_id": "62f1a43196f50062ffb7b1f3",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:ffbf8da10936823a4709c15f6d5a12935f05561260c89e5cf45a93873a29f61d",
      "bundle_path_digest": "sha256:ffbf8da10936823a4709c15f6d5a12935f05561260c89e5cf45a93873a29f61d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-09T00:02:57.529000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.1-beta.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:18:37.261000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator-b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877-annotation"
        },
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:69e352662ee7a9022a2e19c3717860948cb0f459ffb99605c5f27e58cd35a63c",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:69e352662ee7a9022a2e19c3717860948cb0f459ffb99605c5f27e58cd35a63c",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.6.1-beta.1",
      "version_original": "8.6.1-beta.1"
    },
    {
      "_id": "62f1a44a8c2137a6fb680ce4",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:ffbf8da10936823a4709c15f6d5a12935f05561260c89e5cf45a93873a29f61d",
      "bundle_path_digest": "sha256:ffbf8da10936823a4709c15f6d5a12935f05561260c89e5cf45a93873a29f61d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-09T00:03:22.136000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.1-beta.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:41:04.527000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator-b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877-annotation"
        },
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:69e352662ee7a9022a2e19c3717860948cb0f459ffb99605c5f27e58cd35a63c",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:69e352662ee7a9022a2e19c3717860948cb0f459ffb99605c5f27e58cd35a63c",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.6.1-beta.1",
      "version_original": "8.6.1-beta.1"
    },
    {
      "_id": "62f2e93ce81a172176146112",
      "alm_examples": [
        {
          "api_version": "csi.hitachi.com/v1",
          "kind": "HSPC",
          "metadata": {
            "name": "hspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hitachi/hspc-operator-bundle@sha256:1fad515e245a132a30d185a68d487518c7b980ac63131569a3cf5d48e871de72",
      "bundle_path_digest": "sha256:1fad515e245a132a30d185a68d487518c7b980ac63131569a3cf5d48e871de72",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-09T23:09:48.824000+00:00",
      "csv_description": "## About\nHitachi Storage Plug-in for Containers (HSPC) is a plugin that integrates Hitachi VSP storage into Kubernetes based clusters.\nHSPC provides dynamic persistent volume provisioning capabilities from Hitachi's block storage arrays.\n\nFor full documentation, go to our [Knowledge Base](https://knowledge.hitachivantara.com/Documents/Adapters_and_Drivers/Storage_Adapters_and_Drivers/Containers) and refer to the reference guide for HSPC v3.10.0.\n\n## Requirements\n\n### Supported Driver Version\n\n* HSPC v3.10.0\n\n### Supported Platforms\n\n* OpenShift v4.8, v4.9, v4.10\n\n### Supported Operating Systems\n\n* RHEL 7.x\n* RHEL 8.x",
      "csv_display_name": "Hitachi Storage Plug-in for Containers",
      "csv_metadata_description": "An operator for managing Hitachi Storage Plug-in for Containers CSI driver",
      "csv_name": "hspc-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:00:06.786000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "hspc-operator",
      "provided_apis": [
        {
          "group": "csi.hitachi.com",
          "kind": "HSPC",
          "plural": "hspcs",
          "version": "v1"
        }
      ],
      "provider": "Hitachi",
      "related_images": [
        {
          "digest": "sha256:7bac0aafe3b6ccaab0b0ee66648a6d4f31f2a989f10d67f97f3c50c211e8512f",
          "image": "registry.connect.redhat.com/hitachi/hspc-csi-driver@sha256:7bac0aafe3b6ccaab0b0ee66648a6d4f31f2a989f10d67f97f3c50c211e8512f",
          "name": "hspc-csi-driver"
        },
        {
          "digest": "sha256:ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5",
          "name": "hspc-operator"
        },
        {
          "digest": "sha256:e29462051266aa293115b4056d0b211fc35e8dfdcd716dd5480cbf2b4411f1c8",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:e29462051266aa293115b4056d0b211fc35e8dfdcd716dd5480cbf2b4411f1c8",
          "name": "ose-csi-external-attacher-v4.8"
        },
        {
          "digest": "sha256:ee5eb1f4f81d03798824a04f14d59dbdc2dbcd29f8b0784f9b43ab38d3032fc1",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:ee5eb1f4f81d03798824a04f14d59dbdc2dbcd29f8b0784f9b43ab38d3032fc1",
          "name": "ose-csi-external-provisioner-v4.8"
        },
        {
          "digest": "sha256:1eb45a961aadc52f46a3d3084da6f667a9da4692e29672ed49d42a95d4c0597d",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:1eb45a961aadc52f46a3d3084da6f667a9da4692e29672ed49d42a95d4c0597d",
          "name": "ose-csi-node-driver-registrar-v4.8"
        },
        {
          "digest": "sha256:e8c4b045477241f14bb59fe2625b3bb6a010c2f205de8719ecbaabe62b6963ca",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:e8c4b045477241f14bb59fe2625b3bb6a010c2f205de8719ecbaabe62b6963ca",
          "name": "ose-csi-livenessprobe-v4.8"
        },
        {
          "digest": "sha256:eaf9d026d37644d16782cb3d4a9d74f7c969f073d3ba9aa45a83400670251499",
          "image": "registry.redhat.io/openshift4/ose-csi-external-resizer-rhel8@sha256:eaf9d026d37644d16782cb3d4a9d74f7c969f073d3ba9aa45a83400670251499",
          "name": "ose-csi-external-resizer-rhel8-v4.8"
        },
        {
          "digest": "sha256:b51e2413c4dd58a9073ddfe9bd48303c13ae5662ccbb1a56c75c75acd0fb1381",
          "image": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:b51e2413c4dd58a9073ddfe9bd48303c13ae5662ccbb1a56c75c75acd0fb1381",
          "name": "ose-csi-external-snapshotter-rhel8-v4.8"
        },
        {
          "digest": "sha256:1cdd882b2257fff3198cfc8e8dad47e4e2e067966b6c56633daf62c6e12964d4",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:1cdd882b2257fff3198cfc8e8dad47e4e2e067966b6c56633daf62c6e12964d4",
          "name": "ose-csi-external-attacher-v4.9"
        },
        {
          "digest": "sha256:448ad197f941249247a9672b38cdf2c91b33fd588c4c7c54eda83df1f3e9bc7e",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:448ad197f941249247a9672b38cdf2c91b33fd588c4c7c54eda83df1f3e9bc7e",
          "name": "ose-csi-external-provisioner-v4.9"
        },
        {
          "digest": "sha256:09be9f710932bc2f4f73eefaca2aa24e5da48ac178fa3f55a972d2a2e3e9c3bc",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:09be9f710932bc2f4f73eefaca2aa24e5da48ac178fa3f55a972d2a2e3e9c3bc",
          "name": "ose-csi-node-driver-registrar-v4.9"
        },
        {
          "digest": "sha256:c61a887f2135c82fb4409cdaaba1c4e81f93c20ca335a40c228242f3329e0547",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:c61a887f2135c82fb4409cdaaba1c4e81f93c20ca335a40c228242f3329e0547",
          "name": "ose-csi-livenessprobe-v4.9"
        },
        {
          "digest": "sha256:10c2e6528ac30691aa9f42d6b53f5b65c41321be51d2a6a93991959829db004f",
          "image": "registry.redhat.io/openshift4/ose-csi-external-resizer-rhel8@sha256:10c2e6528ac30691aa9f42d6b53f5b65c41321be51d2a6a93991959829db004f",
          "name": "ose-csi-external-resizer-rhel8-v4.9"
        },
        {
          "digest": "sha256:0c37ebb246653199b76ad6114f584b1b4db1ff1048d6b0f228ed843fa2e2eb16",
          "image": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:0c37ebb246653199b76ad6114f584b1b4db1ff1048d6b0f228ed843fa2e2eb16",
          "name": "ose-csi-external-snapshotter-rhel8-v4.9"
        },
        {
          "digest": "sha256:cdaf874ffaff5e3e4cae473c40372ef45f7d9e3bb35a93c7a715bcc30ff03a4f",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:cdaf874ffaff5e3e4cae473c40372ef45f7d9e3bb35a93c7a715bcc30ff03a4f",
          "name": "ose-csi-external-attacher-v4.10"
        },
        {
          "digest": "sha256:95010584242f9705ffad17632bd11cf1299955b986d1e5b4b8892f9fda75bb00",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:95010584242f9705ffad17632bd11cf1299955b986d1e5b4b8892f9fda75bb00",
          "name": "ose-csi-external-provisioner-v4.10"
        },
        {
          "digest": "sha256:90792483c531bfa2c51e5be45efdc0e52e3e2461a4c9a6921428d719415dc8b0",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:90792483c531bfa2c51e5be45efdc0e52e3e2461a4c9a6921428d719415dc8b0",
          "name": "ose-csi-node-driver-registrar-v4.10"
        },
        {
          "digest": "sha256:b9db5f0eb8a4d145b6f5a89e12d3361a04616e27b8b8d4bcdfd2c1545f6dc407",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:b9db5f0eb8a4d145b6f5a89e12d3361a04616e27b8b8d4bcdfd2c1545f6dc407",
          "name": "ose-csi-livenessprobe-v4.10"
        },
        {
          "digest": "sha256:34386f8c0227015c1abd9d7dfd8e9b687cba7047ec021d393ab39133e67178b9",
          "image": "registry.redhat.io/openshift4/ose-csi-external-resizer-rhel8@sha256:34386f8c0227015c1abd9d7dfd8e9b687cba7047ec021d393ab39133e67178b9",
          "name": "ose-csi-external-resizer-rhel8-v4.10"
        },
        {
          "digest": "sha256:cb781aff7b4ead2e0535274186b5e97274d734e19e9ef404e187bc39d11bb2cc",
          "image": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:cb781aff7b4ead2e0535274186b5e97274d734e19e9ef404e187bc39d11bb2cc",
          "name": "ose-csi-external-snapshotter-rhel8-v4.10"
        },
        {
          "digest": "sha256:ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5",
          "name": "hspc-operator-ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5-annotation"
        },
        {
          "digest": "sha256:ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "62f2e95bc7996e54ea0a2e91",
      "alm_examples": [
        {
          "api_version": "csi.hitachi.com/v1",
          "kind": "HSPC",
          "metadata": {
            "name": "hspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hitachi/hspc-operator-bundle@sha256:1fad515e245a132a30d185a68d487518c7b980ac63131569a3cf5d48e871de72",
      "bundle_path_digest": "sha256:1fad515e245a132a30d185a68d487518c7b980ac63131569a3cf5d48e871de72",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-09T23:10:19.368000+00:00",
      "csv_description": "## About\nHitachi Storage Plug-in for Containers (HSPC) is a plugin that integrates Hitachi VSP storage into Kubernetes based clusters.\nHSPC provides dynamic persistent volume provisioning capabilities from Hitachi's block storage arrays.\n\nFor full documentation, go to our [Knowledge Base](https://knowledge.hitachivantara.com/Documents/Adapters_and_Drivers/Storage_Adapters_and_Drivers/Containers) and refer to the reference guide for HSPC v3.10.0.\n\n## Requirements\n\n### Supported Driver Version\n\n* HSPC v3.10.0\n\n### Supported Platforms\n\n* OpenShift v4.8, v4.9, v4.10\n\n### Supported Operating Systems\n\n* RHEL 7.x\n* RHEL 8.x",
      "csv_display_name": "Hitachi Storage Plug-in for Containers",
      "csv_metadata_description": "An operator for managing Hitachi Storage Plug-in for Containers CSI driver",
      "csv_name": "hspc-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:58:02.185000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "hspc-operator",
      "provided_apis": [
        {
          "group": "csi.hitachi.com",
          "kind": "HSPC",
          "plural": "hspcs",
          "version": "v1"
        }
      ],
      "provider": "Hitachi",
      "related_images": [
        {
          "digest": "sha256:7bac0aafe3b6ccaab0b0ee66648a6d4f31f2a989f10d67f97f3c50c211e8512f",
          "image": "registry.connect.redhat.com/hitachi/hspc-csi-driver@sha256:7bac0aafe3b6ccaab0b0ee66648a6d4f31f2a989f10d67f97f3c50c211e8512f",
          "name": "hspc-csi-driver"
        },
        {
          "digest": "sha256:ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5",
          "name": "hspc-operator"
        },
        {
          "digest": "sha256:e29462051266aa293115b4056d0b211fc35e8dfdcd716dd5480cbf2b4411f1c8",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:e29462051266aa293115b4056d0b211fc35e8dfdcd716dd5480cbf2b4411f1c8",
          "name": "ose-csi-external-attacher-v4.8"
        },
        {
          "digest": "sha256:ee5eb1f4f81d03798824a04f14d59dbdc2dbcd29f8b0784f9b43ab38d3032fc1",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:ee5eb1f4f81d03798824a04f14d59dbdc2dbcd29f8b0784f9b43ab38d3032fc1",
          "name": "ose-csi-external-provisioner-v4.8"
        },
        {
          "digest": "sha256:1eb45a961aadc52f46a3d3084da6f667a9da4692e29672ed49d42a95d4c0597d",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:1eb45a961aadc52f46a3d3084da6f667a9da4692e29672ed49d42a95d4c0597d",
          "name": "ose-csi-node-driver-registrar-v4.8"
        },
        {
          "digest": "sha256:e8c4b045477241f14bb59fe2625b3bb6a010c2f205de8719ecbaabe62b6963ca",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:e8c4b045477241f14bb59fe2625b3bb6a010c2f205de8719ecbaabe62b6963ca",
          "name": "ose-csi-livenessprobe-v4.8"
        },
        {
          "digest": "sha256:eaf9d026d37644d16782cb3d4a9d74f7c969f073d3ba9aa45a83400670251499",
          "image": "registry.redhat.io/openshift4/ose-csi-external-resizer-rhel8@sha256:eaf9d026d37644d16782cb3d4a9d74f7c969f073d3ba9aa45a83400670251499",
          "name": "ose-csi-external-resizer-rhel8-v4.8"
        },
        {
          "digest": "sha256:b51e2413c4dd58a9073ddfe9bd48303c13ae5662ccbb1a56c75c75acd0fb1381",
          "image": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:b51e2413c4dd58a9073ddfe9bd48303c13ae5662ccbb1a56c75c75acd0fb1381",
          "name": "ose-csi-external-snapshotter-rhel8-v4.8"
        },
        {
          "digest": "sha256:1cdd882b2257fff3198cfc8e8dad47e4e2e067966b6c56633daf62c6e12964d4",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:1cdd882b2257fff3198cfc8e8dad47e4e2e067966b6c56633daf62c6e12964d4",
          "name": "ose-csi-external-attacher-v4.9"
        },
        {
          "digest": "sha256:448ad197f941249247a9672b38cdf2c91b33fd588c4c7c54eda83df1f3e9bc7e",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:448ad197f941249247a9672b38cdf2c91b33fd588c4c7c54eda83df1f3e9bc7e",
          "name": "ose-csi-external-provisioner-v4.9"
        },
        {
          "digest": "sha256:09be9f710932bc2f4f73eefaca2aa24e5da48ac178fa3f55a972d2a2e3e9c3bc",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:09be9f710932bc2f4f73eefaca2aa24e5da48ac178fa3f55a972d2a2e3e9c3bc",
          "name": "ose-csi-node-driver-registrar-v4.9"
        },
        {
          "digest": "sha256:c61a887f2135c82fb4409cdaaba1c4e81f93c20ca335a40c228242f3329e0547",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:c61a887f2135c82fb4409cdaaba1c4e81f93c20ca335a40c228242f3329e0547",
          "name": "ose-csi-livenessprobe-v4.9"
        },
        {
          "digest": "sha256:10c2e6528ac30691aa9f42d6b53f5b65c41321be51d2a6a93991959829db004f",
          "image": "registry.redhat.io/openshift4/ose-csi-external-resizer-rhel8@sha256:10c2e6528ac30691aa9f42d6b53f5b65c41321be51d2a6a93991959829db004f",
          "name": "ose-csi-external-resizer-rhel8-v4.9"
        },
        {
          "digest": "sha256:0c37ebb246653199b76ad6114f584b1b4db1ff1048d6b0f228ed843fa2e2eb16",
          "image": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:0c37ebb246653199b76ad6114f584b1b4db1ff1048d6b0f228ed843fa2e2eb16",
          "name": "ose-csi-external-snapshotter-rhel8-v4.9"
        },
        {
          "digest": "sha256:cdaf874ffaff5e3e4cae473c40372ef45f7d9e3bb35a93c7a715bcc30ff03a4f",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:cdaf874ffaff5e3e4cae473c40372ef45f7d9e3bb35a93c7a715bcc30ff03a4f",
          "name": "ose-csi-external-attacher-v4.10"
        },
        {
          "digest": "sha256:95010584242f9705ffad17632bd11cf1299955b986d1e5b4b8892f9fda75bb00",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:95010584242f9705ffad17632bd11cf1299955b986d1e5b4b8892f9fda75bb00",
          "name": "ose-csi-external-provisioner-v4.10"
        },
        {
          "digest": "sha256:90792483c531bfa2c51e5be45efdc0e52e3e2461a4c9a6921428d719415dc8b0",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:90792483c531bfa2c51e5be45efdc0e52e3e2461a4c9a6921428d719415dc8b0",
          "name": "ose-csi-node-driver-registrar-v4.10"
        },
        {
          "digest": "sha256:b9db5f0eb8a4d145b6f5a89e12d3361a04616e27b8b8d4bcdfd2c1545f6dc407",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:b9db5f0eb8a4d145b6f5a89e12d3361a04616e27b8b8d4bcdfd2c1545f6dc407",
          "name": "ose-csi-livenessprobe-v4.10"
        },
        {
          "digest": "sha256:34386f8c0227015c1abd9d7dfd8e9b687cba7047ec021d393ab39133e67178b9",
          "image": "registry.redhat.io/openshift4/ose-csi-external-resizer-rhel8@sha256:34386f8c0227015c1abd9d7dfd8e9b687cba7047ec021d393ab39133e67178b9",
          "name": "ose-csi-external-resizer-rhel8-v4.10"
        },
        {
          "digest": "sha256:cb781aff7b4ead2e0535274186b5e97274d734e19e9ef404e187bc39d11bb2cc",
          "image": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:cb781aff7b4ead2e0535274186b5e97274d734e19e9ef404e187bc39d11bb2cc",
          "name": "ose-csi-external-snapshotter-rhel8-v4.10"
        },
        {
          "digest": "sha256:ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5",
          "name": "hspc-operator-ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5-annotation"
        },
        {
          "digest": "sha256:ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "62f2ea31ecdd7d25b4360c70",
      "alm_examples": [
        {
          "api_version": "csi.hitachi.com/v1",
          "kind": "HSPC",
          "metadata": {
            "name": "hspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hitachi/hspc-operator-bundle@sha256:1fad515e245a132a30d185a68d487518c7b980ac63131569a3cf5d48e871de72",
      "bundle_path_digest": "sha256:1fad515e245a132a30d185a68d487518c7b980ac63131569a3cf5d48e871de72",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-09T23:13:53.793000+00:00",
      "csv_description": "## About\nHitachi Storage Plug-in for Containers (HSPC) is a plugin that integrates Hitachi VSP storage into Kubernetes based clusters.\nHSPC provides dynamic persistent volume provisioning capabilities from Hitachi's block storage arrays.\n\nFor full documentation, go to our [Knowledge Base](https://knowledge.hitachivantara.com/Documents/Adapters_and_Drivers/Storage_Adapters_and_Drivers/Containers) and refer to the reference guide for HSPC v3.10.0.\n\n## Requirements\n\n### Supported Driver Version\n\n* HSPC v3.10.0\n\n### Supported Platforms\n\n* OpenShift v4.8, v4.9, v4.10\n\n### Supported Operating Systems\n\n* RHEL 7.x\n* RHEL 8.x",
      "csv_display_name": "Hitachi Storage Plug-in for Containers",
      "csv_metadata_description": "An operator for managing Hitachi Storage Plug-in for Containers CSI driver",
      "csv_name": "hspc-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:34:59.775000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "hspc-operator",
      "provided_apis": [
        {
          "group": "csi.hitachi.com",
          "kind": "HSPC",
          "plural": "hspcs",
          "version": "v1"
        }
      ],
      "provider": "Hitachi",
      "related_images": [
        {
          "digest": "sha256:7bac0aafe3b6ccaab0b0ee66648a6d4f31f2a989f10d67f97f3c50c211e8512f",
          "image": "registry.connect.redhat.com/hitachi/hspc-csi-driver@sha256:7bac0aafe3b6ccaab0b0ee66648a6d4f31f2a989f10d67f97f3c50c211e8512f",
          "name": "hspc-csi-driver"
        },
        {
          "digest": "sha256:ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5",
          "name": "hspc-operator"
        },
        {
          "digest": "sha256:e29462051266aa293115b4056d0b211fc35e8dfdcd716dd5480cbf2b4411f1c8",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:e29462051266aa293115b4056d0b211fc35e8dfdcd716dd5480cbf2b4411f1c8",
          "name": "ose-csi-external-attacher-v4.8"
        },
        {
          "digest": "sha256:ee5eb1f4f81d03798824a04f14d59dbdc2dbcd29f8b0784f9b43ab38d3032fc1",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:ee5eb1f4f81d03798824a04f14d59dbdc2dbcd29f8b0784f9b43ab38d3032fc1",
          "name": "ose-csi-external-provisioner-v4.8"
        },
        {
          "digest": "sha256:1eb45a961aadc52f46a3d3084da6f667a9da4692e29672ed49d42a95d4c0597d",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:1eb45a961aadc52f46a3d3084da6f667a9da4692e29672ed49d42a95d4c0597d",
          "name": "ose-csi-node-driver-registrar-v4.8"
        },
        {
          "digest": "sha256:e8c4b045477241f14bb59fe2625b3bb6a010c2f205de8719ecbaabe62b6963ca",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:e8c4b045477241f14bb59fe2625b3bb6a010c2f205de8719ecbaabe62b6963ca",
          "name": "ose-csi-livenessprobe-v4.8"
        },
        {
          "digest": "sha256:eaf9d026d37644d16782cb3d4a9d74f7c969f073d3ba9aa45a83400670251499",
          "image": "registry.redhat.io/openshift4/ose-csi-external-resizer-rhel8@sha256:eaf9d026d37644d16782cb3d4a9d74f7c969f073d3ba9aa45a83400670251499",
          "name": "ose-csi-external-resizer-rhel8-v4.8"
        },
        {
          "digest": "sha256:b51e2413c4dd58a9073ddfe9bd48303c13ae5662ccbb1a56c75c75acd0fb1381",
          "image": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:b51e2413c4dd58a9073ddfe9bd48303c13ae5662ccbb1a56c75c75acd0fb1381",
          "name": "ose-csi-external-snapshotter-rhel8-v4.8"
        },
        {
          "digest": "sha256:1cdd882b2257fff3198cfc8e8dad47e4e2e067966b6c56633daf62c6e12964d4",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:1cdd882b2257fff3198cfc8e8dad47e4e2e067966b6c56633daf62c6e12964d4",
          "name": "ose-csi-external-attacher-v4.9"
        },
        {
          "digest": "sha256:448ad197f941249247a9672b38cdf2c91b33fd588c4c7c54eda83df1f3e9bc7e",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:448ad197f941249247a9672b38cdf2c91b33fd588c4c7c54eda83df1f3e9bc7e",
          "name": "ose-csi-external-provisioner-v4.9"
        },
        {
          "digest": "sha256:09be9f710932bc2f4f73eefaca2aa24e5da48ac178fa3f55a972d2a2e3e9c3bc",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:09be9f710932bc2f4f73eefaca2aa24e5da48ac178fa3f55a972d2a2e3e9c3bc",
          "name": "ose-csi-node-driver-registrar-v4.9"
        },
        {
          "digest": "sha256:c61a887f2135c82fb4409cdaaba1c4e81f93c20ca335a40c228242f3329e0547",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:c61a887f2135c82fb4409cdaaba1c4e81f93c20ca335a40c228242f3329e0547",
          "name": "ose-csi-livenessprobe-v4.9"
        },
        {
          "digest": "sha256:10c2e6528ac30691aa9f42d6b53f5b65c41321be51d2a6a93991959829db004f",
          "image": "registry.redhat.io/openshift4/ose-csi-external-resizer-rhel8@sha256:10c2e6528ac30691aa9f42d6b53f5b65c41321be51d2a6a93991959829db004f",
          "name": "ose-csi-external-resizer-rhel8-v4.9"
        },
        {
          "digest": "sha256:0c37ebb246653199b76ad6114f584b1b4db1ff1048d6b0f228ed843fa2e2eb16",
          "image": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:0c37ebb246653199b76ad6114f584b1b4db1ff1048d6b0f228ed843fa2e2eb16",
          "name": "ose-csi-external-snapshotter-rhel8-v4.9"
        },
        {
          "digest": "sha256:cdaf874ffaff5e3e4cae473c40372ef45f7d9e3bb35a93c7a715bcc30ff03a4f",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:cdaf874ffaff5e3e4cae473c40372ef45f7d9e3bb35a93c7a715bcc30ff03a4f",
          "name": "ose-csi-external-attacher-v4.10"
        },
        {
          "digest": "sha256:95010584242f9705ffad17632bd11cf1299955b986d1e5b4b8892f9fda75bb00",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:95010584242f9705ffad17632bd11cf1299955b986d1e5b4b8892f9fda75bb00",
          "name": "ose-csi-external-provisioner-v4.10"
        },
        {
          "digest": "sha256:90792483c531bfa2c51e5be45efdc0e52e3e2461a4c9a6921428d719415dc8b0",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:90792483c531bfa2c51e5be45efdc0e52e3e2461a4c9a6921428d719415dc8b0",
          "name": "ose-csi-node-driver-registrar-v4.10"
        },
        {
          "digest": "sha256:b9db5f0eb8a4d145b6f5a89e12d3361a04616e27b8b8d4bcdfd2c1545f6dc407",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:b9db5f0eb8a4d145b6f5a89e12d3361a04616e27b8b8d4bcdfd2c1545f6dc407",
          "name": "ose-csi-livenessprobe-v4.10"
        },
        {
          "digest": "sha256:34386f8c0227015c1abd9d7dfd8e9b687cba7047ec021d393ab39133e67178b9",
          "image": "registry.redhat.io/openshift4/ose-csi-external-resizer-rhel8@sha256:34386f8c0227015c1abd9d7dfd8e9b687cba7047ec021d393ab39133e67178b9",
          "name": "ose-csi-external-resizer-rhel8-v4.10"
        },
        {
          "digest": "sha256:cb781aff7b4ead2e0535274186b5e97274d734e19e9ef404e187bc39d11bb2cc",
          "image": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel8@sha256:cb781aff7b4ead2e0535274186b5e97274d734e19e9ef404e187bc39d11bb2cc",
          "name": "ose-csi-external-snapshotter-rhel8-v4.10"
        },
        {
          "digest": "sha256:ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5",
          "name": "hspc-operator-ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5-annotation"
        },
        {
          "digest": "sha256:ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:ca8fe419be1ac73c9930b12c68ccd78a7955a3bf22d7e0c6b499065a5eb6dda5",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "62f3354a96f50062ffb825b4",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "2022.4"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:118c6346b5332768bde4adbc76b0f61c381735a1256e829f23d7e196c2f63386",
      "bundle_path_digest": "sha256:118c6346b5332768bde4adbc76b0f61c381735a1256e829f23d7e196c2f63386",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "2022.4",
      "creation_date": "2022-08-10T04:34:18.839000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This maps to the Aqua version 6.5.0\n* 2022.4: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/2022.4.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v2022.4.98",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:53:29.637000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "name": "aquasec-785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83-annotation"
        },
        {
          "digest": "sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:9a3a53c2e7dee6e28994319def32b40fe6c1b20f5a3cbaf6683a7a7fe305a23c",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:9a3a53c2e7dee6e28994319def32b40fe6c1b20f5a3cbaf6683a7a7fe305a23c",
          "name": "gateway"
        },
        {
          "digest": "sha256:a0135b82f4baae47f2d66e5e0a29fbb6215ee0cee15d4cdd3ae4c4db7465da76",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:a0135b82f4baae47f2d66e5e0a29fbb6215ee0cee15d4cdd3ae4c4db7465da76",
          "name": "server"
        },
        {
          "digest": "sha256:2a1f694e79bdcf5003f19f2517685e772e71b58a7da4501c5328573290045a80",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:2a1f694e79bdcf5003f19f2517685e772e71b58a7da4501c5328573290045a80",
          "name": "scanner"
        },
        {
          "digest": "sha256:3568adea36324db6b8aed36a8440946bec1ea54e5e3995ab817b7eeacfd702b8",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:3568adea36324db6b8aed36a8440946bec1ea54e5e3995ab817b7eeacfd702b8",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0df5c904749d5816f8a8b05ed96ff00956a7e9bf7d965dc298a86604993426c6",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:0df5c904749d5816f8a8b05ed96ff00956a7e9bf7d965dc298a86604993426c6",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <2022.4.98",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2022.4.98",
      "version_original": "2022.4.98"
    },
    {
      "_id": "62f3392996f50062ffb8299b",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "2022.4"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:118c6346b5332768bde4adbc76b0f61c381735a1256e829f23d7e196c2f63386",
      "bundle_path_digest": "sha256:118c6346b5332768bde4adbc76b0f61c381735a1256e829f23d7e196c2f63386",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "2022.4",
      "creation_date": "2022-08-10T04:50:49.040000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This maps to the Aqua version 6.5.0\n* 2022.4: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/2022.4.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v2022.4.98",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:49:39.114000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "name": "aquasec-785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83-annotation"
        },
        {
          "digest": "sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:9a3a53c2e7dee6e28994319def32b40fe6c1b20f5a3cbaf6683a7a7fe305a23c",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:9a3a53c2e7dee6e28994319def32b40fe6c1b20f5a3cbaf6683a7a7fe305a23c",
          "name": "gateway"
        },
        {
          "digest": "sha256:a0135b82f4baae47f2d66e5e0a29fbb6215ee0cee15d4cdd3ae4c4db7465da76",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:a0135b82f4baae47f2d66e5e0a29fbb6215ee0cee15d4cdd3ae4c4db7465da76",
          "name": "server"
        },
        {
          "digest": "sha256:2a1f694e79bdcf5003f19f2517685e772e71b58a7da4501c5328573290045a80",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:2a1f694e79bdcf5003f19f2517685e772e71b58a7da4501c5328573290045a80",
          "name": "scanner"
        },
        {
          "digest": "sha256:3568adea36324db6b8aed36a8440946bec1ea54e5e3995ab817b7eeacfd702b8",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:3568adea36324db6b8aed36a8440946bec1ea54e5e3995ab817b7eeacfd702b8",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0df5c904749d5816f8a8b05ed96ff00956a7e9bf7d965dc298a86604993426c6",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:0df5c904749d5816f8a8b05ed96ff00956a7e9bf7d965dc298a86604993426c6",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <2022.4.98",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2022.4.98",
      "version_original": "2022.4.98"
    },
    {
      "_id": "62f33956c7996e54ea0a443b",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "2022.4"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:118c6346b5332768bde4adbc76b0f61c381735a1256e829f23d7e196c2f63386",
      "bundle_path_digest": "sha256:118c6346b5332768bde4adbc76b0f61c381735a1256e829f23d7e196c2f63386",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "2022.4",
      "creation_date": "2022-08-10T04:51:34.397000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This maps to the Aqua version 6.5.0\n* 2022.4: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/2022.4.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v2022.4.98",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:40:49.301000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "name": "aquasec-785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83-annotation"
        },
        {
          "digest": "sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:9a3a53c2e7dee6e28994319def32b40fe6c1b20f5a3cbaf6683a7a7fe305a23c",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:9a3a53c2e7dee6e28994319def32b40fe6c1b20f5a3cbaf6683a7a7fe305a23c",
          "name": "gateway"
        },
        {
          "digest": "sha256:a0135b82f4baae47f2d66e5e0a29fbb6215ee0cee15d4cdd3ae4c4db7465da76",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:a0135b82f4baae47f2d66e5e0a29fbb6215ee0cee15d4cdd3ae4c4db7465da76",
          "name": "server"
        },
        {
          "digest": "sha256:2a1f694e79bdcf5003f19f2517685e772e71b58a7da4501c5328573290045a80",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:2a1f694e79bdcf5003f19f2517685e772e71b58a7da4501c5328573290045a80",
          "name": "scanner"
        },
        {
          "digest": "sha256:3568adea36324db6b8aed36a8440946bec1ea54e5e3995ab817b7eeacfd702b8",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:3568adea36324db6b8aed36a8440946bec1ea54e5e3995ab817b7eeacfd702b8",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0df5c904749d5816f8a8b05ed96ff00956a7e9bf7d965dc298a86604993426c6",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:0df5c904749d5816f8a8b05ed96ff00956a7e9bf7d965dc298a86604993426c6",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <2022.4.98",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2022.4.98",
      "version_original": "2022.4.98"
    },
    {
      "_id": "62f339fdecdd7d25b43622bd",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "2022.4"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:118c6346b5332768bde4adbc76b0f61c381735a1256e829f23d7e196c2f63386",
      "bundle_path_digest": "sha256:118c6346b5332768bde4adbc76b0f61c381735a1256e829f23d7e196c2f63386",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "2022.4",
      "creation_date": "2022-08-10T04:54:21.788000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This maps to the Aqua version 6.5.0\n* 2022.4: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/2022.4.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v2022.4.98",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:39:46.460000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "name": "aquasec-785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83-annotation"
        },
        {
          "digest": "sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:9a3a53c2e7dee6e28994319def32b40fe6c1b20f5a3cbaf6683a7a7fe305a23c",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:9a3a53c2e7dee6e28994319def32b40fe6c1b20f5a3cbaf6683a7a7fe305a23c",
          "name": "gateway"
        },
        {
          "digest": "sha256:a0135b82f4baae47f2d66e5e0a29fbb6215ee0cee15d4cdd3ae4c4db7465da76",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:a0135b82f4baae47f2d66e5e0a29fbb6215ee0cee15d4cdd3ae4c4db7465da76",
          "name": "server"
        },
        {
          "digest": "sha256:2a1f694e79bdcf5003f19f2517685e772e71b58a7da4501c5328573290045a80",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:2a1f694e79bdcf5003f19f2517685e772e71b58a7da4501c5328573290045a80",
          "name": "scanner"
        },
        {
          "digest": "sha256:3568adea36324db6b8aed36a8440946bec1ea54e5e3995ab817b7eeacfd702b8",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:3568adea36324db6b8aed36a8440946bec1ea54e5e3995ab817b7eeacfd702b8",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0df5c904749d5816f8a8b05ed96ff00956a7e9bf7d965dc298a86604993426c6",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:0df5c904749d5816f8a8b05ed96ff00956a7e9bf7d965dc298a86604993426c6",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <2022.4.98",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2022.4.98",
      "version_original": "2022.4.98"
    },
    {
      "_id": "62f33a1096f50062ffb82a12",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "2022.4"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:118c6346b5332768bde4adbc76b0f61c381735a1256e829f23d7e196c2f63386",
      "bundle_path_digest": "sha256:118c6346b5332768bde4adbc76b0f61c381735a1256e829f23d7e196c2f63386",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "2022.4",
      "creation_date": "2022-08-10T04:54:40.772000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This maps to the Aqua version 6.5.0\n* 2022.4: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/2022.4.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v2022.4.98",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:19:21.762000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "name": "aquasec-785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83-annotation"
        },
        {
          "digest": "sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:785771d0d180809a69dc957b9c0692238801ac25908ffba8220044fb7c278a83",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:9a3a53c2e7dee6e28994319def32b40fe6c1b20f5a3cbaf6683a7a7fe305a23c",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:9a3a53c2e7dee6e28994319def32b40fe6c1b20f5a3cbaf6683a7a7fe305a23c",
          "name": "gateway"
        },
        {
          "digest": "sha256:a0135b82f4baae47f2d66e5e0a29fbb6215ee0cee15d4cdd3ae4c4db7465da76",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:a0135b82f4baae47f2d66e5e0a29fbb6215ee0cee15d4cdd3ae4c4db7465da76",
          "name": "server"
        },
        {
          "digest": "sha256:2a1f694e79bdcf5003f19f2517685e772e71b58a7da4501c5328573290045a80",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:2a1f694e79bdcf5003f19f2517685e772e71b58a7da4501c5328573290045a80",
          "name": "scanner"
        },
        {
          "digest": "sha256:3568adea36324db6b8aed36a8440946bec1ea54e5e3995ab817b7eeacfd702b8",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:3568adea36324db6b8aed36a8440946bec1ea54e5e3995ab817b7eeacfd702b8",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0df5c904749d5816f8a8b05ed96ff00956a7e9bf7d965dc298a86604993426c6",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:0df5c904749d5816f8a8b05ed96ff00956a7e9bf7d965dc298a86604993426c6",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <2022.4.98",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2022.4.98",
      "version_original": "2022.4.98"
    },
    {
      "_id": "62f353ad96f50062ffb830da",
      "alm_examples": [
        {
          "api_version": "odf.ibm.com/v1alpha1",
          "kind": "FlashSystemCluster",
          "metadata": {
            "name": "flashsystemcluster-sample",
            "namespace": "openshift-storage"
          },
          "spec": {
            "defaultPool": {
              "fsType": "ext4",
              "poolName": "Pool0",
              "spaceEfficiency": "thick",
              "storageclassName": "odf-flashsystemcluster-sample",
              "volumeNamePrefix": "odf"
            },
            "insecureSkipVerify": true,
            "name": "flashsystem-xxx",
            "secret": {
              "name": "fs-secrets-example",
              "namespace": "openshift-storage"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-storage-odf-operator-bundle@sha256:9d745e8a927bb58681b7c470d5c06e582c482e7dcfe001b3af91a89539e91262",
      "bundle_path_digest": "sha256:9d745e8a927bb58681b7c470d5c06e582c482e7dcfe001b3af91a89539e91262",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable-v1.2",
      "creation_date": "2022-08-10T06:43:57.311000+00:00",
      "csv_description": "IBM Storage ODF operator provides basic storage capabilities and extended management functions through OpenShift data foundation framework for applications.",
      "csv_display_name": "IBM Storage ODF operator",
      "csv_metadata_description": "",
      "csv_name": "ibm-storage-odf-operator.v1.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:31:31.686000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "ibm-storage-odf-operator",
      "provided_apis": [
        {
          "group": "odf.ibm.com",
          "kind": "FlashSystemCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "IBM",
      "related_images": [
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:249d548b6ef6f9347fcd4db3aa3e0dfee927a8e49911a27be2815f7dd897ddfd",
          "image": "registry.connect.redhat.com/ibm/ibm-storage-odf-operator@sha256:249d548b6ef6f9347fcd4db3aa3e0dfee927a8e49911a27be2815f7dd897ddfd",
          "name": "manager"
        },
        {
          "digest": "sha256:61f1936da3a67d03f2152937767fd15324533da07ddd674b9a3899aa04c83e6b",
          "image": "docker.io/ibmcom/ibm-storage-odf-plugin@sha256:61f1936da3a67d03f2152937767fd15324533da07ddd674b9a3899aa04c83e6b",
          "name": "ibm-odf-console"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.0.1 <1.2.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "62f3a6a896f50062ffb84f85",
      "alm_examples": [
        {
          "api_version": "odf.ibm.com/v1alpha1",
          "kind": "FlashSystemCluster",
          "metadata": {
            "name": "flashsystemcluster-sample",
            "namespace": "openshift-storage"
          },
          "spec": {
            "defaultPool": {
              "fsType": "ext4",
              "poolName": "Pool0",
              "spaceEfficiency": "thick",
              "storageclassName": "odf-flashsystemcluster-sample",
              "volumeNamePrefix": "odf"
            },
            "insecureSkipVerify": true,
            "name": "flashsystem-xxx",
            "secret": {
              "name": "fs-secrets-example",
              "namespace": "openshift-storage"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-storage-odf-operator-bundle@sha256:5d03777312f0fd999557fbba73e594b66d1cee3ec6df2bdca80d9d6880472e2b",
      "bundle_path_digest": "sha256:5d03777312f0fd999557fbba73e594b66d1cee3ec6df2bdca80d9d6880472e2b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable-v1.1",
      "creation_date": "2022-08-10T12:37:59.999000+00:00",
      "csv_description": "IBM Storage ODF operator provides basic storage capabilities and extended management functions through OpenShift data foundation framework for applications.",
      "csv_display_name": "IBM Storage ODF operator",
      "csv_metadata_description": "",
      "csv_name": "ibm-storage-odf-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:00:32.558000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "ibm-storage-odf-operator",
      "provided_apis": [
        {
          "group": "odf.ibm.com",
          "kind": "FlashSystemCluster",
          "plural": "flashsystemclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "IBM",
      "related_images": [
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:97a71464ab09042289aaf216e5bc8e54e7f21344705163c96948c2c5680c1888",
          "image": "registry.connect.redhat.com/ibm/ibm-storage-odf-operator@sha256:97a71464ab09042289aaf216e5bc8e54e7f21344705163c96948c2c5680c1888",
          "name": "manager"
        },
        {
          "digest": "sha256:c225da473f0a9df03de706fe747dc761584418b375ed12a73cce74d3f31d60ff",
          "image": "docker.io/ibmcom/ibm-storage-odf-plugin@sha256:c225da473f0a9df03de706fe747dc761584418b375ed12a73cce74d3f31d60ff",
          "name": "ibm-odf-console"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.0.1 <1.1.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "62f3c7d2e81a17217614a5b5",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:872d50fa2bdbe18a12a0951f369650b2fd0cf206e609a3d2288c430014b12431",
      "bundle_path_digest": "sha256:872d50fa2bdbe18a12a0951f369650b2fd0cf206e609a3d2288c430014b12431",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-10T14:59:30.728000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.1-beta.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:27:32.733000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator-b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877-annotation"
        },
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "8.6.1-beta.2",
      "version_original": "8.6.1-beta.2"
    },
    {
      "_id": "62f3c9cdc7996e54ea0a71f4",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:872d50fa2bdbe18a12a0951f369650b2fd0cf206e609a3d2288c430014b12431",
      "bundle_path_digest": "sha256:872d50fa2bdbe18a12a0951f369650b2fd0cf206e609a3d2288c430014b12431",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-10T15:07:57.446000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.1-beta.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:09:30.900000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator-b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877-annotation"
        },
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "8.6.1-beta.2",
      "version_original": "8.6.1-beta.2"
    },
    {
      "_id": "62f3c9edc7996e54ea0a71fb",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:872d50fa2bdbe18a12a0951f369650b2fd0cf206e609a3d2288c430014b12431",
      "bundle_path_digest": "sha256:872d50fa2bdbe18a12a0951f369650b2fd0cf206e609a3d2288c430014b12431",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-10T15:08:29.721000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.1-beta.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:08:08.995000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator-b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877-annotation"
        },
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.6.1-beta.2",
      "version_original": "8.6.1-beta.2"
    },
    {
      "_id": "62f3cb37da70c31f8cb60538",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:872d50fa2bdbe18a12a0951f369650b2fd0cf206e609a3d2288c430014b12431",
      "bundle_path_digest": "sha256:872d50fa2bdbe18a12a0951f369650b2fd0cf206e609a3d2288c430014b12431",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-10T15:13:59.615000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.1-beta.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:32:54.261000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator-b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877-annotation"
        },
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.6.1-beta.2",
      "version_original": "8.6.1-beta.2"
    },
    {
      "_id": "62f3cd25c7996e54ea0a7283",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:872d50fa2bdbe18a12a0951f369650b2fd0cf206e609a3d2288c430014b12431",
      "bundle_path_digest": "sha256:872d50fa2bdbe18a12a0951f369650b2fd0cf206e609a3d2288c430014b12431",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-10T15:22:13.014000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.1-beta.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:25:57.925000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator-b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877-annotation"
        },
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.6.1-beta.2",
      "version_original": "8.6.1-beta.2"
    },
    {
      "_id": "62f3cf1dda70c31f8cb60710",
      "alm_examples": [
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "Pachyderm",
          "metadata": {
            "name": "pachyderm-sample"
          },
          "spec": {
            "console": {
              "disable": true
            },
            "pachd": {
              "metrics": {
                "disable": false
              },
              "storage": {
                "amazon": {
                  "credentialSecretName": "pachyderm-aws-secret"
                },
                "backend": "AMAZON"
              }
            }
          }
        },
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "PachydermExport",
          "metadata": {
            "name": "pachydermexport-sample"
          },
          "spec": {
            "backup": {
              "target": "pachyderm-sample"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/pachyderm/pachyderm-bundle@sha256:d99b8a9c2ce7ac9d29c6070e7c3fecf712498caf7eb348ab7b27087dde66ba0a",
      "bundle_path_digest": "sha256:d99b8a9c2ce7ac9d29c6070e7c3fecf712498caf7eb348ab7b27087dde66ba0a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-10T15:30:37.365000+00:00",
      "csv_description": "The Pachyderm operator aims to make deploying and managing Pachyderm instances on Openshift container platform easier.\n\nPachyderm is the data foundation for machine learning.  Pachyderm provides industry leading data versioning, pipelines and lineage that allow data science teams to automate the machine learning lifecycle and optimize their machine learning operations (MLOps). \n\n## Getting started\n\n1. Pachyderm uses an object store to store your data. Set the pachd storage backend at `pachyderm.spec.pachd.storage.backend` to `AMAZON`, `MICROSOFT`, `GOOGLE` or `MINIO` depending on your storage provider. Additionally, create a user with read/write access to the object store.\n\n2. Setup the user credentials in the section, `pachyderm.spec.pachd.storage`. Required fields depend on the backend type set in step 1 above.\n\n3. Finally, deploy the pachyderm cluster in its own namespace.\n\nFor more information on getting started, reference the documentation.\n",
      "csv_display_name": "Pachyderm",
      "csv_metadata_description": "Pachyderm provides the data layer that allows data science teams to productionize and scale their machine learning lifecycle with data driven automation, petabyte scalability and end-to-end reproducibility.",
      "csv_name": "pachyderm-operator.v0.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:25:47.622000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "pachyderm-operator",
      "provided_apis": [
        {
          "group": "aiml.pachyderm.com",
          "kind": "Pachyderm",
          "version": "v1beta1"
        },
        {
          "group": "aiml.pachyderm.com",
          "kind": "PachydermExport",
          "version": "v1beta1"
        }
      ],
      "provider": "Pachyderm, Inc.",
      "related_images": [
        {
          "digest": "sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "name": "pachyderm-operator"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "image": "registry.connect.redhat.com/pachyderm/pachd@sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "name": "pachd"
        },
        {
          "digest": "sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "image": "registry.connect.redhat.com/pachyderm/worker@sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "name": "worker"
        },
        {
          "digest": "sha256:d76af4fbc67557b401409618d5b197feaa59804bdac7532d8d339e23ecbfbe23",
          "image": "registry.connect.redhat.com/pachyderm/etcd@sha256:d76af4fbc67557b401409618d5b197feaa59804bdac7532d8d339e23ecbfbe23",
          "name": "etcd"
        },
        {
          "digest": "sha256:9fd7af383b4070866b7ae013f19e9c672de7dff14e1661fd24d763277ac1cfd3",
          "image": "registry.redhat.io/rhel8/postgresql-13@sha256:9fd7af383b4070866b7ae013f19e9c672de7dff14e1661fd24d763277ac1cfd3",
          "name": "postgresql"
        },
        {
          "digest": "sha256:00db44237a0b820f41b64bb7f7abe340a46299bec71abef392cb243bb269e01f",
          "image": "registry.connect.redhat.com/pachyderm/pgbouncer@sha256:00db44237a0b820f41b64bb7f7abe340a46299bec71abef392cb243bb269e01f",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:97e77bdef29a4d731d8425d4a648988a2408e69328cac2fcc708521f32d0d719",
          "image": "registry.connect.redhat.com/pachyderm/init-utils@sha256:97e77bdef29a4d731d8425d4a648988a2408e69328cac2fcc708521f32d0d719",
          "name": "init-utils"
        },
        {
          "digest": "sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "name": "backup-handler"
        },
        {
          "digest": "sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "name": "pachyderm-operator-8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82-annotation"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "name": "manager"
        },
        {
          "digest": "sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "name": "backup"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.1.3",
      "version_original": "0.1.3"
    },
    {
      "_id": "62f3cf468c2137a6fb68b51e",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:872d50fa2bdbe18a12a0951f369650b2fd0cf206e609a3d2288c430014b12431",
      "bundle_path_digest": "sha256:872d50fa2bdbe18a12a0951f369650b2fd0cf206e609a3d2288c430014b12431",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-10T15:31:18.068000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.1-beta.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:50:51.696000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator-b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877-annotation"
        },
        {
          "digest": "sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:b5d8f2be823bdd7887cf91d027134de62a7a4b37fc79305d659868121e14c877",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.6.1-beta.2",
      "version_original": "8.6.1-beta.2"
    },
    {
      "_id": "62f3d0bcc7996e54ea0a7492",
      "alm_examples": [
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "Pachyderm",
          "metadata": {
            "name": "pachyderm-sample"
          },
          "spec": {
            "console": {
              "disable": true
            },
            "pachd": {
              "metrics": {
                "disable": false
              },
              "storage": {
                "amazon": {
                  "credentialSecretName": "pachyderm-aws-secret"
                },
                "backend": "AMAZON"
              }
            }
          }
        },
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "PachydermExport",
          "metadata": {
            "name": "pachydermexport-sample"
          },
          "spec": {
            "backup": {
              "target": "pachyderm-sample"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/pachyderm/pachyderm-bundle@sha256:d99b8a9c2ce7ac9d29c6070e7c3fecf712498caf7eb348ab7b27087dde66ba0a",
      "bundle_path_digest": "sha256:d99b8a9c2ce7ac9d29c6070e7c3fecf712498caf7eb348ab7b27087dde66ba0a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-10T15:37:32.483000+00:00",
      "csv_description": "The Pachyderm operator aims to make deploying and managing Pachyderm instances on Openshift container platform easier.\n\nPachyderm is the data foundation for machine learning.  Pachyderm provides industry leading data versioning, pipelines and lineage that allow data science teams to automate the machine learning lifecycle and optimize their machine learning operations (MLOps). \n\n## Getting started\n\n1. Pachyderm uses an object store to store your data. Set the pachd storage backend at `pachyderm.spec.pachd.storage.backend` to `AMAZON`, `MICROSOFT`, `GOOGLE` or `MINIO` depending on your storage provider. Additionally, create a user with read/write access to the object store.\n\n2. Setup the user credentials in the section, `pachyderm.spec.pachd.storage`. Required fields depend on the backend type set in step 1 above.\n\n3. Finally, deploy the pachyderm cluster in its own namespace.\n\nFor more information on getting started, reference the documentation.\n",
      "csv_display_name": "Pachyderm",
      "csv_metadata_description": "Pachyderm provides the data layer that allows data science teams to productionize and scale their machine learning lifecycle with data driven automation, petabyte scalability and end-to-end reproducibility.",
      "csv_name": "pachyderm-operator.v0.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:07:01.239000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "pachyderm-operator",
      "provided_apis": [
        {
          "group": "aiml.pachyderm.com",
          "kind": "PachydermExport",
          "plural": "pachydermexports",
          "version": "v1beta1"
        },
        {
          "group": "aiml.pachyderm.com",
          "kind": "Pachyderm",
          "plural": "pachyderms",
          "version": "v1beta1"
        }
      ],
      "provider": "Pachyderm, Inc.",
      "related_images": [
        {
          "digest": "sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "name": "pachyderm-operator"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "image": "registry.connect.redhat.com/pachyderm/pachd@sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "name": "pachd"
        },
        {
          "digest": "sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "image": "registry.connect.redhat.com/pachyderm/worker@sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "name": "worker"
        },
        {
          "digest": "sha256:d76af4fbc67557b401409618d5b197feaa59804bdac7532d8d339e23ecbfbe23",
          "image": "registry.connect.redhat.com/pachyderm/etcd@sha256:d76af4fbc67557b401409618d5b197feaa59804bdac7532d8d339e23ecbfbe23",
          "name": "etcd"
        },
        {
          "digest": "sha256:9fd7af383b4070866b7ae013f19e9c672de7dff14e1661fd24d763277ac1cfd3",
          "image": "registry.redhat.io/rhel8/postgresql-13@sha256:9fd7af383b4070866b7ae013f19e9c672de7dff14e1661fd24d763277ac1cfd3",
          "name": "postgresql"
        },
        {
          "digest": "sha256:00db44237a0b820f41b64bb7f7abe340a46299bec71abef392cb243bb269e01f",
          "image": "registry.connect.redhat.com/pachyderm/pgbouncer@sha256:00db44237a0b820f41b64bb7f7abe340a46299bec71abef392cb243bb269e01f",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:97e77bdef29a4d731d8425d4a648988a2408e69328cac2fcc708521f32d0d719",
          "image": "registry.connect.redhat.com/pachyderm/init-utils@sha256:97e77bdef29a4d731d8425d4a648988a2408e69328cac2fcc708521f32d0d719",
          "name": "init-utils"
        },
        {
          "digest": "sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "name": "backup-handler"
        },
        {
          "digest": "sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "name": "pachyderm-operator-8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82-annotation"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "name": "manager"
        },
        {
          "digest": "sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "name": "backup"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.1.3",
      "version_original": "0.1.3"
    },
    {
      "_id": "62f3d0e18c2137a6fb68b5ab",
      "alm_examples": [
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "Pachyderm",
          "metadata": {
            "name": "pachyderm-sample"
          },
          "spec": {
            "console": {
              "disable": true
            },
            "pachd": {
              "metrics": {
                "disable": false
              },
              "storage": {
                "amazon": {
                  "credentialSecretName": "pachyderm-aws-secret"
                },
                "backend": "AMAZON"
              }
            }
          }
        },
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "PachydermExport",
          "metadata": {
            "name": "pachydermexport-sample"
          },
          "spec": {
            "backup": {
              "target": "pachyderm-sample"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/pachyderm/pachyderm-bundle@sha256:d99b8a9c2ce7ac9d29c6070e7c3fecf712498caf7eb348ab7b27087dde66ba0a",
      "bundle_path_digest": "sha256:d99b8a9c2ce7ac9d29c6070e7c3fecf712498caf7eb348ab7b27087dde66ba0a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-10T15:38:09.492000+00:00",
      "csv_description": "The Pachyderm operator aims to make deploying and managing Pachyderm instances on Openshift container platform easier.\n\nPachyderm is the data foundation for machine learning.  Pachyderm provides industry leading data versioning, pipelines and lineage that allow data science teams to automate the machine learning lifecycle and optimize their machine learning operations (MLOps). \n\n## Getting started\n\n1. Pachyderm uses an object store to store your data. Set the pachd storage backend at `pachyderm.spec.pachd.storage.backend` to `AMAZON`, `MICROSOFT`, `GOOGLE` or `MINIO` depending on your storage provider. Additionally, create a user with read/write access to the object store.\n\n2. Setup the user credentials in the section, `pachyderm.spec.pachd.storage`. Required fields depend on the backend type set in step 1 above.\n\n3. Finally, deploy the pachyderm cluster in its own namespace.\n\nFor more information on getting started, reference the documentation.\n",
      "csv_display_name": "Pachyderm",
      "csv_metadata_description": "Pachyderm provides the data layer that allows data science teams to productionize and scale their machine learning lifecycle with data driven automation, petabyte scalability and end-to-end reproducibility.",
      "csv_name": "pachyderm-operator.v0.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:05:22.246000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "pachyderm-operator",
      "provided_apis": [
        {
          "group": "aiml.pachyderm.com",
          "kind": "Pachyderm",
          "plural": "pachyderms",
          "version": "v1beta1"
        },
        {
          "group": "aiml.pachyderm.com",
          "kind": "PachydermExport",
          "plural": "pachydermexports",
          "version": "v1beta1"
        }
      ],
      "provider": "Pachyderm, Inc.",
      "related_images": [
        {
          "digest": "sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "name": "pachyderm-operator"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "image": "registry.connect.redhat.com/pachyderm/pachd@sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "name": "pachd"
        },
        {
          "digest": "sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "image": "registry.connect.redhat.com/pachyderm/worker@sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "name": "worker"
        },
        {
          "digest": "sha256:d76af4fbc67557b401409618d5b197feaa59804bdac7532d8d339e23ecbfbe23",
          "image": "registry.connect.redhat.com/pachyderm/etcd@sha256:d76af4fbc67557b401409618d5b197feaa59804bdac7532d8d339e23ecbfbe23",
          "name": "etcd"
        },
        {
          "digest": "sha256:9fd7af383b4070866b7ae013f19e9c672de7dff14e1661fd24d763277ac1cfd3",
          "image": "registry.redhat.io/rhel8/postgresql-13@sha256:9fd7af383b4070866b7ae013f19e9c672de7dff14e1661fd24d763277ac1cfd3",
          "name": "postgresql"
        },
        {
          "digest": "sha256:00db44237a0b820f41b64bb7f7abe340a46299bec71abef392cb243bb269e01f",
          "image": "registry.connect.redhat.com/pachyderm/pgbouncer@sha256:00db44237a0b820f41b64bb7f7abe340a46299bec71abef392cb243bb269e01f",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:97e77bdef29a4d731d8425d4a648988a2408e69328cac2fcc708521f32d0d719",
          "image": "registry.connect.redhat.com/pachyderm/init-utils@sha256:97e77bdef29a4d731d8425d4a648988a2408e69328cac2fcc708521f32d0d719",
          "name": "init-utils"
        },
        {
          "digest": "sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "name": "backup-handler"
        },
        {
          "digest": "sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "name": "pachyderm-operator-8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82-annotation"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "name": "manager"
        },
        {
          "digest": "sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "name": "backup"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.1.3",
      "version_original": "0.1.3"
    },
    {
      "_id": "62f3d2774dabb84b9a34021e",
      "alm_examples": [
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "Pachyderm",
          "metadata": {
            "name": "pachyderm-sample"
          },
          "spec": {
            "console": {
              "disable": true
            },
            "pachd": {
              "metrics": {
                "disable": false
              },
              "storage": {
                "amazon": {
                  "credentialSecretName": "pachyderm-aws-secret"
                },
                "backend": "AMAZON"
              }
            }
          }
        },
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "PachydermExport",
          "metadata": {
            "name": "pachydermexport-sample"
          },
          "spec": {
            "backup": {
              "target": "pachyderm-sample"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/pachyderm/pachyderm-bundle@sha256:d99b8a9c2ce7ac9d29c6070e7c3fecf712498caf7eb348ab7b27087dde66ba0a",
      "bundle_path_digest": "sha256:d99b8a9c2ce7ac9d29c6070e7c3fecf712498caf7eb348ab7b27087dde66ba0a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-10T15:44:55.875000+00:00",
      "csv_description": "The Pachyderm operator aims to make deploying and managing Pachyderm instances on Openshift container platform easier.\n\nPachyderm is the data foundation for machine learning.  Pachyderm provides industry leading data versioning, pipelines and lineage that allow data science teams to automate the machine learning lifecycle and optimize their machine learning operations (MLOps). \n\n## Getting started\n\n1. Pachyderm uses an object store to store your data. Set the pachd storage backend at `pachyderm.spec.pachd.storage.backend` to `AMAZON`, `MICROSOFT`, `GOOGLE` or `MINIO` depending on your storage provider. Additionally, create a user with read/write access to the object store.\n\n2. Setup the user credentials in the section, `pachyderm.spec.pachd.storage`. Required fields depend on the backend type set in step 1 above.\n\n3. Finally, deploy the pachyderm cluster in its own namespace.\n\nFor more information on getting started, reference the documentation.\n",
      "csv_display_name": "Pachyderm",
      "csv_metadata_description": "Pachyderm provides the data layer that allows data science teams to productionize and scale their machine learning lifecycle with data driven automation, petabyte scalability and end-to-end reproducibility.",
      "csv_name": "pachyderm-operator.v0.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:56:55.414000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "pachyderm-operator",
      "provided_apis": [
        {
          "group": "aiml.pachyderm.com",
          "kind": "Pachyderm",
          "plural": "pachyderms",
          "version": "v1beta1"
        },
        {
          "group": "aiml.pachyderm.com",
          "kind": "PachydermExport",
          "plural": "pachydermexports",
          "version": "v1beta1"
        }
      ],
      "provider": "Pachyderm, Inc.",
      "related_images": [
        {
          "digest": "sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "name": "pachyderm-operator"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "image": "registry.connect.redhat.com/pachyderm/pachd@sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "name": "pachd"
        },
        {
          "digest": "sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "image": "registry.connect.redhat.com/pachyderm/worker@sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "name": "worker"
        },
        {
          "digest": "sha256:d76af4fbc67557b401409618d5b197feaa59804bdac7532d8d339e23ecbfbe23",
          "image": "registry.connect.redhat.com/pachyderm/etcd@sha256:d76af4fbc67557b401409618d5b197feaa59804bdac7532d8d339e23ecbfbe23",
          "name": "etcd"
        },
        {
          "digest": "sha256:9fd7af383b4070866b7ae013f19e9c672de7dff14e1661fd24d763277ac1cfd3",
          "image": "registry.redhat.io/rhel8/postgresql-13@sha256:9fd7af383b4070866b7ae013f19e9c672de7dff14e1661fd24d763277ac1cfd3",
          "name": "postgresql"
        },
        {
          "digest": "sha256:00db44237a0b820f41b64bb7f7abe340a46299bec71abef392cb243bb269e01f",
          "image": "registry.connect.redhat.com/pachyderm/pgbouncer@sha256:00db44237a0b820f41b64bb7f7abe340a46299bec71abef392cb243bb269e01f",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:97e77bdef29a4d731d8425d4a648988a2408e69328cac2fcc708521f32d0d719",
          "image": "registry.connect.redhat.com/pachyderm/init-utils@sha256:97e77bdef29a4d731d8425d4a648988a2408e69328cac2fcc708521f32d0d719",
          "name": "init-utils"
        },
        {
          "digest": "sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "name": "backup-handler"
        },
        {
          "digest": "sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "name": "pachyderm-operator-8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82-annotation"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "name": "manager"
        },
        {
          "digest": "sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "name": "backup"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.1.3",
      "version_original": "0.1.3"
    },
    {
      "_id": "62f3d29676d6c2f705125405",
      "alm_examples": [
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "Pachyderm",
          "metadata": {
            "name": "pachyderm-sample"
          },
          "spec": {
            "console": {
              "disable": true
            },
            "pachd": {
              "metrics": {
                "disable": false
              },
              "storage": {
                "amazon": {
                  "credentialSecretName": "pachyderm-aws-secret"
                },
                "backend": "AMAZON"
              }
            }
          }
        },
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "PachydermExport",
          "metadata": {
            "name": "pachydermexport-sample"
          },
          "spec": {
            "backup": {
              "target": "pachyderm-sample"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/pachyderm/pachyderm-bundle@sha256:d99b8a9c2ce7ac9d29c6070e7c3fecf712498caf7eb348ab7b27087dde66ba0a",
      "bundle_path_digest": "sha256:d99b8a9c2ce7ac9d29c6070e7c3fecf712498caf7eb348ab7b27087dde66ba0a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-10T15:45:26.638000+00:00",
      "csv_description": "The Pachyderm operator aims to make deploying and managing Pachyderm instances on Openshift container platform easier.\n\nPachyderm is the data foundation for machine learning.  Pachyderm provides industry leading data versioning, pipelines and lineage that allow data science teams to automate the machine learning lifecycle and optimize their machine learning operations (MLOps). \n\n## Getting started\n\n1. Pachyderm uses an object store to store your data. Set the pachd storage backend at `pachyderm.spec.pachd.storage.backend` to `AMAZON`, `MICROSOFT`, `GOOGLE` or `MINIO` depending on your storage provider. Additionally, create a user with read/write access to the object store.\n\n2. Setup the user credentials in the section, `pachyderm.spec.pachd.storage`. Required fields depend on the backend type set in step 1 above.\n\n3. Finally, deploy the pachyderm cluster in its own namespace.\n\nFor more information on getting started, reference the documentation.\n",
      "csv_display_name": "Pachyderm",
      "csv_metadata_description": "Pachyderm provides the data layer that allows data science teams to productionize and scale their machine learning lifecycle with data driven automation, petabyte scalability and end-to-end reproducibility.",
      "csv_name": "pachyderm-operator.v0.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:18:55.563000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "pachyderm-operator",
      "provided_apis": [
        {
          "group": "aiml.pachyderm.com",
          "kind": "PachydermExport",
          "plural": "pachydermexports",
          "version": "v1beta1"
        },
        {
          "group": "aiml.pachyderm.com",
          "kind": "Pachyderm",
          "plural": "pachyderms",
          "version": "v1beta1"
        }
      ],
      "provider": "Pachyderm, Inc.",
      "related_images": [
        {
          "digest": "sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "name": "pachyderm-operator"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "image": "registry.connect.redhat.com/pachyderm/pachd@sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "name": "pachd"
        },
        {
          "digest": "sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "image": "registry.connect.redhat.com/pachyderm/worker@sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "name": "worker"
        },
        {
          "digest": "sha256:d76af4fbc67557b401409618d5b197feaa59804bdac7532d8d339e23ecbfbe23",
          "image": "registry.connect.redhat.com/pachyderm/etcd@sha256:d76af4fbc67557b401409618d5b197feaa59804bdac7532d8d339e23ecbfbe23",
          "name": "etcd"
        },
        {
          "digest": "sha256:9fd7af383b4070866b7ae013f19e9c672de7dff14e1661fd24d763277ac1cfd3",
          "image": "registry.redhat.io/rhel8/postgresql-13@sha256:9fd7af383b4070866b7ae013f19e9c672de7dff14e1661fd24d763277ac1cfd3",
          "name": "postgresql"
        },
        {
          "digest": "sha256:00db44237a0b820f41b64bb7f7abe340a46299bec71abef392cb243bb269e01f",
          "image": "registry.connect.redhat.com/pachyderm/pgbouncer@sha256:00db44237a0b820f41b64bb7f7abe340a46299bec71abef392cb243bb269e01f",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:97e77bdef29a4d731d8425d4a648988a2408e69328cac2fcc708521f32d0d719",
          "image": "registry.connect.redhat.com/pachyderm/init-utils@sha256:97e77bdef29a4d731d8425d4a648988a2408e69328cac2fcc708521f32d0d719",
          "name": "init-utils"
        },
        {
          "digest": "sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "name": "backup-handler"
        },
        {
          "digest": "sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "name": "pachyderm-operator-8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82-annotation"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "name": "manager"
        },
        {
          "digest": "sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "name": "backup"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.1.3",
      "version_original": "0.1.3"
    },
    {
      "_id": "62f3d41276d6c2f705125430",
      "alm_examples": [
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "Pachyderm",
          "metadata": {
            "name": "pachyderm-sample"
          },
          "spec": {
            "console": {
              "disable": true
            },
            "pachd": {
              "metrics": {
                "disable": false
              },
              "storage": {
                "amazon": {
                  "credentialSecretName": "pachyderm-aws-secret"
                },
                "backend": "AMAZON"
              }
            }
          }
        },
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "PachydermExport",
          "metadata": {
            "name": "pachydermexport-sample"
          },
          "spec": {
            "backup": {
              "target": "pachyderm-sample"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/pachyderm/pachyderm-bundle@sha256:d99b8a9c2ce7ac9d29c6070e7c3fecf712498caf7eb348ab7b27087dde66ba0a",
      "bundle_path_digest": "sha256:d99b8a9c2ce7ac9d29c6070e7c3fecf712498caf7eb348ab7b27087dde66ba0a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-10T15:51:46.008000+00:00",
      "csv_description": "The Pachyderm operator aims to make deploying and managing Pachyderm instances on Openshift container platform easier.\n\nPachyderm is the data foundation for machine learning.  Pachyderm provides industry leading data versioning, pipelines and lineage that allow data science teams to automate the machine learning lifecycle and optimize their machine learning operations (MLOps). \n\n## Getting started\n\n1. Pachyderm uses an object store to store your data. Set the pachd storage backend at `pachyderm.spec.pachd.storage.backend` to `AMAZON`, `MICROSOFT`, `GOOGLE` or `MINIO` depending on your storage provider. Additionally, create a user with read/write access to the object store.\n\n2. Setup the user credentials in the section, `pachyderm.spec.pachd.storage`. Required fields depend on the backend type set in step 1 above.\n\n3. Finally, deploy the pachyderm cluster in its own namespace.\n\nFor more information on getting started, reference the documentation.\n",
      "csv_display_name": "Pachyderm",
      "csv_metadata_description": "Pachyderm provides the data layer that allows data science teams to productionize and scale their machine learning lifecycle with data driven automation, petabyte scalability and end-to-end reproducibility.",
      "csv_name": "pachyderm-operator.v0.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:09:26.708000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "pachyderm-operator",
      "provided_apis": [
        {
          "group": "aiml.pachyderm.com",
          "kind": "PachydermExport",
          "plural": "pachydermexports",
          "version": "v1beta1"
        },
        {
          "group": "aiml.pachyderm.com",
          "kind": "Pachyderm",
          "plural": "pachyderms",
          "version": "v1beta1"
        }
      ],
      "provider": "Pachyderm, Inc.",
      "related_images": [
        {
          "digest": "sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "name": "pachyderm-operator"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "image": "registry.connect.redhat.com/pachyderm/pachd@sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "name": "pachd"
        },
        {
          "digest": "sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "image": "registry.connect.redhat.com/pachyderm/worker@sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "name": "worker"
        },
        {
          "digest": "sha256:d76af4fbc67557b401409618d5b197feaa59804bdac7532d8d339e23ecbfbe23",
          "image": "registry.connect.redhat.com/pachyderm/etcd@sha256:d76af4fbc67557b401409618d5b197feaa59804bdac7532d8d339e23ecbfbe23",
          "name": "etcd"
        },
        {
          "digest": "sha256:9fd7af383b4070866b7ae013f19e9c672de7dff14e1661fd24d763277ac1cfd3",
          "image": "registry.redhat.io/rhel8/postgresql-13@sha256:9fd7af383b4070866b7ae013f19e9c672de7dff14e1661fd24d763277ac1cfd3",
          "name": "postgresql"
        },
        {
          "digest": "sha256:00db44237a0b820f41b64bb7f7abe340a46299bec71abef392cb243bb269e01f",
          "image": "registry.connect.redhat.com/pachyderm/pgbouncer@sha256:00db44237a0b820f41b64bb7f7abe340a46299bec71abef392cb243bb269e01f",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:97e77bdef29a4d731d8425d4a648988a2408e69328cac2fcc708521f32d0d719",
          "image": "registry.connect.redhat.com/pachyderm/init-utils@sha256:97e77bdef29a4d731d8425d4a648988a2408e69328cac2fcc708521f32d0d719",
          "name": "init-utils"
        },
        {
          "digest": "sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "name": "backup-handler"
        },
        {
          "digest": "sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "name": "pachyderm-operator-8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82-annotation"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:8b60962bf742de4a4a30842bfbafce702f6de689a0bb29d607395bbc71394e82",
          "name": "manager"
        },
        {
          "digest": "sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:b0ec000db72f5f34eba45d513329c973c1e38dbdbebf55ea7d3c2f806f296b90",
          "name": "backup"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.1.3",
      "version_original": "0.1.3"
    },
    {
      "_id": "62f533b930a80ba5a2082565",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:34d5409a2ab6863d5dcf56dc40f83abc5ad8bcf41be06a6b0097ed0b858675bd",
      "bundle_path_digest": "sha256:34d5409a2ab6863d5dcf56dc40f83abc5ad8bcf41be06a6b0097ed0b858675bd",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "2.2.4",
      "creation_date": "2022-08-11T16:52:09.558000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.2.4-2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-11T16:52:09.558000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        }
      ],
      "provider": "Couchbase",
      "related_images": [
        {
          "digest": "sha256:8e152e8e4ce5bedf22f893bf127f5f882e1d02b0b9509b9114e349eb0716bca2",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:8e152e8e4ce5bedf22f893bf127f5f882e1d02b0b9509b9114e349eb0716bca2",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
          "name": "couchbase-server"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "couchbase-backup"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "couchbase-metrics"
        },
        {
          "digest": "sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "exporter-fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6-annotation"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "operator-backup-e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935-annotation"
        },
        {
          "digest": "sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
          "name": "server-76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.2.4-2",
      "version_original": "2.2.4-2"
    },
    {
      "_id": "62f533d4bb3b9bafa13403a8",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:34d5409a2ab6863d5dcf56dc40f83abc5ad8bcf41be06a6b0097ed0b858675bd",
      "bundle_path_digest": "sha256:34d5409a2ab6863d5dcf56dc40f83abc5ad8bcf41be06a6b0097ed0b858675bd",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "2.2.4",
      "creation_date": "2022-08-11T16:52:36.206000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.2.4-2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-11T16:52:36.206000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        }
      ],
      "provider": "Couchbase",
      "related_images": [
        {
          "digest": "sha256:8e152e8e4ce5bedf22f893bf127f5f882e1d02b0b9509b9114e349eb0716bca2",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:8e152e8e4ce5bedf22f893bf127f5f882e1d02b0b9509b9114e349eb0716bca2",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
          "name": "couchbase-server"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "couchbase-backup"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "couchbase-metrics"
        },
        {
          "digest": "sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "exporter-fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6-annotation"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "operator-backup-e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935-annotation"
        },
        {
          "digest": "sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
          "name": "server-76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.2.4-2",
      "version_original": "2.2.4-2"
    },
    {
      "_id": "62f5344630a80ba5a208256c",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:34d5409a2ab6863d5dcf56dc40f83abc5ad8bcf41be06a6b0097ed0b858675bd",
      "bundle_path_digest": "sha256:34d5409a2ab6863d5dcf56dc40f83abc5ad8bcf41be06a6b0097ed0b858675bd",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "2.2.4",
      "creation_date": "2022-08-11T16:54:30.756000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.2.4-2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-11T16:54:30.756000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        }
      ],
      "provider": "Couchbase",
      "related_images": [
        {
          "digest": "sha256:8e152e8e4ce5bedf22f893bf127f5f882e1d02b0b9509b9114e349eb0716bca2",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:8e152e8e4ce5bedf22f893bf127f5f882e1d02b0b9509b9114e349eb0716bca2",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
          "name": "couchbase-server"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "couchbase-backup"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "couchbase-metrics"
        },
        {
          "digest": "sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "exporter-fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6-annotation"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "operator-backup-e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935-annotation"
        },
        {
          "digest": "sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603",
          "name": "server-76f227833f929115adbbbc28988f721b2af9aa825219ee9429482a2287a91603-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.2.4-2",
      "version_original": "2.2.4-2"
    },
    {
      "_id": "62f580e5b289bcc7af66737a",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:85ad703bf5b64b3288b62c111432b83f55e4c74e604e1090e00cc393bb912665",
      "bundle_path_digest": "sha256:85ad703bf5b64b3288b62c111432b83f55e4c74e604e1090e00cc393bb912665",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-11T22:21:25.712000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-14T14:32:43.654000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "name": "prometurbo-operator-2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba-annotation"
        },
        {
          "digest": "sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.6.1",
      "version_original": "8.6.1"
    },
    {
      "_id": "62f58110e07d71e4beb61643",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:85ad703bf5b64b3288b62c111432b83f55e4c74e604e1090e00cc393bb912665",
      "bundle_path_digest": "sha256:85ad703bf5b64b3288b62c111432b83f55e4c74e604e1090e00cc393bb912665",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-11T22:22:08.109000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-14T14:34:04.920000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "name": "prometurbo-operator-2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba-annotation"
        },
        {
          "digest": "sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "8.6.1",
      "version_original": "8.6.1"
    },
    {
      "_id": "62f58111b289bcc7af66738f",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:85ad703bf5b64b3288b62c111432b83f55e4c74e604e1090e00cc393bb912665",
      "bundle_path_digest": "sha256:85ad703bf5b64b3288b62c111432b83f55e4c74e604e1090e00cc393bb912665",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-11T22:22:08.998000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-14T14:28:29.498000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "name": "prometurbo-operator-2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba-annotation"
        },
        {
          "digest": "sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "8.6.1",
      "version_original": "8.6.1"
    },
    {
      "_id": "62f5824ce07d71e4beb616bf",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:85ad703bf5b64b3288b62c111432b83f55e4c74e604e1090e00cc393bb912665",
      "bundle_path_digest": "sha256:85ad703bf5b64b3288b62c111432b83f55e4c74e604e1090e00cc393bb912665",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-11T22:27:24.795000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-14T14:42:44.586000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "name": "prometurbo-operator-2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba-annotation"
        },
        {
          "digest": "sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.6.1",
      "version_original": "8.6.1"
    },
    {
      "_id": "62f5850130a80ba5a20833fa",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:85ad703bf5b64b3288b62c111432b83f55e4c74e604e1090e00cc393bb912665",
      "bundle_path_digest": "sha256:85ad703bf5b64b3288b62c111432b83f55e4c74e604e1090e00cc393bb912665",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-11T22:38:57.660000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-14T14:35:18.927000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "name": "prometurbo-operator-2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba-annotation"
        },
        {
          "digest": "sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.6.1",
      "version_original": "8.6.1"
    },
    {
      "_id": "62f5852ae07d71e4beb6176f",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:85ad703bf5b64b3288b62c111432b83f55e4c74e604e1090e00cc393bb912665",
      "bundle_path_digest": "sha256:85ad703bf5b64b3288b62c111432b83f55e4c74e604e1090e00cc393bb912665",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-11T22:39:38.124000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-14T14:36:44.113000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "name": "prometurbo-operator-2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba-annotation"
        },
        {
          "digest": "sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:2eb7236b3d6e1efef857f215c9ec11ad29feaa139886887790ca63df2acf3eba",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:f9fe30d11306f4e3496c2592497eefe0b12c0ffea6243247097b52dd0eb8086f",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:433be1eecaa745ead1cf8c7c4b3a5bfe85e64d290b2771bf07a438e2d7be709d",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.6.1",
      "version_original": "8.6.1"
    },
    {
      "_id": "62f61f94b289bcc7af6688ee",
      "alm_examples": [
        {
          "api_version": "machinelearning.seldon.io/v1",
          "kind": "SeldonDeployment",
          "metadata": {
            "labels": {
              "app": "seldon",
              "app.kubernetes.io/instance": "seldon1",
              "app.kubernetes.io/name": "seldon",
              "app.kubernetes.io/version": "v0.5"
            },
            "name": "seldon-model"
          },
          "spec": {
            "name": "test-deployment",
            "predictors": [
              {
                "componentSpecs": [
                  {
                    "spec": {
                      "containers": [
                        {
                          "image": "seldonio/mock_classifier:1.6.0",
                          "name": "classifier"
                        }
                      ]
                    }
                  }
                ],
                "graph": {
                  "children": [],
                  "name": "classifier",
                  "type": "MODEL"
                },
                "name": "example",
                "replicas": 1
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:a24ea10686a2953e6bcbace4b094d01ec9bf21da50e020040bdbf17ce76b7c30",
      "bundle_path_digest": "sha256:a24ea10686a2953e6bcbace4b094d01ec9bf21da50e020040bdbf17ce76b7c30",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-12T09:38:28.787000+00:00",
      "csv_description": "The Seldon operator enables for native operation of production machine learning workloads, including monitoring and operations of language-agnostic models with the benefits of real-time metrics and log analysis.\n   \n## Overview\nSeldon Core is an open source platform for deploying machine learning models on a Kubernetes cluster.\n\n* Deploy machine learning models in the cloud or on-premise.\n* Get metrics and ensure proper governance and compliance for your running machine learning models.\n* Create powerful inference graphs made up of multiple components.\n* Provide a consistent serving layer for models built using heterogeneous ML toolkits.\n\nYou can get started by following the guides in our documentation at https://docs.seldon.io/projects/seldon-core/en/latest/workflow/README.html\n",
      "csv_display_name": "Seldon Operator",
      "csv_metadata_description": "The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.",
      "csv_name": "seldon-operator.v1.14.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:11:02.986000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        }
      ],
      "provider": "Seldon Technologies",
      "related_images": [
        {
          "digest": "sha256:41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282",
          "name": "seldon-core-operator-41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282-annotation"
        },
        {
          "digest": "sha256:41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282",
          "name": "manager"
        },
        {
          "digest": "sha256:0cdbe17a8d73b0dd9798e8acee9694282a3f4e9c2eb80b0c3bbc2958dbb452ab",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-executor@sha256:0cdbe17a8d73b0dd9798e8acee9694282a3f4e9c2eb80b0c3bbc2958dbb452ab",
          "name": "executor"
        },
        {
          "digest": "sha256:075230960142845dba8decfa007c8a48474aad8cc90317ff77192c8fa9c1b84d",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:075230960142845dba8decfa007c8a48474aad8cc90317ff77192c8fa9c1b84d",
          "name": "mock_classifier"
        },
        {
          "digest": "sha256:a0280c13136dcc870194af72630b9d2f7fc8bcff4edb54dd3bfbce36741af50c",
          "image": "registry.connect.redhat.com/seldonio/rclone-storage-initializer@sha256:a0280c13136dcc870194af72630b9d2f7fc8bcff4edb54dd3bfbce36741af50c",
          "name": "rclone_storage_initializer"
        },
        {
          "digest": "sha256:84a13b0c96d87f9d784bba1efae2d7a65453ebd6555359fa6d50e851a0520dc9",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver@sha256:84a13b0c96d87f9d784bba1efae2d7a65453ebd6555359fa6d50e851a0520dc9",
          "name": "sklearnserver"
        },
        {
          "digest": "sha256:246681e031cd1b5bcde5400d9d86e50daebc13c2db7d2568f641ef391fb66dab",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver@sha256:246681e031cd1b5bcde5400d9d86e50daebc13c2db7d2568f641ef391fb66dab",
          "name": "mlflowserver"
        },
        {
          "digest": "sha256:266c697d5349c7d636240aa139b25c53e403ded43bb8a3eef8e7e9e40215dff2",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver@sha256:266c697d5349c7d636240aa139b25c53e403ded43bb8a3eef8e7e9e40215dff2",
          "name": "xgboostserver"
        },
        {
          "digest": "sha256:d89faa03a12acf0028a2556ac4072a6d37ec3287d890396c99ebee076f64c519",
          "image": "registry.connect.redhat.com/seldonio/tfproxy@sha256:d89faa03a12acf0028a2556ac4072a6d37ec3287d890396c99ebee076f64c519",
          "name": "tfproxy"
        },
        {
          "digest": "sha256:747f7389db946fa331fb41f0cad84bfc3f7bff8cf189a7a69d08a888f50ae60e",
          "image": "registry.connect.redhat.com/seldonio/tensorflow-serving@sha256:747f7389db946fa331fb41f0cad84bfc3f7bff8cf189a7a69d08a888f50ae60e",
          "name": "tensorflow"
        },
        {
          "digest": "sha256:2ab919e49b61638cf0921b6efb0f4db55465b02833c83ade21d6c3f81b8fbcf2",
          "image": "registry.connect.redhat.com/seldonio/alibiexplainer@sha256:2ab919e49b61638cf0921b6efb0f4db55465b02833c83ade21d6c3f81b8fbcf2",
          "name": "explainer"
        },
        {
          "digest": "sha256:a0280c13136dcc870194af72630b9d2f7fc8bcff4edb54dd3bfbce36741af50c",
          "image": "registry.connect.redhat.com/seldonio/rclone-storage-initializer@sha256:a0280c13136dcc870194af72630b9d2f7fc8bcff4edb54dd3bfbce36741af50c",
          "name": "storage_initializer"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.14.1",
      "version_original": "1.14.1"
    },
    {
      "_id": "62f620134eed1a4804127bbe",
      "alm_examples": [
        {
          "api_version": "machinelearning.seldon.io/v1",
          "kind": "SeldonDeployment",
          "metadata": {
            "labels": {
              "app": "seldon",
              "app.kubernetes.io/instance": "seldon1",
              "app.kubernetes.io/name": "seldon",
              "app.kubernetes.io/version": "v0.5"
            },
            "name": "seldon-model"
          },
          "spec": {
            "name": "test-deployment",
            "predictors": [
              {
                "componentSpecs": [
                  {
                    "spec": {
                      "containers": [
                        {
                          "image": "seldonio/mock_classifier:1.6.0",
                          "name": "classifier"
                        }
                      ]
                    }
                  }
                ],
                "graph": {
                  "children": [],
                  "name": "classifier",
                  "type": "MODEL"
                },
                "name": "example",
                "replicas": 1
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:a24ea10686a2953e6bcbace4b094d01ec9bf21da50e020040bdbf17ce76b7c30",
      "bundle_path_digest": "sha256:a24ea10686a2953e6bcbace4b094d01ec9bf21da50e020040bdbf17ce76b7c30",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-12T09:40:35.388000+00:00",
      "csv_description": "The Seldon operator enables for native operation of production machine learning workloads, including monitoring and operations of language-agnostic models with the benefits of real-time metrics and log analysis.\n   \n## Overview\nSeldon Core is an open source platform for deploying machine learning models on a Kubernetes cluster.\n\n* Deploy machine learning models in the cloud or on-premise.\n* Get metrics and ensure proper governance and compliance for your running machine learning models.\n* Create powerful inference graphs made up of multiple components.\n* Provide a consistent serving layer for models built using heterogeneous ML toolkits.\n\nYou can get started by following the guides in our documentation at https://docs.seldon.io/projects/seldon-core/en/latest/workflow/README.html\n",
      "csv_display_name": "Seldon Operator",
      "csv_metadata_description": "The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.",
      "csv_name": "seldon-operator.v1.14.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:59:57.308000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        }
      ],
      "provider": "Seldon Technologies",
      "related_images": [
        {
          "digest": "sha256:41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282",
          "name": "seldon-core-operator-41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282-annotation"
        },
        {
          "digest": "sha256:41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282",
          "name": "manager"
        },
        {
          "digest": "sha256:0cdbe17a8d73b0dd9798e8acee9694282a3f4e9c2eb80b0c3bbc2958dbb452ab",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-executor@sha256:0cdbe17a8d73b0dd9798e8acee9694282a3f4e9c2eb80b0c3bbc2958dbb452ab",
          "name": "executor"
        },
        {
          "digest": "sha256:075230960142845dba8decfa007c8a48474aad8cc90317ff77192c8fa9c1b84d",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:075230960142845dba8decfa007c8a48474aad8cc90317ff77192c8fa9c1b84d",
          "name": "mock_classifier"
        },
        {
          "digest": "sha256:a0280c13136dcc870194af72630b9d2f7fc8bcff4edb54dd3bfbce36741af50c",
          "image": "registry.connect.redhat.com/seldonio/rclone-storage-initializer@sha256:a0280c13136dcc870194af72630b9d2f7fc8bcff4edb54dd3bfbce36741af50c",
          "name": "rclone_storage_initializer"
        },
        {
          "digest": "sha256:84a13b0c96d87f9d784bba1efae2d7a65453ebd6555359fa6d50e851a0520dc9",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver@sha256:84a13b0c96d87f9d784bba1efae2d7a65453ebd6555359fa6d50e851a0520dc9",
          "name": "sklearnserver"
        },
        {
          "digest": "sha256:246681e031cd1b5bcde5400d9d86e50daebc13c2db7d2568f641ef391fb66dab",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver@sha256:246681e031cd1b5bcde5400d9d86e50daebc13c2db7d2568f641ef391fb66dab",
          "name": "mlflowserver"
        },
        {
          "digest": "sha256:266c697d5349c7d636240aa139b25c53e403ded43bb8a3eef8e7e9e40215dff2",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver@sha256:266c697d5349c7d636240aa139b25c53e403ded43bb8a3eef8e7e9e40215dff2",
          "name": "xgboostserver"
        },
        {
          "digest": "sha256:d89faa03a12acf0028a2556ac4072a6d37ec3287d890396c99ebee076f64c519",
          "image": "registry.connect.redhat.com/seldonio/tfproxy@sha256:d89faa03a12acf0028a2556ac4072a6d37ec3287d890396c99ebee076f64c519",
          "name": "tfproxy"
        },
        {
          "digest": "sha256:747f7389db946fa331fb41f0cad84bfc3f7bff8cf189a7a69d08a888f50ae60e",
          "image": "registry.connect.redhat.com/seldonio/tensorflow-serving@sha256:747f7389db946fa331fb41f0cad84bfc3f7bff8cf189a7a69d08a888f50ae60e",
          "name": "tensorflow"
        },
        {
          "digest": "sha256:2ab919e49b61638cf0921b6efb0f4db55465b02833c83ade21d6c3f81b8fbcf2",
          "image": "registry.connect.redhat.com/seldonio/alibiexplainer@sha256:2ab919e49b61638cf0921b6efb0f4db55465b02833c83ade21d6c3f81b8fbcf2",
          "name": "explainer"
        },
        {
          "digest": "sha256:a0280c13136dcc870194af72630b9d2f7fc8bcff4edb54dd3bfbce36741af50c",
          "image": "registry.connect.redhat.com/seldonio/rclone-storage-initializer@sha256:a0280c13136dcc870194af72630b9d2f7fc8bcff4edb54dd3bfbce36741af50c",
          "name": "storage_initializer"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.14.1",
      "version_original": "1.14.1"
    },
    {
      "_id": "62f68f974eed1a4804128cd0",
      "alm_examples": [
        {
          "api_version": "loggers.coralogix.com/v1",
          "kind": "CoralogixLogger",
          "metadata": {
            "name": "coralogix-logger"
          },
          "spec": {
            "cluster_name": "cluster.local",
            "private_key": "00000000-0000-0000-0000-000000000000",
            "region": "Europe"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/coralogix/coralogix-operator-manifests-bundle@sha256:1dfd47a9a176674dde3810c843182741d6fcdef3f362922840e6d4a5418ac363",
      "bundle_path_digest": "sha256:1dfd47a9a176674dde3810c843182741d6fcdef3f362922840e6d4a5418ac363",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-12T17:36:23.678000+00:00",
      "csv_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_display_name": "Coralogix Operator",
      "csv_metadata_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_name": "coralogix-operator.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:56:19.184000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "coralogix-operator",
      "provided_apis": [
        {
          "group": "loggers.coralogix.com",
          "kind": "CoralogixLogger",
          "plural": "coralogixloggers",
          "version": "v1"
        }
      ],
      "provider": "Coralogix Ltd.",
      "related_images": [
        {
          "digest": "sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "name": "coralogix-operator"
        },
        {
          "digest": "sha256:925b2d97edd0681c10cc3cc61059e6fd17e68cb12f9386d4af50c1e380db422d",
          "image": "registry.connect.redhat.com/coralogix/coralogix-fluentd@sha256:925b2d97edd0681c10cc3cc61059e6fd17e68cb12f9386d4af50c1e380db422d",
          "name": "coralogix-fluentd"
        },
        {
          "digest": "sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "name": "coralogix-operator-fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479-annotation"
        },
        {
          "digest": "sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "62f68ff7e07d71e4beb63e6d",
      "alm_examples": [
        {
          "api_version": "loggers.coralogix.com/v1",
          "kind": "CoralogixLogger",
          "metadata": {
            "name": "coralogix-logger"
          },
          "spec": {
            "cluster_name": "cluster.local",
            "private_key": "00000000-0000-0000-0000-000000000000",
            "region": "Europe"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/coralogix/coralogix-operator-manifests-bundle@sha256:1dfd47a9a176674dde3810c843182741d6fcdef3f362922840e6d4a5418ac363",
      "bundle_path_digest": "sha256:1dfd47a9a176674dde3810c843182741d6fcdef3f362922840e6d4a5418ac363",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-12T17:37:59.826000+00:00",
      "csv_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_display_name": "Coralogix Operator",
      "csv_metadata_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_name": "coralogix-operator.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:53:34.419000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "coralogix-operator",
      "provided_apis": [
        {
          "group": "loggers.coralogix.com",
          "kind": "CoralogixLogger",
          "plural": "coralogixloggers",
          "version": "v1"
        }
      ],
      "provider": "Coralogix Ltd.",
      "related_images": [
        {
          "digest": "sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "name": "coralogix-operator"
        },
        {
          "digest": "sha256:925b2d97edd0681c10cc3cc61059e6fd17e68cb12f9386d4af50c1e380db422d",
          "image": "registry.connect.redhat.com/coralogix/coralogix-fluentd@sha256:925b2d97edd0681c10cc3cc61059e6fd17e68cb12f9386d4af50c1e380db422d",
          "name": "coralogix-fluentd"
        },
        {
          "digest": "sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "name": "coralogix-operator-fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479-annotation"
        },
        {
          "digest": "sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "62f690a2bb3b9bafa1343926",
      "alm_examples": [
        {
          "api_version": "loggers.coralogix.com/v1",
          "kind": "CoralogixLogger",
          "metadata": {
            "name": "coralogix-logger"
          },
          "spec": {
            "cluster_name": "cluster.local",
            "private_key": "00000000-0000-0000-0000-000000000000",
            "region": "Europe"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/coralogix/coralogix-operator-manifests-bundle@sha256:1dfd47a9a176674dde3810c843182741d6fcdef3f362922840e6d4a5418ac363",
      "bundle_path_digest": "sha256:1dfd47a9a176674dde3810c843182741d6fcdef3f362922840e6d4a5418ac363",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-12T17:40:50.541000+00:00",
      "csv_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_display_name": "Coralogix Operator",
      "csv_metadata_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_name": "coralogix-operator.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:28:55.575000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "coralogix-operator",
      "provided_apis": [
        {
          "group": "loggers.coralogix.com",
          "kind": "CoralogixLogger",
          "plural": "coralogixloggers",
          "version": "v1"
        }
      ],
      "provider": "Coralogix Ltd.",
      "related_images": [
        {
          "digest": "sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "name": "coralogix-operator"
        },
        {
          "digest": "sha256:925b2d97edd0681c10cc3cc61059e6fd17e68cb12f9386d4af50c1e380db422d",
          "image": "registry.connect.redhat.com/coralogix/coralogix-fluentd@sha256:925b2d97edd0681c10cc3cc61059e6fd17e68cb12f9386d4af50c1e380db422d",
          "name": "coralogix-fluentd"
        },
        {
          "digest": "sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "name": "coralogix-operator-fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479-annotation"
        },
        {
          "digest": "sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "62f6923c30a80ba5a2085af0",
      "alm_examples": [
        {
          "api_version": "loggers.coralogix.com/v1",
          "kind": "CoralogixLogger",
          "metadata": {
            "name": "coralogix-logger"
          },
          "spec": {
            "cluster_name": "cluster.local",
            "private_key": "00000000-0000-0000-0000-000000000000",
            "region": "Europe"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/coralogix/coralogix-operator-manifests-bundle@sha256:1dfd47a9a176674dde3810c843182741d6fcdef3f362922840e6d4a5418ac363",
      "bundle_path_digest": "sha256:1dfd47a9a176674dde3810c843182741d6fcdef3f362922840e6d4a5418ac363",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-12T17:47:40.557000+00:00",
      "csv_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_display_name": "Coralogix Operator",
      "csv_metadata_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_name": "coralogix-operator.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:27:09.654000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "coralogix-operator",
      "provided_apis": [
        {
          "group": "loggers.coralogix.com",
          "kind": "CoralogixLogger",
          "plural": "coralogixloggers",
          "version": "v1"
        }
      ],
      "provider": "Coralogix Ltd.",
      "related_images": [
        {
          "digest": "sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "name": "coralogix-operator"
        },
        {
          "digest": "sha256:925b2d97edd0681c10cc3cc61059e6fd17e68cb12f9386d4af50c1e380db422d",
          "image": "registry.connect.redhat.com/coralogix/coralogix-fluentd@sha256:925b2d97edd0681c10cc3cc61059e6fd17e68cb12f9386d4af50c1e380db422d",
          "name": "coralogix-fluentd"
        },
        {
          "digest": "sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "name": "coralogix-operator-fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479-annotation"
        },
        {
          "digest": "sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "62f6924cbb3b9bafa134393b",
      "alm_examples": [
        {
          "api_version": "loggers.coralogix.com/v1",
          "kind": "CoralogixLogger",
          "metadata": {
            "name": "coralogix-logger"
          },
          "spec": {
            "cluster_name": "cluster.local",
            "private_key": "00000000-0000-0000-0000-000000000000",
            "region": "Europe"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/coralogix/coralogix-operator-manifests-bundle@sha256:1dfd47a9a176674dde3810c843182741d6fcdef3f362922840e6d4a5418ac363",
      "bundle_path_digest": "sha256:1dfd47a9a176674dde3810c843182741d6fcdef3f362922840e6d4a5418ac363",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-12T17:47:56.467000+00:00",
      "csv_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_display_name": "Coralogix Operator",
      "csv_metadata_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_name": "coralogix-operator.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:11:34.935000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "coralogix-operator",
      "provided_apis": [
        {
          "group": "loggers.coralogix.com",
          "kind": "CoralogixLogger",
          "plural": "coralogixloggers",
          "version": "v1"
        }
      ],
      "provider": "Coralogix Ltd.",
      "related_images": [
        {
          "digest": "sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "name": "coralogix-operator"
        },
        {
          "digest": "sha256:925b2d97edd0681c10cc3cc61059e6fd17e68cb12f9386d4af50c1e380db422d",
          "image": "registry.connect.redhat.com/coralogix/coralogix-fluentd@sha256:925b2d97edd0681c10cc3cc61059e6fd17e68cb12f9386d4af50c1e380db422d",
          "name": "coralogix-fluentd"
        },
        {
          "digest": "sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "name": "coralogix-operator-fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479-annotation"
        },
        {
          "digest": "sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:fdb7b7c5beba42318c9f50e8a9748ea04e8a77a8a0186659de2bb90b93a94479",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "62fa3dade07d71e4beb6a1af",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.4",
      "creation_date": "2022-08-15T12:35:57.905000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:35:57.905000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    }
  ]
}

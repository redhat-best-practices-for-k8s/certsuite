name: Self Hosted Incoming Changes

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:
env:
  REGISTRY: quay.io
  REGISTRY_LOCAL: localhost
  TNF_IMAGE_NAME: testnetworkfunction/cnf-certification-test
  TNF_IMAGE_TAG: unstable
  OCT_IMAGE_NAME: testnetworkfunction/oct
  OCT_IMAGE_TAG: latest
  TNF_CONTAINER_CLIENT: docker
  TNF_NON_INTRUSIVE_ONLY: false
  TNF_ALLOW_PREFLIGHT_INSECURE: false
  TNF_DISABLE_CONFIG_AUTODISCOVER: false
  TNF_CONFIG_DIR: /tmp/tnf/config
  TNF_OUTPUT_DIR: /tmp/tnf/output
  TNF_SRC_URL: 'https://github.com/${{ github.repository }}'
  TESTING_CMD_PARAMS: '-n host -i ${REGISTRY_LOCAL}/${TNF_IMAGE_NAME}:${TNF_IMAGE_TAG} -t ${TNF_CONFIG_DIR} -o ${TNF_OUTPUT_DIR}'
  TNF_SMOKE_TESTS_LOG_LEVEL: trace
  ON_DEMAND_DEBUG_PODS: false
  TERM: xterm-color
  SMOKE_TESTS_GINKGO_LABELS_FILTER: '!affiliated-certification-container-is-certified-digest && !access-control-security-context'

jobs:
  smoke-tests-local:
    name: Run Local Smoke Tests
    runs-on: self-hosted
    env:
      SHELL: /bin/bash
      KUBECONFIG: '/home/tnf/.kube/config'
      PFLT_DOCKERCONFIG: '/home/tnf/.docker/config'

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      - name: Run initial setup
        uses: ./.github/actions/setup

      # Update the CNF containers, helm charts and operators DB
      - name: Update the CNF DB
        run: |
          docker pull ${REGISTRY}/${OCT_IMAGE_NAME}:${OCT_IMAGE_TAG}
          mkdir -p "${GITHUB_WORKSPACE}"/offline-db
          docker run -v "${GITHUB_WORKSPACE}"/offline-db:/tmp/dump:Z --env OCT_DUMP_ONLY=true ${REGISTRY}/${OCT_IMAGE_NAME}:${OCT_IMAGE_TAG}

      - name: Install ginkgo
        run: make install-tools

      - name: Build CNF test suite binary
        run: make build-cnf-tests

      # Create a Kind cluster for testing.
      - name: Check out `cnf-certification-test-partner`
        uses: actions/checkout@v4
        with:
          repository: test-network-function/cnf-certification-test-partner
          path: cnf-certification-test-partner

      - name: Bootstrap the Kind and OC/Kubectl binaries for the `local-test-infra`
        run: make bootstrap-cluster
        working-directory: cnf-certification-test-partner

      - name: Preemptively delete the Kind cluster
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: kind delete cluster

      - name: Prune docker resources
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: docker system prune --volumes -f

      - name: Create `local-test-infra` OpenShift resources
        run: make rebuild-cluster
        working-directory: cnf-certification-test-partner

      - name: Install partner resources
        run: make install
        working-directory: cnf-certification-test-partner

      # Perform smoke tests.
      - name: 'Test: Run test suites'
        run: TNF_LOG_LEVEL=${TNF_SMOKE_TESTS_LOG_LEVEL} ./run-cnf-suites.sh -l "${SMOKE_TESTS_GINKGO_LABELS_FILTER}"

      - name: Upload smoke test results as an artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: smoke-tests
          path: |
            cnf-certification-test/*.tar.gz

      - name: Build the `cnf-certification-test` image
        run: |
          make build-image-local
        env:
          IMAGE_TAG: ${TNF_IMAGE_TAG}

      - name: Create required TNF config files and directories
        run: |
          mkdir -p $TNF_CONFIG_DIR $TNF_OUTPUT_DIR
          cp cnf-certification-test/*.yml $TNF_CONFIG_DIR
        shell: bash

      - name: 'Test: Run without any TS, just get diagnostic information'
        run: TNF_LOG_LEVEL=${TNF_SMOKE_TESTS_LOG_LEVEL} ./run-tnf-container.sh ${{ env.TESTING_CMD_PARAMS }}

      - name: 'Test: Run Smoke Tests in a TNF container'
        run: TNF_LOG_LEVEL=${TNF_SMOKE_TESTS_LOG_LEVEL} ./run-tnf-container.sh ${{ env.TESTING_CMD_PARAMS }} -l "${SMOKE_TESTS_GINKGO_LABELS_FILTER}"

      - name: Upload container test results as an artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: smoke-tests-container
          path: |
            ${{ env.TNF_OUTPUT_DIR }}/*.tar.gz

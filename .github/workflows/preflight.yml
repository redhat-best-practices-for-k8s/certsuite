---
name: Preflight
'on':
  schedule:
    - cron: '0 0 * * *'
  # pull_request:
  #   branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  preflight-unstable:
    runs-on: ubuntu-24.04
    env:
      SHELL: /bin/bash
      IMAGE_NAME: quay.io/testnetworkfunction/cnf-certification-test:unstable

    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6

      - name: Set up Go 1.22
        uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version: 1.22.3

      - name: Disable default go problem matcher
        run: echo "::remove-matcher owner=go::"

      - name: Clone the preflight repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          repository: redhat-openshift-ecosystem/openshift-preflight
          path: openshift-preflight

      - name: Run preflight
        working-directory: openshift-preflight
        run: |
          make build
          ./preflight check container ${{ env.IMAGE_NAME }} --artifacts ${GITHUB_WORKSPACE}/openshift-preflight/artifacts

          ALLOWED_FAILURES=("HasLicense" "RunAsNonRoot")
          FAILURES=$(cat ${GITHUB_WORKSPACE}/openshift-preflight/artifacts/amd64/results.json | jq -r '.results.failed[].name')

          for FAILURE in $FAILURES; do
            FAILURE=$(echo $FAILURE | tr -d '"')
            if [[ ! "${ALLOWED_FAILURES[@]}" =~ "${FAILURE}" ]]; then
              echo >&2 "ERROR: $FAILURE is not an allowed failure"
              exit 1
            fi
          done

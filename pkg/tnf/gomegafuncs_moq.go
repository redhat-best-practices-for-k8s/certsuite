// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package tnf

import (
	"sync"
)

// Ensure, that GomegaFuncsMock does implement GomegaFuncs.
// If this is not the case, regenerate this file with moq.
var _ GomegaFuncs = &GomegaFuncsMock{}

// GomegaFuncsMock is a mock implementation of GomegaFuncs.
//
// 	func TestSomethingThatUsesGomegaFuncs(t *testing.T) {
//
// 		// make and configure a mocked GomegaFuncs
// 		mockedGomegaFuncs := &GomegaFuncsMock{
// 			GomegaExpectSliceBeNilFunc: func(incomingSlice []string)  {
// 				panic("mock out the GomegaExpectSliceBeNil method")
// 			},
// 			GomegaExpectStringNotEmptyFunc: func(incomingStr string)  {
// 				panic("mock out the GomegaExpectStringNotEmpty method")
// 			},
// 		}
//
// 		// use mockedGomegaFuncs in code that requires GomegaFuncs
// 		// and then make assertions.
//
// 	}
type GomegaFuncsMock struct {
	// GomegaExpectSliceBeNilFunc mocks the GomegaExpectSliceBeNil method.
	GomegaExpectSliceBeNilFunc func(incomingSlice []string)

	// GomegaExpectStringNotEmptyFunc mocks the GomegaExpectStringNotEmpty method.
	GomegaExpectStringNotEmptyFunc func(incomingStr string)

	// calls tracks calls to the methods.
	calls struct {
		// GomegaExpectSliceBeNil holds details about calls to the GomegaExpectSliceBeNil method.
		GomegaExpectSliceBeNil []struct {
			// IncomingSlice is the incomingSlice argument value.
			IncomingSlice []string
		}
		// GomegaExpectStringNotEmpty holds details about calls to the GomegaExpectStringNotEmpty method.
		GomegaExpectStringNotEmpty []struct {
			// IncomingStr is the incomingStr argument value.
			IncomingStr string
		}
	}
	lockGomegaExpectSliceBeNil     sync.RWMutex
	lockGomegaExpectStringNotEmpty sync.RWMutex
}

// GomegaExpectSliceBeNil calls GomegaExpectSliceBeNilFunc.
func (mock *GomegaFuncsMock) GomegaExpectSliceBeNil(incomingSlice []string) {
	if mock.GomegaExpectSliceBeNilFunc == nil {
		panic("GomegaFuncsMock.GomegaExpectSliceBeNilFunc: method is nil but GomegaFuncs.GomegaExpectSliceBeNil was just called")
	}
	callInfo := struct {
		IncomingSlice []string
	}{
		IncomingSlice: incomingSlice,
	}
	mock.lockGomegaExpectSliceBeNil.Lock()
	mock.calls.GomegaExpectSliceBeNil = append(mock.calls.GomegaExpectSliceBeNil, callInfo)
	mock.lockGomegaExpectSliceBeNil.Unlock()
	mock.GomegaExpectSliceBeNilFunc(incomingSlice)
}

// GomegaExpectSliceBeNilCalls gets all the calls that were made to GomegaExpectSliceBeNil.
// Check the length with:
//     len(mockedGomegaFuncs.GomegaExpectSliceBeNilCalls())
func (mock *GomegaFuncsMock) GomegaExpectSliceBeNilCalls() []struct {
	IncomingSlice []string
} {
	var calls []struct {
		IncomingSlice []string
	}
	mock.lockGomegaExpectSliceBeNil.RLock()
	calls = mock.calls.GomegaExpectSliceBeNil
	mock.lockGomegaExpectSliceBeNil.RUnlock()
	return calls
}

// GomegaExpectStringNotEmpty calls GomegaExpectStringNotEmptyFunc.
func (mock *GomegaFuncsMock) GomegaExpectStringNotEmpty(incomingStr string) {
	if mock.GomegaExpectStringNotEmptyFunc == nil {
		panic("GomegaFuncsMock.GomegaExpectStringNotEmptyFunc: method is nil but GomegaFuncs.GomegaExpectStringNotEmpty was just called")
	}
	callInfo := struct {
		IncomingStr string
	}{
		IncomingStr: incomingStr,
	}
	mock.lockGomegaExpectStringNotEmpty.Lock()
	mock.calls.GomegaExpectStringNotEmpty = append(mock.calls.GomegaExpectStringNotEmpty, callInfo)
	mock.lockGomegaExpectStringNotEmpty.Unlock()
	mock.GomegaExpectStringNotEmptyFunc(incomingStr)
}

// GomegaExpectStringNotEmptyCalls gets all the calls that were made to GomegaExpectStringNotEmpty.
// Check the length with:
//     len(mockedGomegaFuncs.GomegaExpectStringNotEmptyCalls())
func (mock *GomegaFuncsMock) GomegaExpectStringNotEmptyCalls() []struct {
	IncomingStr string
} {
	var calls []struct {
		IncomingStr string
	}
	mock.lockGomegaExpectStringNotEmpty.RLock()
	calls = mock.calls.GomegaExpectStringNotEmpty
	mock.lockGomegaExpectStringNotEmpty.RUnlock()
	return calls
}
